<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConoHaNet</name>
    </assembly>
    <members>
        <member name="T:ConoHaNet.Exceptions.SnapshotEnteredErrorStateException">
            <summary>
            Represents errors that occur when a snapshot enters an error state while waiting
            on it to enter a particular state.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Exceptions.SnapshotEnteredErrorStateException.Status">
            <summary>
            Gets the error state the snapshot entered.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.SnapshotState"/>
        </member>
        <member name="M:ConoHaNet.Exceptions.SnapshotEnteredErrorStateException.#ctor(ConoHaNet.Objects.SnapshotState)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Exceptions.SnapshotEnteredErrorStateException"/> with the
            specified snapshot state.
            </summary>
            <param name="status">The erroneous snapshot state.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Exceptions.VolumeEnteredErrorStateException">
            <summary>
            Represents errors that occur when a volume enters an error state while waiting
            on it to enter a particular state.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Exceptions.VolumeEnteredErrorStateException.Status">
            <summary>
            Gets the error state the volume entered.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/>
        </member>
        <member name="M:ConoHaNet.Exceptions.VolumeEnteredErrorStateException.#ctor(ConoHaNet.Objects.BlockStorage.VolumeState)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Exceptions.VolumeEnteredErrorStateException"/> with the
            specified volume state.
            </summary>
            <param name="status">The erroneous volume state.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Extensions.ResponseExtensions">
            <summary>
            Contains extension methods to the <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> class.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Extensions.ResponseExtensions.JsonContentType">
            <summary>
            The content type used for standard JSON requests and responses.
            </summary>
        </member>
        <member name="M:ConoHaNet.Extensions.ResponseExtensions.TryGetHeader(JSIStudios.SimpleRESTServices.Client.Response,System.Net.HttpResponseHeader,System.String@)">
            <summary>
            Retrieves a standard HTTP response header from a REST response, if available.
            </summary>
            <param name="response">The REST response.</param>
            <param name="header">The header to retrieve.</param>
            <param name="value">Returns the value for <paramref name="header"/>.</param>
            <returns><see langword="true"/> if the specified header is contained in <paramref name="response"/>, otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="response"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Extensions.ResponseExtensions.TryGetHeader(JSIStudios.SimpleRESTServices.Client.Response,System.String,System.String@)">
            <summary>
            Retrieves a custom HTTP response header from a REST response, if available.
            </summary>
            <param name="response">The REST response.</param>
            <param name="header">The header to retrieve.</param>
            <param name="value">Returns the value for <paramref name="header"/>.</param>
            <returns><see langword="true"/> if the specified header is contained in <paramref name="response"/>, otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="response"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Extensions.ResponseExtensions.HasJsonBody(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            This method checks if a REST <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> contains a JSON-formatted body.
            The response is assumed to be JSON if the content type is reported as <c>application/json</c>
            and the body is not empty.
            </summary>
            <param name="response">The REST response.</param>
            <returns><see langword="true"/> if <paramref name="response"/> contains a JSON response body, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:ConoHaNet.Extensions.DateTimeOffsetExtensions">
            <summary>
            This class provides utility methods for converting between Unix timestamps and
            <see cref="T:System.DateTimeOffset"/> objects.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch">
            <summary>
            The Epoch used as a reference for Unix timestamps and file times.
            </summary>
        </member>
        <member name="M:ConoHaNet.Extensions.DateTimeOffsetExtensions.ToDateTimeOffset(System.Int64)">
            <summary>
            Converts a Unix timestamp (number of milliseconds since the <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/>) to a <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="timestamp">The Unix timestamp.</param>
            <returns>A <see cref="T:System.DateTimeOffset"/> representation of the timestamp.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timestamp"/> is less than 0.</exception>
        </member>
        <member name="M:ConoHaNet.Extensions.DateTimeOffsetExtensions.ToTimestamp(System.DateTimeOffset)">
            <summary>
            Converts a <see cref="T:System.DateTimeOffset"/> value to a Unix-style timestamp (number of milliseconds since the <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/>).
            </summary>
            <param name="dateTimeOffset">The <see cref="T:System.DateTimeOffset"/> to convert.</param>
            <returns>The number of milliseconds since the <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/> until the time indicated by <paramref name="dateTimeOffset"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="dateTimeOffset"/> occurs before <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Extensions.DateTimeOffsetExtensions.ToDateTimeOffset(System.Nullable{System.Int64})">
            <summary>
            Converts a Unix timestamp (number of milliseconds since the <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/>) to a <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="timestamp">The Unix timestamp, or <see langword="null"/>.</param>
            <returns>A <see cref="T:System.DateTimeOffset"/> representation of the timestamp, or <see langword="null"/> if <paramref name="timestamp"/> is <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timestamp"/> is less than 0.</exception>
        </member>
        <member name="M:ConoHaNet.Extensions.DateTimeOffsetExtensions.ToTimestamp(System.Nullable{System.DateTimeOffset})">
            <summary>
            Converts a <see cref="T:System.DateTimeOffset"/> value to a Unix-style timestamp (number of milliseconds since the <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/>).
            </summary>
            <param name="dateTimeOffset">The <see cref="T:System.DateTimeOffset"/> to convert, or <see langword="null"/>.</param>
            <returns>The number of milliseconds since the <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/> until the time indicated by <paramref name="dateTimeOffset"/>, or <see langword="null"/> if <paramref name="dateTimeOffset"/> is <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="dateTimeOffset"/> occurs before <see cref="F:ConoHaNet.Extensions.DateTimeOffsetExtensions.Epoch"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.AuthenticationType">
            <summary>
            Represents the way a user has authenticated.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known authentication types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.AuthenticationType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.AuthenticationType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.AuthenticationType"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.AuthenticationType.Password">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.AuthenticationType"/> representing that a user authenticated using a password.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.AuthenticationType.RSA">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.AuthenticationType"/> representing that a user authenticated using an RSA key.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.AuthenticationType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.AuthenticationType"/> objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.AuthenticationType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.BulkDeletionException">
            <summary>
            Represents errors which occur during a bulk delete operation.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.BulkDelete(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BulkDeletionException.Results">
            <summary>
            Gets the detailed results of the bulk delete operation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.BulkDeletionException.#ctor(System.String,ConoHaNet.Objects.File.BulkDeletionResults)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.BulkDeletionException"/> class
            with the specified status and results.
            </summary>
            <param name="status">A description of the status of the operation.</param>
            <param name="results">The results of the bulk delete operation.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="status"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="results"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="status"/> is empty.
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.CloudFilesValidator">
            <summary>
            Provides an implementation of <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> for
            operation with ConoHa's Cloud Files product.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Objects.CloudFilesValidator._default">
            <summary>
            A default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator"/>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.CloudFilesValidator.Default">
            <summary>
            Gets a default instance of <see cref="T:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.CloudFilesValidator.ValidateContainerName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.CloudFilesValidator.ValidateObjectName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.CloudNetwork">
            <summary>
            Represents the detailed information for a labeled network in Rackspace Cloud Networks.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/ch_overview.html">Overview (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.CloudNetwork.Id">
            <summary>
            Gets the network ID.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.CloudNetwork.Cidr">
            <summary>
            Gets the CIDR for the network.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.CloudNetwork.Label">
            <summary>
            Gets the name of the network.
            </summary>
            <remarks>
            The Rackspace Cloud Networks product predefines two networks:
            <list type="bullet">
            <item><newTerm>PublicNet</newTerm> provides access to the Internet, Rackspace services such as Cloud Monitoring, Managed Cloud Support, RackConnect, Cloud Backup, and certain operating system updates. When you list networks through Cloud Networks, PublicNet is labeled <c>public</c>.</item>
            <item><newTerm>ServiceNet</newTerm> Provides access to Rackspace services such as Cloud Files, Cloud Databases, and Cloud Backup, and to certain packages and patches through an internal only, multi-tenant network connection within each Rackspace data center. When you list networks through Cloud Networks, ServiceNet is labeled as <c>private</c>.</item>
            </list>
            </remarks>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/ch_overview.html">Overview (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.ContainerCDN">
            <summary>
            Provides the CDN properties for a container in an Object Storage provider.
            </summary>
            <remarks>
            <note>
            CDN-enabled containers are a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN_Container_Services-d1e2632.html">CDN Container Services (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.Name">
            <summary>
            Gets the name of the container.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.CDNStreamingUri">
            <summary>
            Gets a streaming URL suitable for use in links to content you want to stream, such as video. If streaming is not available, the value is <see langword="null"/>.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Streaming-CDN-Enabled_Containers-d1f3721.html">Streaming CDN-Enabled Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.CDNSslUri">
            <summary>
            Gets a URL SSL URL for accessing the container on the CDN. If SSL is not available, the value is <see langword="null"/>.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/CDN-Enabled_Containers_Served_via_SSL-d1e2821.html">CDN-Enabled Containers Served through SSL (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled">
            <summary>
            Gets a value indicating whether or not the container is CDN-Enabled.
            </summary>
            <value>
            <see langword="true"/> if the container is CDN-Enabled; otherwise, <see langword="false"/>.
            </value>
            <seealso cref="O:net.openstack.Core.Providers.IObjectStorageProvider.EnableCDNOnContainer"/>
            <seealso cref="M:ConoHaNet.Providers.IObjectStorageProvider.DisableCDNOnContainer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/PUT_enableDisableCDNcontainer_v1__account___container__CDN_Container_Services-d1e2632.html">CDN-Enable and CDN-Disable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.Ttl">
            <summary>
            Gets the Time To Live (TTL) in seconds for a CDN-Enabled container.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/PUT_enableDisableCDNcontainer_v1__account___container__CDN_Container_Services-d1e2632.html">CDN-Enable and CDN-Disable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.LogRetention">
            <summary>
            Gets a value indicating whether or not log retention is enabled for a CDN-Enabled container.
            </summary>
            <remarks>
            This setting specifies whether the CDN access logs should be collected and stored in the Cloud Files storage system.
            </remarks>
            <value>
            <see langword="true"/> if log retention is enabled for the container; otherwise, <see langword="false"/>.
            </value>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.CDNUri">
            <summary>
            Gets a publicly accessible URL for the container, which can be combined with any object name within the container to form the publicly accessible URL for that object for distribution over a CDN system.
            </summary>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerCDN.CDNIosUri">
            <summary>
            Gets a publicly accessible URL for the container for use in streaming content to iOS devices. If iOS streaming is not available for the container, the value is <see langword="null"/>.
            </summary>
            <remarks>
            The <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNIosUri"/> may be combined with any object name within the container to form the publicly accessible URL for streaming that object to iOS devices.
            </remarks>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/iOS-Streaming-d1f3725.html">iOS Streaming (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.ContainerCDN.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ContainerCDN"/> class with the specified properties.
            </summary>
            <param name="name">The name of the container (see <see cref="P:ConoHaNet.Objects.ContainerCDN.Name"/>).</param>
            <param name="uri">The URI of the container (see <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNUri"/>).</param>
            <param name="streamingUri">A streaming URL (see <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNStreamingUri"/>).</param>
            <param name="sslUri">An SSL URL (see <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNSslUri"/>).</param>
            <param name="iosUri">The iOS URI of the container (see <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNIosUri"/>).</param>
            <param name="enabled">Whether or not the container is CDN-enabled (see <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/>).</param>
            <param name="ttl">The time-to-live (see <see cref="P:ConoHaNet.Objects.ContainerCDN.Ttl"/>).</param>
            <param name="logRetention">Whether or not log retention is enabled (see <see cref="P:ConoHaNet.Objects.ContainerCDN.LogRetention"/>).</param>
        </member>
        <member name="T:ConoHaNet.Objects.ContainerObject">
            <summary>
            Provides the details of an object stored in an Object Storage provider.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showContainerDetails_v1__account___container__storage_container_services.html">Show container details and list objects (OpenStack Object Storage API v1 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerObject.Name">
            <summary>
            Gets a "name" associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showContainerDetails_v1__account___container__storage_container_services.html">Show container details and list objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerObject.Hash">
            <summary>
            Gets the "hash" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showContainerDetails_v1__account___container__storage_container_services.html">Show container details and list objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerObject.Bytes">
            <summary>
            Gets the "bytes" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showContainerDetails_v1__account___container__storage_container_services.html">Show container details and list objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerObject.ContentType">
            <summary>
            Gets the "content type" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showContainerDetails_v1__account___container__storage_container_services.html">Show container details and list objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ContainerObject.LastModified">
            <summary>
            Gets the "last modified" value associated with the object.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showContainerDetails_v1__account___container__storage_container_services.html">Show container details and list objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.BillingInvoice">
            <summary>
            This class models the JSON representation of an Alarm resource in the IMonitoringService.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Alarms</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.Billing.BillingInvoice.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Billing.BillingInvoice"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.Items">
            <summary>
            Gets the "items" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.AccountId">
            <summary>
            Gets the "account_id" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.BrandId">
            <summary>
            Gets the "brand_id" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.InvoiceId">
            <summary>
            Gets the "invoice_id" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.InvoiceType">
            <summary>
            Gets the "invoice_type" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.PaymentMethodType">
            <summary>
            Gets the "payment_method_type" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.InvoiceDate">
            <summary>
            Gets the "invoice_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.Bill">
            <summary>
            Gets the "bill" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.Tax">
            <summary>
            Gets the "tax" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.BillPlasTax">
            <summary>
            Gets the "bill_plas_tax" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.BalanceBill">
            <summary>
            Gets the "balance_bill" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.BalanceBillPlasTax">
            <summary>
            Gets the "balance_bill_plas_tax" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.Currency">
            <summary>
            Gets the "currency" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.DueDate">
            <summary>
            Gets the "due_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.ReceiveType">
            <summary>
            Gets the "receive_type" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.CreatedDate">
            <summary>
            Gets the "created_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.CreatedBy">
            <summary>
            Gets the "created_by" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.LastUpdatedDate">
            <summary>
            Gets the "last_updated_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.BillingInvoice.LastUpdatedBy">
            <summary>
            Gets the "last_updated_by" property of this information.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.ListBillingInvoicesResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
            <summary>
            This models the basic JSON description of a Product.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.GetBillingInvoiceResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.NotificationCode">
            <summary>
            Gets the "notification_code" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.LanguageName">
            <summary>
            Gets the "language_name" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.Title">
            <summary>
            Gets the "title" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.Type">
            <summary>
            Gets the "type" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.Contents">
            <summary>
            Gets the "contents" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.DistributionMethod">
            <summary>
            Gets the "distribution_method" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.PageName">
            <summary>
            Gets the "page_name" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.ReadStatus">
            <summary>
            Gets the "read_status" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.CreatedDate">
            <summary>
            Gets the "created_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.CreatedBy">
            <summary>
            Gets the "created_by" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.LastUpdatedDate">
            <summary>
            Gets the "last_updated_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Notification.LastUpdatedBy">
            <summary>
            Gets the "last_updated_by" property of this information.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.ListNotificationsResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
            <summary>
            This models the basic JSON description of a Product.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.GetNotificationResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.GetNotificationResponse.Notification">
            <summary>
            Gets information about the created server.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Billing.OrderItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Billing.OrderItem"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.GetOrderItemResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.ListOrderItemsResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.Payment">
            <summary>
            This class models the JSON representation of an resource in the <see cref="T:ConoHaNet.Objects.Billing.Payment"/>.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Alarms</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.Billing.Payment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Billing.Payment"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Payment.TotalReceivedAmount">
            <summary>
            TotalReceivedAmount
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Payment.TotalUnusedAmount">
            <summary>
            TotalUnusedAmount
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Payment.TotalDepositAmount">
            <summary>
            TotalDepositAmount
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.Payment.TotalLockedUnusedAmount">
            <summary>
            TotalLockedUnusedAmount
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.ListPaymentHistoryResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
            <summary>
            This models the basic JSON description of a Product.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.GetPaymentSummaryResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.PaymentSummary">
            <summary>
            This class models the JSON representation of an Alarm resource in the IMonitoringService.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Alarms</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.Billing.PaymentSummary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Billing.PaymentSummary"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.PaymentSummary.TotalReceivedAmount">
            <summary>
            TotalReceivedAmount
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.PaymentSummary.TotalUnusedAmount">
            <summary>
            TotalUnusedAmount
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.PaymentSummary.TotalDepositAmount">
            <summary>
            TotalDepositAmount
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.PaymentSummary.TotalLockedUnusedAmount">
            <summary>
            TotalLockedUnusedAmount
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.ListProductsResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.SimpleOrderItem">
            <summary>
            This class models the JSON representation of an order item resource in the <see cref="T:ConoHaNet.Providers.IAccountServiceProvider"/>.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Alarms</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.Billing.SimpleOrderItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="N:ConoHaNet.Objects.Database"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimpleOrderItem.Id">
            <summary>
            Gets the "item_id" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimpleOrderItem.ServiceName">
            <summary>
            Gets the "service_name" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimpleOrderItem.ServiceStartDate">
            <summary>
            Gets the "service_start_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimpleOrderItem.ItemStatus">
            <summary>
            Gets the "item_status" property of this information.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Billing.SimplePayment">
            <summary>
            This class models the JSON representation of an Alarm resource in the IMonitoringService.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Alarms</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.Billing.SimplePayment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Billing.SimplePayment"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimplePayment.MoneyId">
            <summary>
            Gets the "money_id" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimplePayment.MoneyType">
            <summary>
            Gets the "money_type" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimplePayment.ReceivedAmount">
            <summary>
            Gets the "received_amount" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimplePayment.UnusedAmount">
            <summary>
            Gets the "unused_amount" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimplePayment.DepositAmount">
            <summary>
            Gets the "deposit_amount" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimplePayment.ReceivedDate">
            <summary>
            Gets the "received_date" property of this information.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Billing.SimplePayment.IsLockeced">
            <summary>
            Gets the "is_locked" property of this information.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeRequest">
            <summary>
            This models the JSON request used for the Create Volume request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeRequest.CreateCloudBlockStorageVolumeDetails">
            <summary>
            Gets additional details about the Create Volume request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeRequest.#ctor(ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails">
            <summary>
            This models the JSON body containing details for the Create Volume request.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.Size">
            <summary>
            Gets the size of the volume in GB.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.SourceVolumeId">
            <summary>
            Get Source Volume Id
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.Description">
            <summary>
            Gets the display description of the volume.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.Name">
            <summary>
            Gets the display name of the volume.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.SnapshotId">
            <summary>
            Gets the ID of the snapshot to create the volume from, if any.
            </summary>
            <value>The ID of the snapshot to create the volume from, or <see langword="null"/> if the volume is not created from a snapshot.</value>
            <seealso cref="P:ConoHaNet.Objects.Snapshot.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.VolumeType">
            <summary>
            Gets the ID of the type of volume to create.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.VolumeType.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.ImageRef">
            <summary>
            Gets the ID of the type of volume to create.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.VolumeType.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.Bootable">
            <summary>
            
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageVolumeDetails"/> class.
            </summary>
            <param name="size">The size of the volume in GB.</param>
            <param name="sourceVolumeId"></param>
            <param name="description">A description of the volume.</param>
            <param name="name">The name of the volume.</param>
            <param name="snapshotId">The snapshot from which to create a volume. The value should be <see langword="null"/> or obtained from <see cref="P:ConoHaNet.Objects.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="volumeType">The type of volume to create. If not defined, then the default is used. The value should be <see langword="null"/> or obtained from <see cref="P:ConoHaNet.Objects.VolumeType.Id">VolumeType.Id</see>.</param>
            <param name="imageRef"></param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="size"/> is less than or equal to zero.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.GetCloudBlockStorageVolumeResponse">
            <summary>
            This models the JSON response used for the Create Volume and Show Volume requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Volume.html">Show Volume (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.GetCloudBlockStorageVolumeResponse.Volume">
            <summary>
            Gets additional information about the volume.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.GetCloudBlockStorageVolumeTypeResponse">
            <summary>
            This models the JSON response used for the Show Volume Type request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_Show_Type.html">Show Volume Type (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.GetCloudBlockStorageVolumeTypeResponse.VolumeType">
            <summary>
            Gets additional information about the volume type.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotRequest">
            <summary>
            This models the JSON request used for the Create Snapshot request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotRequest.CreateCloudBlockStorageSnapshotDetails">
            <summary>
            Gets additional details about the Create Snapshot request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotRequest.#ctor(ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails">
            <summary>
            This models the JSON body containing details for the Create Snapshot request.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails.VolumeId">
            <summary>
            Gets the ID of the volume to snapshot.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails.Force">
            <summary>
            Gets a value indicating whether to create the snapshot even while the volume is attached to an active server.
            </summary>
            <value><see langword="true"/> to create the snapshot even if the server is running; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails.DisplayName">
            <summary>
            Gets the display name of the snapshot.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails.DisplayDescription">
            <summary>
            Gets the display description of the snapshot.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.BlockStorage.CreateCloudBlockStorageSnapshotDetails"/>
            class with the specified volume ID, name, description, and value indicating whether or
            not to create the snapshot even if the volume is attached to an active server.
            </summary>
            <param name="volumeId">The ID of the volume to snapshot. The value should be obtained from <see cref="P:ConoHaNet.Objects.Volume.Id">Volume.Id</see>.</param>
            <param name="force"><see langword="true"/> to create the snapshot even if the volume is attached to an active server; otherwise, <see langword="false"/>.</param>
            <param name="displayName">Name of the snapshot.</param>
            <param name="displayDescription">Description of snapshot.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.GetCloudBlockStorageSnapshotResponse">
            <summary>
            This models the JSON response used for the Create Snapshot and Show Snapshot requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Snapshot.html">Show Snapshot (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.GetCloudBlockStorageSnapshotResponse.Snapshot">
            <summary>
            Gets information about the snapshot.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1">
            <summary>
            Represents a unique identifier within the context of a cloud services provider.
            </summary>
            <typeparam name="T">The resource identifier type.</typeparam>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1._id">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.Value"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.#ctor(System.String)">
            <summary>
            Initialized a new instance of the <see cref="T:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1"/> class
            with the specified identifier.
            </summary>
            <param name="id">The resource identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.op_Equality(ConoHaNet.Objects.BlockStorage.ResourceIdentifier{`0},ConoHaNet.Objects.BlockStorage.ResourceIdentifier{`0})">
            <summary>
            Determines whether two specified resource identifiers have the same value.
            </summary>
            <param name="left">The first resource identifier to compare, or <see langword="null"/>.</param>
            <param name="right">The second resource identifier to compare, or <see langword="null"/>.</param>
            <returns><see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.op_Inequality(ConoHaNet.Objects.BlockStorage.ResourceIdentifier{`0},ConoHaNet.Objects.BlockStorage.ResourceIdentifier{`0})">
            <summary>
            Determines whether two specified resource identifiers have different values.
            </summary>
            <param name="left">The first resource identifier to compare, or <see langword="null"/>.</param>
            <param name="right">The second resource identifier to compare, or <see langword="null"/>.</param>
            <returns><see langword="true"/> if the value of <paramref name="left"/> is different from the value of <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.Value">
            <summary>
            Gets the value of this resource identifier.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.Equals(`0)">
             <inheritdoc/>
             <remarks>
             The default implementation uses <see cref="P:System.StringComparer.Ordinal"/> to compare
             the <see cref="P:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.Value"/> property of two identifiers.
            
             <note type="implement">
             This method may be overridden to change the way unique identifiers are compared.
             </note>
             </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.GetHashCode">
             <inheritdoc/>
             <remarks>
             The default implementation uses <see cref="P:System.StringComparer.Ordinal"/> to calculate
             and return a hash code from the <see cref="P:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.Value"/> property.
            
             <note type="implement">
             This method may be overridden to change the way unique identifiers are compared.
             </note>
             </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.ConverterBase">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.ConverterBase.ConvertToString(`0)">
            <remarks>
            This method uses <see cref="P:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.Value"/> for serialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.ConverterBase.ConvertToObject(System.String)">
            <remarks>
            If <paramref name="str"/> is <see langword="null"/> or an empty string, this method returns <see langword="null"/>.
            Otherwise, this method uses <see cref="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.ConverterBase.FromValue(System.String)"/> for deserialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.ResourceIdentifier`1.ConverterBase.FromValue(System.String)">
            <summary>
            Creates a resource identifier with the given value.
            </summary>
            <param name="id">The resource identifier value. This value is never <see langword="null"/> or empty.</param>
            <returns>An instance of <typeparamref name="T"/> corresponding representing the specified <paramref name="id"/>.</returns>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1">
            <summary>
            Provides a base class for JSON converters that represent serialized objects
            as a simple string.
            </summary>
            <typeparam name="T">The deserialized object type.</typeparam>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Serialization is performed by calling <see cref="M:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1.ConvertToString(`0)"/> and writing
            the result as a string value.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Deserialization is performed by reading the raw value as a string and using
            <see cref="M:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1.ConvertToObject(System.String)"/> to convert it to an object of type
            <typeparamref name="T"/>.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1.CanConvert(System.Type)">
            <returns><see langword="true"/> if <paramref name="objectType"/> equals <typeparamref name="T"/>; otherwise, <see langword="false"/>.</returns>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1.ConvertToString(`0)">
            <summary>
            Serializes an object of type <typeparamref name="T"/> to a string value.
            </summary>
            <remarks>
            The default implementation returns the result of calling <see cref="M:System.Object.ToString"/>.
            </remarks>
            <param name="obj">The object to serialize.</param>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.SimpleStringJsonConverter`1.ConvertToObject(System.String)">
            <summary>
            Deserializes a string value to an object of type <typeparamref name="T"/>.
            </summary>
            <param name="str">The string to deserialize.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.ListSnapshotResponse">
            <summary>
            This models the JSON response used for the List Snapshot Summaries request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Snapshots.html">List Snapshot Summaries (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.ListSnapshotResponse.Snapshots">
            <summary>
            Gets a collection of information about the snapshots.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.VolumeState">
            <summary>
            Represents the state of a block storage volume.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known volume states,
            with added support for unknown states returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.VolumeState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.VolumeState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.Creating">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating the volume is being created.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.Available">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating the volume is ready to be attached to an instance.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.Attaching">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating the volume is attaching to an instance.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.InUse">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating the volume is attached to an instance.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.Deleting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating the volume is being deleted.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.Error">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating an error occurred during volume creation.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.ErrorDeleting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating an error occurred during volume deletion.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.BackingUp">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating the volume is being backed-up.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.RestoringBackup">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating a backup is being restored to the volume.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.BlockStorage.VolumeState.ErrorRestoring">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/> indicating an error occurred during backup restoration to a volume.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.BlockStorage.VolumeState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.BlockStorage.VolumeState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Container">
            <summary>
            Represents the detailed information for a container stored in an Object Storage Provider.
            </summary>
            <seealso cref="T:ConoHaNet.Providers.IObjectStorageProvider"/>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showAccountDetails_v1__account__storage_account_services.html">Show account details and list containers (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listcontainers_v1__account__accountServicesOperations_d1e000.html">Show Account Details and List Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Container.Name">
            <summary>
            Gets the name of the container.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showAccountDetails_v1__account__storage_account_services.html">Show account details and list containers (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listcontainers_v1__account__accountServicesOperations_d1e000.html">Show Account Details and List Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Container.Count">
            <summary>
            Gets the number of objects in the container.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <remarks>
            This field is <see href="http://en.wikipedia.org/wiki/Eventual_consistency">eventually consistent</see>.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showAccountDetails_v1__account__storage_account_services.html">Show account details and list containers (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listcontainers_v1__account__accountServicesOperations_d1e000.html">Show Account Details and List Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Container.Bytes">
            <summary>
            Gets the total space utilized by the objects in this container.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <remarks>
            This field is <see href="http://en.wikipedia.org/wiki/Eventual_consistency">eventually consistent</see>.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showAccountDetails_v1__account__storage_account_services.html">Show account details and list containers (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listcontainers_v1__account__accountServicesOperations_d1e000.html">Show Account Details and List Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.File.ArchiveFormat">
            <summary>
            Represents a archive format for the Cloud Files Extract Archive operation.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known archive types,
            with added support for unknown types returned or supported by a server extension.
            </remarks>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.File.ArchiveFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.File.ArchiveFormat"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.File.ArchiveFormat.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.File.ArchiveFormat"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.File.ArchiveFormat"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.File.ArchiveFormat.Tar">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.File.ArchiveFormat"/> representing <c>tar</c> files.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.File.ArchiveFormat.TarGz">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.File.ArchiveFormat"/> representing <c>tar.gz</c> files.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.File.ArchiveFormat.TarBz2">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.File.ArchiveFormat"/> representing <c>tar.bz2</c> files.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.File.ArchiveFormat.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.File.ArchiveFormat"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.File.ArchiveFormat.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.File.BulkDeletionFailedObject">
            <summary>
            Describes an object which could not be deleted by a bulk deletion operation,
            along with a status providing the reason why the deletion failed.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.File.BulkDeletionFailedObject.Status">
            <summary>
            Gets a <see cref="P:ConoHaNet.Objects.File.BulkDeletionFailedObject.Status"/> object describing the reason the object
            could not be deleted.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.File.BulkDeletionFailedObject.Object">
            <summary>
            Gets the name of the object which could not be deleted.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.File.BulkDeletionFailedObject.#ctor(System.String,ConoHaNet.Objects.Status)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.File.BulkDeletionFailedObject"/> class
            with the specified object name and status.
            </summary>
            <param name="obj">The name of the object which could not be deleted.</param>
            <param name="status">A <see cref="P:ConoHaNet.Objects.File.BulkDeletionFailedObject.Status"/> object describing the reason the object could not be deleted.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="status"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="obj"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.File.BulkDeletionResults">
            <summary>
            Represents the detailed results of a bulk deletion operation.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.File.BulkDeletionResults.SuccessfulObjects">
            <summary>
            Gets a collection objects which were successfully deleted.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.File.BulkDeletionResults.FailedObjects">
            <summary>
            Gets a collection of <see cref="T:ConoHaNet.Objects.File.BulkDeletionFailedObject"/> objects providing
            the name and status of objects which could not be deleted during the bulk
            deletion operation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.File.BulkDeletionResults.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{ConoHaNet.Objects.File.BulkDeletionFailedObject})">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.File.BulkDeletionResults"/> class
            with the specified collections of successful and failed objects.
            </summary>
            <param name="successfulObjects">The objects which were successfully deleted.</param>
            <param name="failedObjects">The objects which could not be deleted.</param>
        </member>
        <member name="T:ConoHaNet.Objects.File.ExtractArchiveError">
            <summary>
            Represents an error which occurred while extracting a file during an Extract Archive operation.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.File.ExtractArchiveError._path">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.File.ExtractArchiveError.Path"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.File.ExtractArchiveError._status">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.File.ExtractArchiveError.Status"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.File.ExtractArchiveError.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.File.ExtractArchiveError"/> class
            with the specified path and status.
            </summary>
            <param name="path">The path of the file affected by this error.</param>
            <param name="status">The specific status for the error affecting the file.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.File.ExtractArchiveError.Path">
            <summary>
            Gets the path of the file affected by this error.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.File.ExtractArchiveError.Status">
            <summary>
            Gets the specific status for the error affecting the file.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.File.ExtractArchiveResponse">
            <summary>
            This class models the JSON response to an Extract Archive operation.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Extracting Archive Files</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.File.ExtractArchiveResponse._createdFiles">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.File.ExtractArchiveResponse.CreatedFiles"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.File.ExtractArchiveResponse._responseStatus">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.File.ExtractArchiveResponse.ResponseStatus"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.File.ExtractArchiveResponse._responseBody">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.File.ExtractArchiveResponse.ResponseBody"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.File.ExtractArchiveResponse._errors">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.File.ExtractArchiveResponse.CreatedFiles"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.File.ExtractArchiveResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.File.ExtractArchiveResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.File.ExtractArchiveResponse.CreatedFiles">
            <summary>
            Gets the number of files created by the Extract Archive operation.
            </summary>
            <value>
            The number of files created by the Extract Archive operation, or <see langword="null"/> if
            the JSON response from the server did not include the underlying property.
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.File.ExtractArchiveResponse.ResponseStatus">
            <summary>
            Gets the response status for the Extract Archive operation.
            </summary>
            <value>
            The response status for the Extract Archive operation, or <see langword="null"/> if
            the JSON response from the server did not include the underlying property.
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.File.ExtractArchiveResponse.ResponseBody">
            <summary>
            Gets the response body for the Extract Archive operation.
            </summary>
            <value>
            The response body for the Extract Archive operation, or <see langword="null"/> if
            the JSON response from the server did not include the underlying property.
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.File.ExtractArchiveResponse.Errors">
            <summary>
            Gets a collection of <see cref="T:ConoHaNet.Objects.File.ExtractArchiveError"/> objects describing errors
            which occurred while processing specific files within the archive.
            </summary>
            <value>
            A collection of errors, if any, which occurred for specific files during the
            Extract Archive operation, or <see langword="null"/> if the JSON response from the server
            did not include the underlying property.
            </value>
        </member>
        <member name="M:ConoHaNet.Objects.File.BulkDeletionResultMapper.Map(ConoHaNet.Objects.File.BulkDeleteResponse)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.File.BulkDeletionResultMapper.Map(ConoHaNet.Objects.File.BulkDeletionResults)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.File.CloudFilesMetadataProcessor">
            <summary>
            CloudFilesMetadataProcessor
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.File.CloudFilesMetadataProcessor._default">
            <summary>
            A default instance of <see cref="T:ConoHaNet.Objects.File.CloudFilesMetadataProcessor"/>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.File.CloudFilesMetadataProcessor.Default">
            <summary>
            Gets a default instance of <see cref="T:ConoHaNet.Objects.File.CloudFilesMetadataProcessor"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.File.CloudFilesMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})">
             <summary>
             Extracts metadata information from a collection of HTTP headers.
             </summary>
             <remarks>
             The returned collection has two keys: <see cref="F:ConoHaNet.Providers.CloudFilesProvider.ProcessedHeadersHeaderKey"/>
             and <see cref="F:ConoHaNet.Providers.CloudFilesProvider.ProcessedHeadersMetadataKey"/>.
            
             <para>The value for
             <see cref="F:ConoHaNet.Providers.CloudFilesProvider.ProcessedHeadersMetadataKey"/> contains the processed Cloud Files
             metadata included in HTTP headers such as <strong>X-Account-Meta-*</strong>,
             <strong>X-Container-Meta-*</strong>, and <strong>X-Object-Meta-*</strong>. The metadata prefix
             has been removed from the keys stored in this value.</para>
            
             <para>The value for <see cref="F:ConoHaNet.Providers.CloudFilesProvider.ProcessedHeadersHeaderKey"/> contains the
             HTTP headers which were not in the form of a known Cloud Files metadata prefix.</para>
             </remarks>
             <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.HttpStatusCodeParser">
            <summary>
            A status parser for HTTP status codes.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Objects.HttpStatusCodeParser.DefaultPattern">
            <summary>
            The default regular expression to use for matching HTTP status codes.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.HttpStatusCodeParser._default">
            <summary>
            A singleton instance of the default <see cref="T:ConoHaNet.Objects.HttpStatusCodeParser"/>.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.HttpStatusCodeParser._expression">
            <summary>
            The compiled regular expression to use for matching HTTP status codes.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.HttpStatusCodeParser.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:ConoHaNet.Objects.HttpStatusCodeParser"/> for the default regular
            expression.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.HttpStatusCodeParser.#ctor(System.String)">
             <summary>
             Constructs a new instance of <see cref="T:ConoHaNet.Objects.HttpStatusCodeParser"/> for the specified regular
             expression.
             </summary>
             <param name="pattern">
             The regular expression pattern to use.
            
             <para><paramref name="pattern"/> should contain the named capturing grounds <c>StatusCode</c> and <c>status</c>.</para>
             </param>
             <exception cref="T:System.ArgumentNullException"><paramref name="pattern"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">
             <paramref name="pattern"/> does not contain a capturing group named <c>StatusCode</c>.
             <para>-or-</para>
             <para><paramref name="pattern"/> does not contain a capturing group named <c>Status</c>.</para>
             </exception>
        </member>
        <member name="P:ConoHaNet.Objects.HttpStatusCodeParser.Default">
            <summary>
            Gets a default <see cref="T:ConoHaNet.Objects.HttpStatusCodeParser"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.HttpStatusCodeParser.TryParse(System.String,ConoHaNet.Objects.Status@)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.IBackoffPolicy">
            <summary>
            Represents a back-off policy.
            </summary>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.IBackoffPolicy.GetBackoffIntervals">
            <summary>
            Gets an enumeration of <see cref="T:System.TimeSpan"/> instances representing the
            back-off policy intervals.
            </summary>
            <remarks>
            <note type="caller">
            This enumeration should always be lazily enumerated since implementations may
            not bound the number of elements returned.
            </note>
            </remarks>
            <returns>
            An enumeration of <see cref="T:System.TimeSpan"/> instances representing the back-off
            policy intervals.
            </returns>
        </member>
        <member name="T:ConoHaNet.Objects.IEncodeDecodeProvider">
            <summary>
            This interface provides methods for encoding and decoding strings which are
            embedded in the query string section of a URL.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.IEncodeDecodeProvider.UrlEncode(System.String)">
            <summary>
            Encodes a string for inclusion in a URL.
            </summary>
            <remarks>
            The encoded string can be restored by calling <see cref="M:ConoHaNet.Objects.IEncodeDecodeProvider.UrlDecode(System.String)"/>.
            </remarks>
            <param name="stringToEncode">The string to encode.</param>
            <returns>The encoded string. If <paramref name="stringToEncode"/> is <see langword="null"/>, this method returns <see langword="null"/>.</returns>
        </member>
        <member name="M:ConoHaNet.Objects.IEncodeDecodeProvider.UrlDecode(System.String)">
            <summary>
            Decodes a string which is embedded in a URL.
            </summary>
            <param name="stringToDecode">The string to decode.</param>
            <returns>The decoded string. If <paramref name="stringToDecode"/> is <see langword="null"/>, this method returns <see langword="null"/>.</returns>
        </member>
        <member name="T:ConoHaNet.Objects.ImageEnteredErrorStateException">
            <summary>
            The exception that is thrown when the server enters an error state during a
            call to <see cref="O:net.openstack.Core.Providers.IComputeProvider.WaitForImageState"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.ImageEnteredErrorStateException.Status">
            <summary>
            Gets the error state the image entered.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.Servers.ImageState"/>
        </member>
        <member name="M:ConoHaNet.Objects.ImageEnteredErrorStateException.#ctor(ConoHaNet.Objects.Servers.ImageState)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ImageEnteredErrorStateException"/> class
            with the specified error state.
            </summary>
            <param name="status">The error state entered by the image.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.ImageType">
            <summary>
            Represents an image type.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known image types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.ImageType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ImageType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.ImageType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.ImageType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.ImageType"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.ImageType.Base">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.ImageType"/> representing a base image.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.ImageType.Snapshot">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.ImageType"/> representing an image created as a snapshot.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.ImageType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.ImageType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.ImageType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.InvalidETagException">
            <summary>
            Represents errors which occur while validating the ETag following an object transfer.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.InvalidETagException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.InvalidETagException"/> class.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.InvalidETagException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.InvalidETagException"/> class with
            serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="info"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.IObjectMapper`2">
            <summary>
            Represents an object that can convert between instances of two specific types.
            </summary>
            <remarks>
            This interface is similar to a <see cref="T:System.ComponentModel.TypeConverter"/> which only supports
            conversions between exactly two concrete types.
            </remarks>
            <typeparam name="TFrom">The first type.</typeparam>
            <typeparam name="TTo">The second type.</typeparam>
        </member>
        <member name="M:ConoHaNet.Objects.IObjectMapper`2.Map(`0)">
            <summary>
            Converts an instance of <typeparamref name="TFrom"/> to an instance of <typeparamref name="TTo"/>.
            </summary>
            <remarks>
            This method provides behavior similar to a strongly-typed implementation
            of <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)"/>.
            </remarks>
            <param name="from">The instance to convert.</param>
            <returns>The converted instance.</returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.IObjectMapper`2.Map(`1)">
            <summary>
            Converts an instance of <typeparamref name="TTo"/> to an instance of <typeparamref name="TFrom"/>.
            </summary>
            <remarks>
            This method provides behavior similar to a strongly-typed implementation
            of <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)"/>.
            </remarks>
            <param name="to">The instance to convert.</param>
            <returns>The converted instance.</returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.IObjectStorageMetadataProcessor">
            <summary>
            This interface represents an object that can extract metadata information from a
            collection of HTTP headers returned from a REST request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.IObjectStorageMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})">
            <summary>
            Extracts metadata information from a collection of HTTP headers. The returned collection
            may include multiple types of metadata information. The keys of the collection represent
            the type of metadata, and the values are key-value collections of the corresponding
            metadata.
            </summary>
            <remarks>
            <note type="implement">
            The resulting metadata dictionaries should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>
            equality comparer to ensure lookups are not case sensitive.
            </note>
            </remarks>
            <param name="httpHeaders">The collection of HTTP headers.</param>
            <returns>The metadata.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="httpHeaders"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="httpHeaders"/> contains any <see langword="null"/> values.
            <para>-or-</para>
            <para>If <paramref name="httpHeaders"/> contains any values with a null or empty <see cref="P:JSIStudios.SimpleRESTServices.Client.HttpHeader.Key"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="httpHeaders"/> contains two headers with equivalent values for <see cref="P:JSIStudios.SimpleRESTServices.Client.HttpHeader.Key"/> when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.IPAddressDetailsConverter">
            <summary>
            This implementation of <see cref="T:Newtonsoft.Json.JsonConverter"/> allows for JSON serialization
            and deserialization of <see cref="T:System.Net.IPAddress"/> objects in the "address details"
            format used by operations such as <see cref="M:ConoHaNet.Providers.IComputeProvider.ListAddresses(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            and  <see cref="M:ConoHaNet.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressDetailsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Serialization is performed by creating an <see cref="T:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails"/> instance
            equivalent to the given <see cref="T:System.Net.IPAddress"/> instance and serializing that as
            a JSON object.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressDetailsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <remarks>
            Deserialization is performed by deserializing the JSON value as an <see cref="T:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails"/>
            object, following by using <see cref="M:System.Net.IPAddress.Parse(System.String)"/> to convert the value of
            <see cref="P:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails.Address"/> to an <see cref="T:System.Net.IPAddress"/> instance.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressDetailsConverter.CanConvert(System.Type)">
            <returns><see langword="true"/> if <paramref name="objectType"/> equals <see cref="T:System.Net.IPAddress"/>; otherwise, <see langword="false"/>.</returns>
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails">
            <summary>
            Represents a network address in a format compatible with communication with the Compute Service APIs.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListAddresses(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails.Address">
            <summary>
            Gets the network address. This is an IPv4 address if <see cref="P:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails.Version"/> is <c>"4"</c>,
            or an IPv6 address if <see cref="P:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails.Version"/> is <c>"6"</c>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails.Version">
            <summary>
            Gets the network address version. The value is either <c>"4"</c> or <c>"6"</c>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails"/> class.
            </summary>
            <remarks>
            This constructor is used for JSON deserialization.
            </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails.#ctor(System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.IPAddressDetailsConverter.AddressDetails"/> class
            using the given IP address.
            </summary>
            <param name="address">The IP address.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="address"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.IPAddressNoneIsNullSimpleConverter">
            <summary>
            This implementation of <see cref="T:Newtonsoft.Json.JsonConverter"/> extends the behavior of
            <see cref="T:ConoHaNet.Objects.IPAddressSimpleConverter"/> by treating null values in the JSON representation as
            <see cref="F:System.Net.IPAddress.None"/> instead of <see langword="null"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressNoneIsNullSimpleConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressNoneIsNullSimpleConverter.ConvertToString(System.Net.IPAddress)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.IPAddressSimpleConverter">
            <summary>
            This implementation of <see cref="T:Newtonsoft.Json.JsonConverter"/> allows for JSON serialization
            and deserialization of <see cref="T:System.Net.IPAddress"/> objects using a simple string
            representation. Serialization is performed using <see cref="M:System.Net.IPAddress.ToString"/>,
            and deserialization is performed using <see cref="M:System.Net.IPAddress.Parse(System.String)"/>.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressSimpleConverter.ConvertToObject(System.String)">
            <remarks>
            If <paramref name="str"/> is an empty string, this method returns <see langword="null"/>.
            Otherwise, this method uses <see cref="M:System.Net.IPAddress.Parse(System.String)"/> for deserialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.IStatusParser">
            <summary>
            Represents an object which can convert a string to a <see cref="T:ConoHaNet.Objects.Status"/> object
            containing a status code and a textual representation of that status.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.IStatusParser.TryParse(System.String,ConoHaNet.Objects.Status@)">
            <summary>
            Converts a string to an equivalent <see cref="T:ConoHaNet.Objects.Status"/> object. A return value indicates whether the operation succeeded.
            </summary>
            <param name="value">A string containing a status to convert.</param>
            <param name="status">When this method returns, contains a <see cref="T:ConoHaNet.Objects.Status"/> instance
            equivalent to <paramref name="value"/>, if the conversion succeeded, or <see langword="null"/> if
            the conversion failed. The conversion fails if the <paramref name="value"/> parameter is
            <see langword="null"/> or is not of the correct format.
            </param>
            <returns><see langword="true"/> if <paramref name="value"/> was converted successfully; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:ConoHaNet.Objects.Link">
            <summary>
            Represents a link associated with a resource.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Link.Href">
            <summary>
            Gets the link target.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Link.Rel">
            <summary>
            Gets the link relation.
            </summary>
            <remarks>
            <list type="bullet">
            <item>A <c>self</c> link contains a versioned link to the resource. Use these links when the link will be followed immediately.</item>
            <item>A <c>bookmark</c> link provides a permanent link to a resource that is appropriate for long-term storage.</item>
            <item>An <c>alternate</c> link can contain an alternative representation of the resource. For example, an OpenStack Compute image might have an alternate representation in the OpenStack Image service.</item>
            </list>
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.ObjectStore">
            <summary>
            Represents the result of various Object Storage operations.
            </summary>
            <seealso cref="T:ConoHaNet.Providers.IObjectStorageProvider"/>
        </member>
        <member name="F:ConoHaNet.Objects.ObjectStore.ContainerCreated">
            <summary>
            The container was created.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IObjectStorageProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="F:ConoHaNet.Objects.ObjectStore.ContainerExists">
            <summary>
            The container already exists.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IObjectStorageProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="T:ConoHaNet.Objects.Personality">
            <summary>
            Describes a file to inject into the file system while creating or
            rebuilding a server.
            </summary>
            <remarks>
            You can customize the personality of a server instance by injecting data into
            its file system. For example, you might want to insert SSH keys, set configuration
            files, or store data that you want to retrieve from inside the instance. This
            feature provides a minimal amount of launch-time personalization. If you require
            significant customization, create a custom image.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Server_Personality-d1e2543.html">Server Personality (OpenStack Compute API V2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Personality.Path">
            <summary>
            The path of the file to create on the target file system.
            </summary>
            <remarks>
            The behavior of the related <see cref="T:ConoHaNet.Providers.IComputeProvider"/> methods is undefined
            if the UTF-8 encoded value is longer than 255 bytes.
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Personality.Content">
             <summary>
             The contents of the file to create on the target file system.
             </summary>
             <remarks>
             The maximum size of the file contents is determined by the compute provider
             and may vary based on the image that is used to create the server. The provider
             may provide a <c>maxPersonalitySize</c> absolute limit, which is a byte limit
             that is guaranteed to apply to all images in the deployment. Providers can set
             additional per-image personality limits.
            
             <note type="warning">
             The behavior of the related <see cref="T:ConoHaNet.Providers.IComputeProvider"/> methods is undefined
             if the value is not a UTF-8 encoded text file.
             </note>
             </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.Personality.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Personality"/> class during
            JSON deserialization.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Personality.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Personality"/> class with the specified
            path and contents.
            </summary>
            <param name="path">The path of the file to create on the target file system.</param>
            <param name="content">The contents of the file to create on the target file system.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="path"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Personality.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Personality"/> class with the specified
            path and text content, using <see cref="P:System.Text.Encoding.UTF8"/> for the content encoding.
            </summary>
            <param name="path">The path of the text file to create on the target file system.</param>
            <param name="content">The contents of the text file to create on the target file system.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="path"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Personality.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Personality"/> class with the specified
            path, text content, and context encoding.
            </summary>
            <param name="path">The path of the text file to create on the target file system.</param>
            <param name="content">The contents of the text file to create on the target file system.</param>
            <param name="encoding">The encoding to use for the text file.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="path"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="content"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="encoding"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="path"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.PhysicalAddressSimpleConverter">
            <summary>
            This implementation of <see cref="T:Newtonsoft.Json.JsonConverter"/> allows for JSON serialization
            and deserialization of <see cref="T:System.Net.NetworkInformation.PhysicalAddress"/> objects using a simple string
            representation. Serialization produces an IEEE 802 representation of the form
            <literal>00:11:22:33:44:55</literal>, and deserialization supports representations
            using hyphens or colons, along with bare strings containing 12 hexadecimal digits.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.PhysicalAddressSimpleConverter.ConvertToObject(System.String)">
             <remarks>
             If <paramref name="str"/> is an empty string, this method returns <see langword="null"/>.
             Otherwise, this method converts IEEE 802 addresses containing hyphens or colons
             to a bare representation, and then uses <see cref="M:System.Net.NetworkInformation.PhysicalAddress.Parse(System.String)"/> for
             deserialization. As a result, this converter can handle physical addresses in
             any of the following forms:
            
             <list type="bullet">
             <item><literal>01-23-45-67-89-ab</literal></item>
             <item><literal>01:23:45:67:89:ab</literal></item>
             <item><literal>0123456789ab</literal></item>
             </list>
             </remarks>
             <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.PowerState">
             <summary>
             Represents the power state of a server.
             </summary>
             <remarks>
             This class functions as a strongly-typed enumeration of known power states,
             with added support for unknown states returned by a server extension.
            
             <note>
             This property is defined by the Rackspace-specific Extended Status Extension
             to the OpenStack Compute API. The API does not regulate the status values,
             so it is possible that values can be added, removed, or renamed.
             </note>
             </remarks>
             <seealso cref="P:ConoHaNet.Objects.Servers.Server.PowerState"/>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#power_state">OS-EXT-STS:power_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.PowerState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.PowerState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.PowerState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.PowerState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.PowerState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.PowerState.PoweredDown">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.PowerState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.PowerState.PoweredUp">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.PowerState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.PowerState.ShutOff">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.PowerState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.PowerState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.PowerState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.PowerState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.RebootType">
            <summary>
            Represents the type of a reboot operation.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known reboot types,
            with added support for unknown types returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.RebootType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.RebootType"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.RebootType.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.RebootType"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.RebootType"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.RebootType.Hard">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.RebootType"/> representing the equivalent of cycling power to the server.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.RebootType.Soft">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.RebootType"/> representing a reboot performed by signaling the server's
            operating system to restart, allowing for graceful shutdown of currently executing processes.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.RebootType.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.RebootType"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.RebootType.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.ServerEnteredErrorStateException">
            <summary>
            The exception that is thrown when the server enters an error state during a
            call to <see cref="O:net.openstack.Core.Providers.IComputeProvider.WaitForServerState"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.ServerEnteredErrorStateException.Status">
            <summary>
            Gets the error state the server entered.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.Servers.ServerState"/>
        </member>
        <member name="M:ConoHaNet.Objects.ServerEnteredErrorStateException.#ctor(ConoHaNet.Objects.Servers.ServerState)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ServerEnteredErrorStateException"/> class
            with the specified error state.
            </summary>
            <param name="status">The error state entered by the server.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="status"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.SnapshotState">
            <summary>
            Represents the state of a block storage snapshot.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known snapshot states,
            with added support for unknown states returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.SnapshotState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.SnapshotState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.SnapshotState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.SnapshotState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.SnapshotState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.SnapshotState.Creating">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.SnapshotState"/> indicating the snapshot is being created.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.SnapshotState.Available">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.SnapshotState"/> indicating the snapshot is ready to be attached to an instance.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.SnapshotState.Deleting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.SnapshotState"/> indicating the snapshot is being deleted.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.SnapshotState.Error">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.SnapshotState"/> indicating an error occurred during snapshot creation.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.SnapshotState.ErrorDeleting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.SnapshotState"/> indicating an error occurred during snapshot deletion.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.SnapshotState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.SnapshotState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.SnapshotState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.UserAccessCache">
            <summary>
            Provides a thread-safe cache of <see cref="T:ConoHaNet.Objects.UserAccess"/> objects. A default shared
            instance is available through <see cref="P:ConoHaNet.Objects.UserAccessCache.Instance"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.UserAccessCache.Get(System.String,System.Func{ConoHaNet.Objects.UserAccess},System.Boolean)">
             <summary>
             Gets a <see cref="T:ConoHaNet.Objects.UserAccess"/> cached for a particular key, updating the value if necessary.
             </summary>
             <remarks>
             This method returns a previously cached <see cref="T:ConoHaNet.Objects.UserAccess"/> when possible. If any
             of the following conditions are met, the <paramref name="refreshCallback"/> function
             will be called to obtain a new value for <paramref name="key"/> which is then added to
             the cache, replacing any previously cached value.
             
             <list type="bullet">
             <item>The cache does not contain any value associated with <paramref name="key"/>.</item>
             <item><paramref name="forceCacheRefresh"/> is <see langword="true"/>.</item>
             <item>The previously cached <see cref="T:ConoHaNet.Objects.UserAccess"/> for <paramref name="key"/> has expired
             (see <see cref="P:ConoHaNet.Objects.IdentityToken.IsExpired"/>).</item>
             </list>
            
             <para>If any of the above conditions is met and <paramref name="refreshCallback"/> is <see langword="null"/>,
             the previously cached value for <paramref name="key"/>, if any, is removed from the cache
             and the method returns <see langword="null"/>.</para>
             </remarks>
             <param name="key">The key.</param>
             <param name="refreshCallback">A function which returns a new value for the specified <paramref name="key"/>,
             or <see langword="null"/> if no update function available (see remarks). This function may perform a synchronous
             authentication to an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/>.</param>
             <param name="forceCacheRefresh">If <see langword="true"/>, the value associated with <paramref name="key"/> will be always be refreshed by calling <paramref name="refreshCallback"/>, even if a value is already cached.</param>
             <returns>
             The cached <see cref="T:ConoHaNet.Objects.UserAccess"/> associated with the specified <paramref name="key"/>.
             If no cached value is available (see remarks), the method returns <see langword="null"/>.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.UserAccessCache.Instance">
            <summary>
            Gets a default instance of <see cref="T:ConoHaNet.Objects.UserAccessCache"/>.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Volume">
            <summary>
            Represents a volume in a block storage provider.
            </summary>
            <seealso cref="T:ConoHaNet.Providers.IBlockStorageProvider"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.Id">
            <summary>
            Gets the unique identifier for the volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.Name">
            <summary>
            Gets the "display_name" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            <note>
            This property is a Rackspace-specific extension to the OpenStack Block Storage Service.
            </note>
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.Description">
            <summary>
            Gets the "display_description" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            <note>
            This property is a Rackspace-specific extension to the OpenStack Block Storage Service.
            </note>
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.Size">
            <summary>
            Gets the "size" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.VolumeType">
            <summary>
            Gets the "volume_type" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.SnapshotId">
            <summary>
            Gets the "snapshot_id" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Snapshot.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.Attachments">
            <summary>
            Gets the "attachments" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.Status">
            <summary>
            Gets the "status" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.AvailabilityZone">
            <summary>
            Gets the "availability_zone" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Volume.CreatedAt">
            <summary>
            Gets the "created_at" property of this volume.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.CloudIdentity">
            <summary>
            Represents a set of credentials used for accessing a cloud account. Individual providers
            may impose restrictions on the values allowed for individual properties.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.CloudIdentity.Username">
            <summary>
            Gets or sets the username for this identity.
            </summary>
            <value>
            The username for this identity. The value may be <see langword="null"/> if the particular
            provider supports authenticating without a username.
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.CloudIdentity.Password">
            <summary>
            Gets or sets the password for this identity.
            </summary>
            <remarks>
            The <see cref="T:ConoHaNet.Objects.CloudIdentity"/> class represents <em>credentials</em> (as opposed
            to an <em>account</em>), so any changes made to this property value will not be
            reflected in the account.
            </remarks>
            <value>
            A password to use when authenticating this identity, or <see langword="null"/> if authentication
            should be performed by different method (e.g. with a APIKey").
            </value>
        </member>
        <member name="T:ConoHaNet.Objects.Endpoint">
            <summary>
            Represents an endpoint for a service provided in the <see cref="T:ConoHaNet.Objects.ServiceCatalog"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.PublicURL">
            <summary>
            Gets the public URL of the service.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.Region">
            <summary>
            Gets the region where this service endpoint is located. If this is <see langword="null"/>
            or empty, the region is not specified.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.TenantId">
            <summary>
            Gets the tenant (or account) ID which this endpoint operates on.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.VersionId">
            <summary>
            Gets the "versionId" property associated with the endpoint.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.VersionInfo">
            <summary>
            Gets the "versionInfo" property associated with the endpoint.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.VersionList">
            <summary>
            Gets the "versionList" property associated with the endpoint.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.InternalURL">
            <summary>
            Gets the internal URL of the service. If this is <see langword="null"/> or empty,
            the service should be accessed using the <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Endpoint.AdminURL">
            <summary>
            
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.ExtendedEndpoint">
            <summary>
            Represents an endpoint for a tenant that is returned outside of the <see cref="T:ConoHaNet.Objects.ServiceCatalog"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ExtendedEndpoint.Id">
            <summary>
            Gets the id of the endpoint, which may be a vendor-specific id.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ExtendedEndpoint.Name">
            <summary>
            Gets the display name of the service, which may be a vendor-specific
            product name.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ExtendedEndpoint.Type">
            <summary>
            Gets the canonical name of the specification implemented by this service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoint (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.ExtensibleEnum`1">
            <summary>
            Represents the base class for extensible enumeration types used
            for strongly-typed values in JSON object models.
            </summary>
            <typeparam name="T">The enumeration type.</typeparam>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Objects.ExtensibleEnum`1._name">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.ExtensibleEnum`1.Name"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleEnum`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ExtensibleEnum`1"/> class with the specified name.
            </summary>
            <param name="name">The name.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.ExtensibleEnum`1.Name">
            <summary>
            Gets the canonical name of this member.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleEnum`1.Equals(`0)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleEnum`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.ExtensibleEnum`1.ConverterBase">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.ExtensibleEnum`1"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleEnum`1.ConverterBase.ConvertToString(`0)">
            <remarks>
            This method uses <see cref="P:ConoHaNet.Objects.ExtensibleEnum`1.Name"/> for serialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleEnum`1.ConverterBase.ConvertToObject(System.String)">
            <remarks>
            If <paramref name="str"/> is an empty string, this method returns <see langword="null"/>.
            Otherwise, this method uses <see cref="M:ConoHaNet.Objects.ExtensibleEnum`1.ConverterBase.FromName(System.String)"/> for deserialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleEnum`1.ConverterBase.FromName(System.String)">
            <summary>
            Gets or creates the enumeration member with the given name.
            </summary>
            <param name="name">The name of the member. This value is never <see langword="null"/> or empty.</param>
            <returns>The instance of <typeparamref name="T"/> corresponding to the specified <paramref name="name"/>.</returns>
        </member>
        <member name="T:ConoHaNet.Objects.ExtensibleJsonObject">
            <summary>
            This is the abstract base class for types modeling the JSON representation of a resource
            which may be extended by specific providers or updated in future releases of a core
            service.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.ExtensibleJsonObject.EmptyExtensionData">
            <summary>
            An empty, and thus immutable, value which is the default return value
            for <see cref="P:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionData"/> when the backing field is <see langword="null"/>.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.ExtensibleJsonObject._extensionData">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionData"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleJsonObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ExtensibleJsonObject"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleJsonObject.#ctor(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ExtensibleJsonObject"/> class
            with the specified extension data.
            </summary>
            <param name="extensionData">The extension data.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="extensionData"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleJsonObject.#ctor(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JProperty})">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ExtensibleJsonObject"/> class
            with the specified extension data.
            </summary>
            <param name="extensionData">The extension data.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="extensionData"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="extensionData"/> contains any <see langword="null"/> values.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleJsonObject.#ctor(Newtonsoft.Json.Linq.JProperty[])">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ExtensibleJsonObject"/> class
            with the specified extension data.
            </summary>
            <param name="extensionData">The extension data.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="extensionData"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="extensionData"/> contains any <see langword="null"/> values.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionData">
            <summary>
            Gets a map of object properties which did not map to another field or property
            during JSON deserialization. The keys of the map represent the property names,
            and the values are <see cref="T:Newtonsoft.Json.Linq.JToken"/> instances containing the parsed JSON
            values.
            </summary>
            <value>
            A collection of object properties which did not map to another field or property
            during JSON deserialization.
            <para>-or-</para>
            <para>An empty dictionary if the object did not contain any unmapped properties.</para>
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionDataWrapper">
            <summary>
            This property exposes the <see cref="F:ConoHaNet.Objects.ExtensibleJsonObject._extensionData"/> field to Json.NET as a dictionary with
            <see cref="T:System.Object"/> values instead of <see cref="T:Newtonsoft.Json.Linq.JToken"/> values, which works around a known bug in the
            way Json.NET 5.x handled <see langword="null"/> values in the extension data.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.ExtensibleJsonObject.ToJToken(System.Object)">
            <summary>
            Converts an object to a <see cref="T:Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <remarks>
            <para>
            Unlike <see cref="M:Newtonsoft.Json.Linq.JToken.FromObject(System.Object)"/>, this method supports <see langword="null"/> values.
            </para>
            </remarks>
            <param name="obj">The object.</param>
            <returns>
            <para>The result of calling <see cref="M:Newtonsoft.Json.Linq.JToken.FromObject(System.Object)"/> on the input object.</para>
            <para>-or-</para>
            <para><see langword="null"/> if <paramref name="obj"/> is <see langword="null"/>.</para>
            </returns>
        </member>
        <member name="T:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionDataDictionary">
            <summary>
            This class works around a known bug in Json.NET's handling of JSON extension data.
            </summary>
            <remarks>
            <para>Adding values to the underlying dictionary requires converting the value to a <see cref="T:Newtonsoft.Json.Linq.JToken"/> by
            calling <see cref="M:ConoHaNet.Objects.ExtensibleJsonObject.ToJToken(System.Object)"/>. Reading values does not require the inverse because the serializer
            in Json.NET has no trouble handling <see cref="T:Newtonsoft.Json.Linq.JToken"/> values as input.</para>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionDataWrapper"/>
        </member>
        <member name="T:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionDataValues">
            <summary>
            This class works around a known bug in Json.NET's handling of JSON extension data.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.ExtensibleJsonObject.ExtensionDataWrapper"/>
        </member>
        <member name="T:ConoHaNet.Objects.Flavor">
            <summary>
            Provides basic information about a flavor. A flavor is an available hardware configuration for a server.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Flavors-d1e4180.html">Flavors (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Flavors-d1e4180.html">Flavors (Rackspace Next Generation Cloud Servers Developer Guide  - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Flavor.Id">
            <summary>
            Gets the unique identifier for the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Flavor.Links">
            <summary>
            Gets a collection of links related to the current flavor.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Flavor.Name">
            <summary>
            Gets the name of the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.FlavorDetails">
            <summary>
            Contains detailed information about a flavor.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.GetFlavor(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Objects.FlavorDetails._rxtxFactor">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.FlavorDetails.RxtxFactor"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.FlavorDetails._dataDiskSize">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.FlavorDetails.DataDiskSize"/> property.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.FlavorDetails.Disabled">
            <summary>
            Gets the "OS-FLV-DISABLED:disabled" property associated with the flavor.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.FlavorDetails.DiskSizeInGB">
            <summary>
            Gets the size of the system disk for the flavor, in GB.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.FlavorDetails.RAMInMB">
            <summary>
            Gets the amount of memory associated with the flavor, in MB.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.FlavorDetails.VirtualCPUCount">
            <summary>
            Gets the number of virtual CPUs for the flavor.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.FlavorDetails.RxtxFactor">
             <summary>
             Gets the aggregate outbound bandwidth, in megabits per second, across all attached
             network interfaces (PublicNet, ServiceNet, and Cloud Networks).
             </summary>
             <remarks>
             Outbound public Internet bandwidth can be up to 40% of the aggregate limit. Host
             networking is redundant, and bandwidth is delivered over two separate bonded
             interfaces, each able to carry 50% of the aggregate limit. We recommend using
             multiple Layer 4 connections to maximize throughput. Inbound traffic is not limited.
            
             <note>
             This property is a Rackspace-specific extension to the OpenStack Compute Service.
             </note>
             </remarks>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-gettingstarted/content/nova_list_flavors.html">List Flavors with the nova Client (Rackspace Next Generation Cloud Servers Getting Started - API v2)</seealso>
             <preliminary/>
        </member>
        <member name="P:ConoHaNet.Objects.FlavorDetails.DataDiskSize">
            <summary>
            Gets the size of the data disks for the flavor, in GB.
            </summary>
            <remarks>
            <note>
            This property is a Rackspace-specific extension to the OpenStack Compute Service.
            </note>
            </remarks>
            <value>
            The size of the data disks for the flavor, in GB. This property returns <see langword="null"/>
            if the JSON response from the server does not include the underlying property.
            </value>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-gettingstarted/content/nova_list_flavors.html">List Flavors with the nova Client (Rackspace Next Generation Cloud Servers Getting Started - API v2)</seealso>
            <preliminary/>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.Credentials">
            <summary>
            Represents the credentials data for an Authenticate request to the ConoHa
            Identity Service.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Authenticate</seealso>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Sample Authentication Request and Response</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.Credentials.Username">
            <summary>
            Gets or sets the username to use for authentication.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.Credentials.Password">
            <summary>
            Gets or sets the password to use for authentication.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.Credentials.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.Credentials"/> class using the specified
            username, password, and API key.
            </summary>
            <param name="username">The username to use for authentication.</param>
            <param name="password">The password to use for authentication.</param>
            <param name="apiKey">ConoHa does not support this by design.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="username"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> and <paramref name="apiKey"/> are both <see langword="null"/> or empty.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.AuthRequest">
            <summary>
            This models the JSON request used for the Authenticate request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.AuthRequest.Credentials">
            <summary>
            Gets additional information about the credentials to authenticate.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.AuthRequest.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.AuthRequest"/> class with the
            given identity.
            </summary>
            <param name="identity">The identity of the user to authenticate.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="identity"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.NotSupportedException">If given <paramref name="identity"/> type is not supported.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.AuthenticationResponse">
            <summary>
            This models the JSON response used for the Authenticate request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.AuthenticationResponse.UserAccess">
            <summary>
            Gets additional information about the authenticated user.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Identity.AuthenticationResponse.UserAccess"/>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.CloudIdentityWithProject">
            <summary>
            This class extends <see cref="T:ConoHaNet.Objects.CloudIdentity"/> with the addition of the
            <see cref="P:ConoHaNet.Objects.Identity.CloudIdentityWithProject.ProjectId"/> and <see cref="P:ConoHaNet.Objects.Identity.CloudIdentityWithProject.ProjectName"/> properties, which
            may be required for authentication with certain Identity Service providers.
            </summary>
            <threadsafety/>
            <preliminary/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.CloudIdentityWithProject.ProjectId">
            <summary>
            Gets or sets the project ID for this identity.
            </summary>
            <value>
            The project ID for this identity. The value may be <see langword="null"/> if the particular
            provider supports authenticating without a project ID.
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.CloudIdentityWithProject.ProjectName">
            <summary>
            Gets or sets the project name for this identity.
            </summary>
            <value>
            The project name for this identity. The value may be <see langword="null"/> if the particular
            provider supports authenticating without a project name.
            </value>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.ListEndpointsResponse">
            <summary>
            This models the JSON response used for the List Endpoints request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpoints__v2.0_tenants__tenantId__OS-KSCATALOG_endpoints_Endpoint_Operations_OS-KSCATALOG.html">List Service Catalog Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.ListEndpointsResponse.Endpoints">
            <summary>
            Gets additional information about the endpoints.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.UserAccess"/>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.GetEndpointResponse">
            <summary>
            This class models the JSON representation of the response to the <strong>Get endpoint</strong> HTTP API call in
            the OpenStack Identity Service V2.
            </summary>
            <remarks>
            <para>This call is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <seealso href="http://developer.openstack.org/api-ref-identity-v2.html#os-kscatalog-ext">OS-KSCATALOG admin extension (Identity API v2.0 - OpenStack Complete API Reference)</seealso>
            <seealso cref="T:ConoHaNet.Objects.ExtendedEndpoint"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.Identity.GetEndpointResponse._endpoint">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.Identity.GetEndpointResponse.Endpoint"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.GetEndpointResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.GetEndpointResponse"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.GetEndpointResponse.Endpoint">
            <summary>
            Gets additional information about the endpoint.
            </summary>
            <value>
            <para>An <see cref="T:ConoHaNet.Objects.ExtendedEndpoint"/> object containing the details of the endpoint.</para>
            <token>NullIfNotIncluded</token>
            </value>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest">
            <summary>
            This models the JSON request used for the <strong>Add endpoint</strong> HTTP API request in the OpenStack
            Identity Service V2.
            </summary>
            <remarks>
            <para>This object is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <seealso href="http://developer.openstack.org/api-ref-identity-v2.html#os-kscatalog-ext">OS-KSCATALOG admin extension (Identity API v2.0 - OpenStack Complete API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest._endpointTemplate">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest.EndpointTemplateId"/> property.
            </summary>
            <remarks>
            <para>This API call wraps the endpoint template identifier inside an "EndpointTemplateWithOnlyId"
            resource.</para>
            </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest.#ctor(ConoHaNet.Objects.Identity.EndpointTemplateId)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest"/> class with the specified
            endpoint template identifier.
            </summary>
            <param name="endpointTemplateId">
            The unique identifier of the endpoint template to use for the endpoint.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="endpointTemplateId"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.AddServiceCatalogEndpointRequest.EndpointTemplateId">
            <summary>
            Gets the unique identifier of the endpoint template to use when creating the endpoint.
            </summary>
            <value>
            <para>The unique identifier of the endpoint template to use when creating the endpoint.</para>
            <token>NullIfNotIncluded</token>
            </value>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.EndpointTemplate">
            <summary>
            This class models the JSON representation of an endpoint template resource in the OpenStack Identity Service V2.
            </summary>
            <remarks>
            <para>This object is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <seealso href="http://developer.openstack.org/api-ref-identity-v2.html#os-kscatalog-ext">OS-KSCATALOG admin extension (Identity API v2.0 - OpenStack Complete API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.Identity.EndpointTemplate._id">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.Identity.EndpointTemplate.Id"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.EndpointTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.EndpointTemplate"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.EndpointTemplate.#ctor(ConoHaNet.Objects.Identity.EndpointTemplateId)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.EndpointTemplate"/> class with the specified endpoint template
            identifier.
            </summary>
            <param name="id">The unique identifier of the endpoint template.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.EndpointTemplate.Id">
            <summary>
            Gets the unique identifier for the endpoint template.
            </summary>
            <value>
            <para>The unique identifier for the endpoint template.</para>
            <token>NullIfNotIncluded</token>
            </value>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.EndpointTemplateId">
            <summary>
            Represents the unique identifier of an <see cref="T:ConoHaNet.Objects.Identity.EndpointTemplate"/>.
            </summary>
            <remarks>
            <para>This object is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.Identity.EndpointTemplate.Id"/>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.EndpointTemplateId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.EndpointTemplateId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.EndpointTemplateId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.Identity.EndpointTemplateId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.EndpointTemplateId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.SetPasswordRequest">
            <summary>
            This models the JSON request used for the Update User Credentials request
            when used with password credentials.
            this uses OS-KSEC2 admin extension.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Identity.SetPasswordRequest.PasswordCredential"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.SetPasswordRequest.PasswordCredential">
            <summary>
            Gets the password credentials to use for the Update User Credentials request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.SetPasswordRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.SetPasswordRequest"/> class
            with the specified username and password.
            </summary>
            <param name="username">The new username.</param>
            <param name="password">The new password.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="username"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.PasswordCredentialResponse">
            <summary>
            This models the JSON response used for the Update User Credentials request
            when used with password credentials.
            this uses OS-KSEC2 admin extension.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.PasswordCredentialResponse.PasswordCredential">
            <summary>
            Gets the password credentials used for the Update User Credentials request.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.PasswordCredential">
            <summary>
            This models the JSON representation of password credentials.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.PasswordCredential.Username">
            <summary>
            Gets the username for the credentials.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.PasswordCredential.Password">
            <summary>
            Gets the password for the credentials.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.PasswordCredential.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.PasswordCredential"/> class
            with the specified username and password.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="username"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.UserCredentialResponse">
            <summary>
            This models the JSON response used for the Update User Credentials request
            when used with API Key credentials.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.UserCredentialResponse.UserCredential">
            <summary>
            Gets the API key credentials sent with the Update User Credentials request.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.UpdateUserCredentialRequest">
            <summary>
            This models the JSON request used for the Update User Credentials request
            when used with API Key credentials.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.UpdateUserCredentialRequest.UserCredential">
            <summary>
            Gets the API Key credentials to use for the Update User Credentials request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.UpdateUserCredentialRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.UpdateUserCredentialRequest"/>
            class with the specified API Key credentials.
            </summary>
            <param name="username">The new username.</param>
            <param name="apiKey">The new API key.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="username"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="username"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is empty.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.RegionEndpoint">
            <summary>
            This class models the JSON representation of region endpoint resource.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.RegionEndpoint.Name">
            <summary>
            Gets or Sets the service endpoint name
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.RegionEndpoint.Region">
            <summary>
            Gets or Sets the service region, which is like "tyo1" or "sin1"
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.RegionEndpoint.Type">
            <summary>
            Gets or Sets the service type
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.RegionEndpoint.Url">
            <summary>
            Gets or Sets the region endp;oint url
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.RegionEndpoint.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.CustomRegionComparator">
            <summary>
            Provides customized region sort order
            </summary>
        </member>
        <member name="F:ConoHaNet.Objects.Identity.CustomRegionComparator.customOrder">
            <summary>
            Gets the sort order of region names which ConoHa provides
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.CustomRegionComparator.System#Collections#Generic#IComparer{ConoHaNet#Objects#Identity#RegionEndpoint}#Compare(ConoHaNet.Objects.Identity.RegionEndpoint,ConoHaNet.Objects.Identity.RegionEndpoint)">
            <summary>
            Sorts the elements of region in ascending order according to customOrder.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.Role">
            <summary>
            A personality that a user assumes when performing a specific set of operations. A role
            includes a set of right and privileges. A user assuming that role inherits those rights
            and privileges.
            </summary>
            <remarks>
            In OpenStack Identity Service, a token that is issued to a user includes the list of
            roles that user can assume. Services that are being called by that user determine how
            they interpret the set of roles a user has and to which operations or resources each
            role grants access.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.Role.Id">
            <summary>
            Gets the unique identifier for the role.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.Role.Name">
            <summary>
            Gets the name of the role.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.Role.Description">
            <summary>
            Gets a description of the role, if one is provided.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.Role.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.Role"/> class with
            the specified name and description.
            </summary>
            <param name="name">The name of the role.</param>
            <param name="description">The description of the role.</param>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.RolesResponse">
            <summary>
            This models the JSON response used for the List Roles and List User Global Roles requests.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">List Roles</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUserGlobalRoles_v2.0_users__user_id__roles_User_Operations.html">List User Global Roles (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.RolesResponse.Roles">
            <summary>
            Gets a collection of roles.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.RolesResponse.RoleLinks">
            <summary>
            Gets a collection of links related to <see cref="P:ConoHaNet.Objects.Identity.RolesResponse.Roles"/>.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.Roles">
            <summary>
            This models the JSON response used for the Add Role and Get Role by Name requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addRole_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Add Role (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getRoleByName_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Get Role by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.Roles.Role">
            <summary>
            Gets information about the role.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.AddRoleRequest">
            <summary>
            This models the JSON request used for the Add Role request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addRole_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Add Role (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.AddRoleRequest.Role">
            <summary>
            Gets additional information about the role to add.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.AddRoleRequest.#ctor(ConoHaNet.Objects.Identity.Role)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.AddRoleRequest"/> class for the
            specified <paramref name="role"/>.
            </summary>
            <param name="role">The role.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="role"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.ListTenantsResponse">
            <summary>
            This models the JSON response used for the List Tenants request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listTenants_v2.0_tenants_Tenant_Operations.html">List Tenants (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.ListTenantsResponse.Tenants">
            <summary>
            Gets a collection of information about the tenants.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.ListTenantsResponse.TenantsLinks">
            <summary>
            Gets a collection of information about the tenant links.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.UsersResponse">
            <summary>
            This models the JSON response used for the List Users request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUsers_v2.0_users_.html">List Users (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.UsersResponse.Users">
            <summary>
            Gets a collection of information about the users.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.UserResponse">
            <summary>
            This models the JSON response used for the Get User Information by Name, Get User Information by ID, and Update User requests.
            </summary>
            <remarks>
            In certain situations with certain vendors, the List Users request is known to result
            in a response that resembles this model. When such a situation is detected, this
            response model is also used for the List Users response.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserByName_v2.0_users__User_Operations.html">Get User Information by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserById_v2.0_users__user_id__User_Operations.html">Get User Information by ID (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUser_v2.0_users__userId__.html">Update User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUsers_v2.0_users_.html">List Users (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.UserResponse.User">
            <summary>
            Gets information about the user.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.NewUserResponse">
            <summary>
            This models the JSON response used for the Add User request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserResponse.NewUser">
            <summary>
            Gets the information about the newly created user, including the generated
            <see cref="P:ConoHaNet.Objects.NewUser.Password"/> if no password was specified in the request.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.AddUserRequest">
            <summary>
            This models the JSON request used for the Add User request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.AddUserRequest.User">
            <summary>
            Gets additional information about the user to add.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.AddUserRequest.#ctor(ConoHaNet.Objects.NewUser)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.AddUserRequest"/> class for the
            specified <paramref name="user"/>.
            </summary>
            <param name="user">The user.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.NewUserWithTenantId">
            <summary>
            Represents the JSON result of an Add User operation.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IIdentityProvider.AddUser(ConoHaNet.Objects.NewUser,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Password">
            <summary>
            Gets the password for the new user.
            </summary>
            <value>The generated password for the new user, or <see langword="null"/> if the Add User request included a password.</value>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Id">
            <summary>
            Gets the ID for the new user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Name">
            <summary>
            Gets the name of the new user.
            <note type="warning">
            The value of this property in the underlying JSON representation differs between
            name and username
            </note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Username">
            <summary>
            Gets the username of the new user.
            <note type="warning">
            The value of this property in the underlying JSON representation differs between
            name and username
            </note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Email">
            <summary>
            Gets the email address of the new user.
            </summary>
            <value>
            The email address of the user.
            <para>-or-</para>
            <para><see langword="null"/> if the response from the server did not include the underlying property.</para>
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Enabled">
            <summary>
            Gets a value indicating whether or not the user is enabled.
            </summary>
            <value>
            <see langword="true"/> if the user is enabled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.TenantId">
            <summary>
            Gets the tenant id of the new user.
            </summary>
            <value>
            The tenant id of the user.
            <para>-or-</para>
            <para><see langword="null"/> if the response from the server did not include the underlying property.</para>
            </value>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.NewUserWithTenantId.#ctor(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.NewUserWithTenantId"/> class with the specified
            username, email address, password, and value indicating whether or not the user
            is initially enabled.
            </summary>
            <param name="name">The username of the new user (see <see cref="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Username"/>).</param>
            <param name="email">The email address of the new user (see <see cref="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Email"/>).</param>
            <param name="password">The password for the new user (see <see cref="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Password"/>).</param>
            <param name="enabled"><see langword="true"/> if the user is initially enabled; otherwise, <see langword="false"/> (see <see cref="P:ConoHaNet.Objects.Identity.NewUserWithTenantId.Enabled"/>).</param>
            <param name="tenantId">The TenantId for user</param>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.NewUserWithTenantId.#ctor(ConoHaNet.Objects.NewUser,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.NewUser"/> class with the specified
            username, email address, password, and value indicating whether or not the user
            is initially enabled.
            </summary>
            <param name="user">the new user instanace (see <see cref="T:ConoHaNet.Objects.NewUser"/>).</param>
            <param name="tenantId">The TenantId for user</param>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.NewUserWithTenantId.#ctor">
            <summary>
            Initializes a new instance of the NewUserWithTenantId class.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.AddNewUserWithTenantIdRequest">
            <summary>
            This models the JSON request used for the Update NewUserWithTenantId request.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.AddNewUserWithTenantIdRequest.User">
            <summary>
            Gets additional information about the user to add.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.AddNewUserWithTenantIdRequest.#ctor(ConoHaNet.Objects.Identity.NewUserWithTenantId)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.AddUserRequest"/> class for the
            specified <paramref name="user"/>.
            </summary>
            <param name="user">The user.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.NewUserWithTenantIdResponse">
            <summary>
            This models the JSON request used for the Update NewUserWithTenantId response.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.NewUserWithTenantIdResponse.NewUser">
            <summary>
            Gets the information about the newly created user, including the generated
            <see cref="P:ConoHaNet.Objects.NewUser.Password"/> if no password was specified in the request.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Identity.UpdateUserRequest">
            <summary>
            This models the JSON request used for the Update User request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUser_v2.0_users__userId__.html">Update User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Identity.UpdateUserRequest.User">
            <summary>
            Gets the updated user information for the request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Identity.UpdateUserRequest.#ctor(ConoHaNet.Objects.User)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Identity.UpdateUserRequest"/> class
            with the specified user.
            </summary>
            <param name="user">A <see cref="P:ConoHaNet.Objects.Identity.UpdateUserRequest.User"/> instance containing the updated details for the user.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.User.Id"/> is <see langword="null"/> or empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Tenant">
            <summary>
            This models the basic JSON description of a tenant.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IIdentityProvider.ListTenants(ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Tenant.Id">
            <summary>
            Gets the unique identifier for the tenant.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Tenant.Name">
            <summary>
            Gets the "name" property for the tenant.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.IPAddressList">
            <summary>
            This implementation of <see cref="T:System.Collections.Generic.List`1"/> is used to ensure the elements
            are deserialized from a JSON string using the <see cref="T:ConoHaNet.Objects.IPAddressDetailsConverter"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.IPAddressList"/> class.
            that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.IPAddressList"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="capacity"/> is less than 0.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.IPAddressList.#ctor(System.Collections.Generic.IEnumerable{System.Net.IPAddress})">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.IPAddressList"/> class that
            contains elements copied from the specified <paramref name="collection"/>
            and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="collection"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.AccountService.OrderItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.AccountService.OrderItem"/> class
            during JSON deserialization.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.AccountService.GetOrderItemResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Metadata">
            <summary>
            Represents metadata for servers and images in the Compute Service.
            </summary>
            <remarks>
            The metadata keys for the compute provider are case-sensitive.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.NewUser">
            <summary>
            Represents the JSON result of an Add User operation.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IIdentityProvider.AddUser(ConoHaNet.Objects.NewUser,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_addUser_v2.0_users_.html">Add User (Rackspace Cloud Identity Client Developer Guide - API v2.0)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.NewUser.Password">
            <summary>
            Gets the password for the new user.
            </summary>
            <value>The generated password for the new user, or <see langword="null"/> if the Add User request included a password.</value>
        </member>
        <member name="P:ConoHaNet.Objects.NewUser.Id">
            <summary>
            Gets the ID for the new user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.NewUser.Username">
            <summary>
            Gets the username of the new user.
            <note type="warning">
            The value of this property in the underlying JSON representation differs between
            Rackspace and the OpenStack OS-KSADM extension. This property models the
            Rackspace-specific representation of the resource.
            </note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.NewUser.Email">
            <summary>
            Gets the email address of the new user.
            </summary>
            <value>
            The email address of the user.
            <para>-or-</para>
            <para><see langword="null"/> if the response from the server did not include the underlying property.</para>
            </value>
        </member>
        <member name="P:ConoHaNet.Objects.NewUser.Enabled">
            <summary>
            Gets a value indicating whether or not the user is enabled.
            </summary>
            <value>
            <see langword="true"/> if the user is enabled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:ConoHaNet.Objects.NewUser.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.NewUser"/> class with the specified
            username, email address, password, and value indicating whether or not the user
            is initially enabled.
            </summary>
            <param name="username">The username of the new user (see <see cref="P:ConoHaNet.Objects.NewUser.Username"/>).</param>
            <param name="email">The email address of the new user (see <see cref="P:ConoHaNet.Objects.NewUser.Email"/>).</param>
            <param name="password">The password for the new user (see <see cref="P:ConoHaNet.Objects.NewUser.Password"/>).</param>
            <param name="enabled"><see langword="true"/> if the user is initially enabled; otherwise, <see langword="false"/> (see <see cref="P:ConoHaNet.Objects.NewUser.Enabled"/>).</param>
        </member>
        <member name="T:ConoHaNet.Objects.ProjectId">
            <summary>
            Represents the unique identifier of a project, <see cref="T:ConoHaNet.Objects.Tenant"/>, or account.
            </summary>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Objects.ProjectId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ProjectId"/> class
            with the specified identifier value.
            </summary>
            <param name="id">The project identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.ProjectId.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.ProjectId"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.ProjectId.Converter.FromValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.ProviderStateBase`1">
            <summary>
            Provides a base class for domain objects which require access to the
            provider which created them.
            </summary>
            <typeparam name="T">The provider type.</typeparam>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.ProviderStateBase`1.Provider">
            <summary>
            Gets the provider which created the instance.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.ProviderStateBase`1.Region">
            <summary>
            Gets the region where the current entity resides.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.ProviderStateBase`1.Identity">
            <summary>
            Gets the identity the current entity belongs to, or <see langword="null"/> if
            the identity was not explicitly specified in the request that created
            this object (i.e. the default identity of <see cref="P:ConoHaNet.Objects.ProviderStateBase`1.Provider"/> was
            used).
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ListAddressesResponse">
            <summary>
            This models the JSON response used for the List Addresses request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListAddressesResponse.Addresses">
            <summary>
            Gets the IP address details.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.DiskConfiguration">
            <summary>
            This enumeration is part of the <see href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute"><newTerm>disk configuration extension</newTerm></see>,
            which adds at attribute to images and servers to control how the disk is partitioned when
            servers are created, rebuilt, or resized.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known disk configurations,
            with added support for unknown types returned by a server extension.
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.DiskConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.DiskConfiguration"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.DiskConfiguration.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.Servers.DiskConfiguration"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.Servers.DiskConfiguration"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.DiskConfiguration.Auto">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.DiskConfiguration"/> representing automatic configuration.
            </summary>
            <remarks>
            The server is built with a single partition the size of the target flavor disk. The
            file system is automatically adjusted to fit the entire partition. This keeps things
            simple and automated. <see cref="P:ConoHaNet.Objects.Servers.DiskConfiguration.Auto"/> is valid only for images and servers with a
            single partition that use the EXT3 file system. This is the default setting for
            applicable Rackspace base images.
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.DiskConfiguration.Manual">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.DiskConfiguration"/> manual configuration.
            </summary>
            <remarks>
            The server is built using whatever partition scheme and file system is in the source
            image. If the target flavor disk is larger, the remaining disk space is left
            unpartitioned. This enables images to have non-EXT3 file systems, multiple partitions,
            and so on, and enables you to manage the disk configuration.
            </remarks>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.DiskConfiguration.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.Servers.DiskConfiguration"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.DiskConfiguration.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ListFlavorsResponse">
            <summary>
            This models the JSON response used for the List Flavors request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListFlavorsResponse.Flavors">
            <summary>
            Gets a collection of basic information about the available flavors.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ListFlavorDetailsResponse">
            <summary>
            This models the JSON response used for the List Flavors with Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListFlavorDetailsResponse.Flavors">
            <summary>
            Gets a collection of detailed information about the flavors.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.FlavorDetailsResponse">
            <summary>
            This models the JSON response used for the Get Flavor Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Flavor_Details-d1e4317.html">Get Flavor Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.FlavorDetailsResponse.Flavor">
            <summary>
            Gets detailed information about the flavor.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ImageState">
            <summary>
            Represents the state of a compute image.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known image states,
            with added support for unknown states returned by an image extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ImageState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ImageState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ImageState.Active">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> representing an image which is active and ready to use.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ImageState.Saving">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> representing an image currently being saved.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ImageState.Deleted">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> representing an image which has been deleted.
            </summary>
            <remarks>
            By default, the <see cref="M:ConoHaNet.Providers.IComputeProvider.ListImages(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)"/> operation does not return
            images which have been deleted. To list deleted images, call
            <see cref="M:ConoHaNet.Providers.IComputeProvider.ListImages(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)"/> specifying the <c>changesSince</c>
            parameter.
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ImageState.Error">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> representing an image which failed to perform
            an operation and is now in an error state.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ImageState.Unknown">
            <summary>
            Gets an <see cref="T:ConoHaNet.Objects.Servers.ImageState"/> for an image that is currently in an unknown state.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ImageState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.Servers.ImageState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ImageState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.MetadataItemResponse">
            <summary>
            This models the JSON response used for the Get Metadata Item request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Metadata_Item-d1e5507.html">Get Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.MetadataItemResponse.Metadata">
            <summary>
            Gets information about the metadata item. The returned <see cref="P:ConoHaNet.Objects.Servers.MetadataItemResponse.Metadata"/> object
            will only have one item, containing the key and value for the metadata item.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.UpdateMetadataRequest">
            <summary>
            This models the JSON request used for the Set Metadata and Update Metadata requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.UpdateMetadataRequest.Metadata">
            <summary>
            Gets the metadata.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.UpdateMetadataRequest.#ctor(ConoHaNet.Objects.Metadata)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.UpdateMetadataRequest"/> class
            with the given metadata.
            </summary>
            <param name="metadata">The metadata.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.MetaDataResponse">
            <summary>
            This models the JSON response used for the List Metadata request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.MetaDataResponse.Metadata">
            <summary>
            Gets the metadata information.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.UpdateMetadataItemRequest">
            <summary>
            This models the JSON request used for the Set Metadata Item request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.UpdateMetadataItemRequest.Metadata">
            <summary>
            Gets the metadata item to associate with the server or image.
            </summary>
            <remarks>
            The value is never <see langword="null"/> and always contains exactly one entry.
            </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.UpdateMetadataItemRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.UpdateMetadataItemRequest"/>
            class with the specified key and value.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.NewServer">
            <summary>
            Extends <see cref="T:ConoHaNet.Objects.Servers.ServerBase"/> with information for a newly-created server.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.CreateServer(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],ConoHaNet.Objects.Servers.DiskConfiguration,ConoHaNet.Objects.Metadata,ConoHaNet.Objects.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.NewServer.DiskConfig">
            <summary>
            Gets the disk configuration used for creating the server. If the value was
            not explicitly specified in the create request, the server inherits the value
            from the image it was created from.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Disk Configuration Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.NewServer.AdminPassword">
            <summary>
            Gets the administrator password for the newly created server.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.NewServer.UpdateThis(ConoHaNet.Objects.Servers.ServerBase)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.Server">
            <summary>
            Extends <see cref="T:ConoHaNet.Objects.Servers.SimpleServer"/> with detailed information about a server.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.GetDetails(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Server_Details-d1e2623.html">Get Server Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.DiskConfig">
            <summary>
            Gets the disk configuration used for creating, rebuilding, or resizing the server.
            If the value was not explicitly specified in the create, rebuild, or resize request,
            the server inherits the value from the image it was created from.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Disk Configuration Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.PowerState">
            <summary>
            Gets the power state for the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Extended Status Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#power_state">OS-EXT-STS:power_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.TaskState">
            <summary>
            Gets the task state for the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Extended Status Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#task_state">OS-EXT-STS:task_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.VMState">
            <summary>
            Gets the virtual machine (VM) state for the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Extended Status Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#vm_state">OS-EXT-STS:vm_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.AccessIPv4">
            <summary>
            Gets the public IP version 4 access address.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.AccessIPv6">
            <summary>
            Gets the public IP version 6 access address.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.UserId">
            <summary>
            Gets the user ID for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.Image">
            <summary>
            Gets basic information about the image the server was created from.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.Status">
            <summary>
            Gets the server status.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.Flavor">
            <summary>
            Gets basic information about the flavor for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.Addresses">
            <summary>
            Gets the public and private IP addresses for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.Created">
            <summary>
            Gets the time stamp for the creation date.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.HostId">
             <summary>
             Gets the host ID for the server.
             </summary>
             <remarks>
             The compute provisioning algorithm has an anti-affinity property that attempts
             to spread customer VMs across hosts. Under certain situations, VMs from the
             same customer might be placed on the same host. The Host ID represents the host
             your server runs on and can be used to determine this scenario if it is relevant
             to your application.
            
             <para><see cref="P:ConoHaNet.Objects.Servers.Server.HostId"/> is unique <em>per account</em> and is not globally unique.</para>
             </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.Progress">
            <summary>
            Gets the build completion progress, as a percentage.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <value>A percentage from 0 to 100 (inclusive) representing the build completion progress.</value>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.TenantId">
            <summary>
            Gets the tenant ID of the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Tenant.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.Server.Updated">
            <summary>
            Gets the time stamp for the last update.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.UpdateThis(ConoHaNet.Objects.Servers.ServerBase)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.GetVolumes">
            <summary>
            Lists the volume attachments for the server.
            </summary>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.ServerVolume"/> objects describing the volumes attached to the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListServerVolumes(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/List_Volume_Attachments.html">List Volume Attachments (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.GetMetadata">
            <summary>
            Gets the metadata associated with the server.
            </summary>
            <returns>A <see cref="T:ConoHaNet.Objects.Metadata"/> object containing the metadata associated with the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListServerMetadata(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.SetMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Sets the metadata associated with the server, replacing any existing metadata.
            </summary>
            <param name="metadata">The metadata to associate with the server.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.SetServerMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.AddMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Updates the metadata for the server.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The server metadata to update.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.UpdateServerMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.AddMetadata(System.String,System.String)">
            <summary>
            Adds or updates the value for the specified metadata item.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.UpdateMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Updates the metadata for the server.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The server metadata to update.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.UpdateServerMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.DeleteMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Deletes the specified metadata items from the server.
            </summary>
            <remarks>
            <note>
            This method ignores the values in <paramref name="metadata"/>. Metadata items are
            removed whether or not their current values match those in <paramref name="metadata"/>.
            </note>
            </remarks>
            <param name="metadata">A collection of metadata items to delete.</param>
            <returns><see langword="true"/> if all of the metadata item were removed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains a null or empty key.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.DeleteServerMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.DeleteMetadataItem(System.String)">
            <summary>
            Deletes the specified metadata item from the server.
            </summary>
            <param name="key">The metadata key.</param>
            <returns><see langword="true"/> if the metadata item was removed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.DeleteServerMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.UpdateMetadataItem(System.String,System.String)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.ListAddresses">
            <summary>
            Lists all networks and server addresses associated with a server.
            </summary>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerAddresses"/> object containing the list of network addresses for the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListAddresses(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.ListAddressesByNetwork(System.String)">
            <summary>
            Lists addresses for the server associated with the specified network.
            </summary>
            <param name="networkLabel">The network label. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Label">CloudNetwork.Label</see>.</param>
            <returns>A collection of <see cref="T:System.Net.IPAddress"/> containing the network addresses associated with the server on the specified network.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkLabel"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkLabel"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.Snapshot(System.String,ConoHaNet.Objects.Metadata)">
            <summary>
            Creates a new snapshot image for the server at its current state.
            </summary>
            <remarks>
            The server snapshot process is completed asynchronously. To wait for the image
            to be completed, you may call <see cref="M:ConoHaNet.Objects.Servers.SimpleServerImage.WaitForActive(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})"/> on the
            returned image.
            </remarks>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerImage"/> object containing the details of the new image if the image creation process was successfully started; otherwise, <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageName"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageName"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.Delete">
            <summary>
            Marks the server for asynchronous deletion.
            </summary>
            <remarks>
            The server deletion operation is completed asynchronously. The <see cref="M:ConoHaNet.Objects.Servers.ServerBase.WaitForDeleted(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})"/>
            method may be used to block execution until the server is finally deleted.
            </remarks>
            <returns><see langword="true"/> if the server was successfully marked for deletion; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.DeleteServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Server-d1e2883.html">Delete Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.ListVirtualInterfaces">
            <summary>
            Lists the virtual interfaces for the server.
            </summary>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.VirtualInterface"/> objects describing the virtual interfaces for the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListVirtualInterfaces(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.CreateVirtualInterface(System.String)">
            <summary>
            Creates a virtual interface for the specified network and attaches the network to the server.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.VirtualInterface"/> object containing the details of the newly-created virtual network.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.CreateVirtualInterface(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/api_create_virtual_interface.html">Create Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.Server.DeleteVirtualInterface(System.String)">
            <summary>
            Deletes the specified virtual interface from the server.
            </summary>
            <param name="virtualInterfaceId">The virtual interface ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.VirtualInterface.Id">VirtualInterface.Id</see>.</param>
            <returns><see langword="true"/> if the virtual interface was successfully removed from the server; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="virtualInterfaceId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="virtualInterfaceId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.DeleteVirtualInterface(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/delete_virt_interface_api.html">Delete Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest">
            <summary>
            This models the JSON request used for the Change Administrator Password request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Change_Password-d1e3234.html">Change Administrator Password (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest.Details">
            <summary>
            Gets additional information about the new password to assign to the server.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest"/>
            class with the given password.
            </summary>
            <param name="password">The new password to use on the server.</param>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails">
            <summary>
            This models the JSON body containing the details of the Change Administrator Password request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails.AdminPassword">
            <summary>
            Gets the new password to assign to the server.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ChangeServerAdminPasswordRequest.ChangeAdminPasswordDetails"/>
            class with the given password.
            </summary>
            <param name="password">The new password to use on the server.</param>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerRebootRequest">
            <summary>
            This models the JSON request used for the Reboot Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Reboot_Server-d1e3371.html">Reboot Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebootRequest.Details">
            <summary>
            Gets additional details about the Reboot Server request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerRebootRequest.#ctor(ConoHaNet.Objects.Servers.ServerRebootDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ServerRebootRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerRebootDetails">
            <summary>
            This models the JSON body containing details for the Reboot Server request.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.Servers.ServerRebootRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Reboot_Server-d1e3371.html">Reboot Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebootDetails.Type">
            <summary>
            Gets the type of reboot to perform.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerRebootDetails.#ctor(ConoHaNet.Objects.RebootType)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ServerRebootDetails"/>
            class with the specified reboot type.
            </summary>
            <param name="type">The type of reboot to perform. See <see cref="T:ConoHaNet.Objects.RebootType"/> for predefined values.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="type"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.RescueServerRequest">
            <summary>
            This models the JSON request used for the Rescue Server request.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Rescue Server</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.RescueServerResponse">
            <summary>
            This models the JSON response used for the Rescue Server request.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Rescue Server</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.RescueServerResponse.AdminPassword">
            <summary>
            Gets the temporary administrator password assigned for use while the server
            is in rescue mode.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.UnrescueServerRequest">
            <summary>
            This models the JSON request used for the Unrescue Server request.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Unrescue Server</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerAddresses">
            <summary>
            Represents a map of network labels to collections of IP addresses.
            </summary>
            <remarks>
            The keys of this collection are network labels (see <see cref="P:ConoHaNet.Objects.CloudNetwork.Label"/>),
            and the values are collections of IP addresses.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerAddresses.Private">
            <summary>
            Gets the server IP addresses associated with the <c>private</c> network.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerAddresses.Public">
            <summary>
            Gets the server IP addresses associated with the <c>public</c> network.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerBase">
            <summary>
            Provides basic information about a server.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Servers-d1e2073.html">Servers (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Servers-d1e2073.html">Servers (Rackspace Next Generation Cloud Servers Developer Guide  - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerBase.Id">
            <summary>
            Gets the unique identifier for the server.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerBase.Links">
            <summary>
            Gets a collection of links related to the current server.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.UpdateThis(ConoHaNet.Objects.Servers.ServerBase)">
            <summary>
            Updates the current instance to match the information in <paramref name="server"/>.
            </summary>
            <remarks>
            <note type="implement">
            This method should be overridden in derived types to ensure all properties
            for the current instance are updated.
            </note>
            </remarks>
            <param name="server">The updated information for the current server.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="server"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.WaitForActive(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the server to enter the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/> state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the server at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the server enters the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/> state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="refreshCount">Number of times to poll the server's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.WaitForDeleted(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
            <summary>
            Waits for the server to enter the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Deleted"/> state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Deleted"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.WaitForState(ConoHaNet.Objects.Servers.ServerState,ConoHaNet.Objects.Servers.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the server to enter a specified state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the server at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the server enters either an expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedState">The expected state.</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
             <param name="refreshCount">Number of times to poll the server's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedState"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:ConoHaNet.Objects.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.WaitForVMState(ConoHaNet.Objects.Servers.VirtualMachineState,ConoHaNet.Objects.Servers.VirtualMachineState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.WaitForState(ConoHaNet.Objects.Servers.ServerState[],ConoHaNet.Objects.Servers.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the server to enter any one of a set of specified states.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the server at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the server enters either an expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedStates">The expected state(s).</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
             <param name="refreshCount">Number of times to poll the server's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedStates"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="expectedStates"/> is empty.
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:ConoHaNet.Objects.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.SoftReboot">
            <summary>
            Initiates an asynchronous soft reboot operation on the specified server.
            </summary>
            <returns><see langword="true"/> if the reboot operation was successfully initiated; otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support soft reboot operations.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="P:ConoHaNet.Objects.RebootType.Soft"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.HardReboot">
            <summary>
            Initiates an asynchronous hard reboot operation on the specified server.
            </summary>
            <returns><see langword="true"/> if the reboot operation was successfully initiated; otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support hard reboot operations.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="P:ConoHaNet.Objects.RebootType.Hard"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.Resize(System.String,ConoHaNet.Objects.Servers.DiskConfiguration)">
            <summary>
            Initiates an asynchronous resize of the server. A server resize is performed by
            specifying a new <see cref="T:ConoHaNet.Objects.Flavor"/> for the server.
            </summary>
            <remarks>
            Following a resize operation, the original server is not immediately removed. After testing
            if the resulting server is operating successfully, a call should be made to <see cref="M:ConoHaNet.Objects.Servers.ServerBase.ConfirmResize"/>
            to keep the resized server, or to <see cref="M:ConoHaNet.Objects.Servers.ServerBase.RevertResize"/> to revert to the original server.
            If 24 hours pass and neither of these methods is called, the server will be automatically confirmed.
            </remarks>
            <param name="flavor">The new flavor. This is obtained from <see cref="P:ConoHaNet.Objects.Flavor.Id">Flavor.Id</see>.</param>
            <param name="diskConfig">The disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.</param>
            <returns><see langword="true"/> if the resize operation is successfully started; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If flavor is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If flavor is empty.
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="diskConfig"/>.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.ConfirmResize">
            <summary>
            Confirms a completed asynchronous server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <returns><see langword="true"/> if the resize operation was confirmed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.RevertResize">
            <summary>
            Cancels and reverts a server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <returns><see langword="true"/> if the resize operation was reverted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.Rescue">
             <summary>
             Places the server in rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to enter rescue mode,
             call <see cref="O:ServerBase.WaitForState"/> with the state <see cref="P:ConoHaNet.Objects.Servers.ServerState.Rescue"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:ConoHaNet.Objects.Servers.ServerBase.UnRescue"/>.
             </note>
             </remarks>
             <returns>The root password assigned for use during rescue mode.</returns>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.UnRescue">
             <summary>
             Takes the server out of rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to exit rescue mode,
             call <see cref="M:ConoHaNet.Objects.Servers.ServerBase.WaitForActive(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:ConoHaNet.Objects.Servers.ServerBase.UnRescue"/>.
             </note>
             </remarks>
             <returns><see langword="true"/> if the server exited rescue mode; otherwise, <see langword="false"/>.</returns>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.CreateSnapshot(System.String,ConoHaNet.Objects.Metadata)">
            <summary>
            Creates a new snapshot image for a specified server at its current state.
            </summary>
            <remarks>
            The server snapshot process is completed asynchronously. To wait for the image
            to be completed, you may call <see cref="M:ConoHaNet.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>.
            </remarks>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <returns><see langword="true"/> if the image creation process was successfully started; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageName"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageName"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.GetDetails">
            <summary>
            Gets the detailed information for the server.
            </summary>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.Server"/> object containing the details for the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.ListVolumes">
            <summary>
            Lists the volume attachments for the server.
            </summary>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.ServerVolume"/> objects describing the volumes attached to the server.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.AttachVolume(System.String,System.String)">
            <summary>
            Attaches a volume to the server.
            </summary>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:ConoHaNet.Objects.Volume.Id"/>.</param>
            <param name="storageDevice">The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value is <see langword="null"/>, an automatically generated device name will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerVolume"/> object containing the details about the volume.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.DetachVolume(System.String)">
            <summary>
            Detaches the specified volume from the server.
            </summary>
            <param name="volumeId">The volume attachment ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerVolume.Id">ServerVolume.Id</see>.</param>
            <returns><see langword="true"/> if the volume was successfully detached; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerBase.Refresh">
            <summary>
            Updates the current instance to match the values in the <see cref="T:ConoHaNet.Objects.Servers.Server"/>
            instance returned from a call to <see cref="M:ConoHaNet.Objects.Servers.ServerBase.GetDetails"/>.
            </summary>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerImage">
            <summary>
            Extends <see cref="T:ConoHaNet.Objects.Servers.SimpleServerImage"/> with detailed information about an image.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListImagesWithDetails(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.GetImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Image_Details-d1e4848.html">Get Image Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Objects.Servers.ServerImage._server">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Server"/> property.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.DiskConfig">
            <summary>
            Gets the default disk configuration used when creating, rebuilding, or resizing servers
            with the image. For images created from servers, the value is inherited from the server.
            </summary>
            <remarks>
            <note>This property is defined by the Rackspace-specific Disk Configuration Extension to the OpenStack Compute API.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute">Disk Configuration Extension (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.Status">
            <summary>
            Gets the "status" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.Created">
            <summary>
            Gets the "created" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.Progress">
            <summary>
            Gets the image completion progress, as a percentage.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <value>A percentage from 0 to 100 (inclusive) representing the image completion progress.</value>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.Updated">
            <summary>
            Gets the "updated" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.MinDisk">
            <summary>
            Gets the minimum disk requirements needed to create a server with the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.Server">
            <summary>
            Gets the "server" property of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerImage.MinRAM">
            <summary>
            Gets the minimum RAM requirements needed to create a server with the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.UpdateThis(ConoHaNet.Objects.Servers.SimpleServerImage)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.GetMetadata">
            <summary>
            Gets the metadata associated with the specified image.
            </summary>
            <returns>A <see cref="T:ConoHaNet.Objects.Metadata"/> object containing the metadata associated with the image.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListImageMetadata(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.SetMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Sets the metadata associated with the specified image, replacing any existing metadata.
            </summary>
            <param name="metadata">The metadata to associate with the image.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.SetImageMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.AddMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Updates the metadata for the specified image.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The image metadata to update.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.UpdateImageMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.AddMetadata(System.String,System.String)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.UpdateMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Updates the metadata for the specified image.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="metadata">The image metadata to update.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains any values with empty keys.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.UpdateImageMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.DeleteMetadata(ConoHaNet.Objects.Metadata)">
            <summary>
            Deletes the specified metadata items from the image.
            </summary>
            <remarks>
            <note>
            This method ignores the values in <paramref name="metadata"/>. Metadata items are
            removed whether or not their current values match those in <paramref name="metadata"/>.
            </note>
            </remarks>
            <param name="metadata">A collection of metadata items to delete.</param>
            <returns><see langword="true"/> if all of the metadata item were removed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="metadata"/> contains a null or empty key.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.DeleteImageMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.DeleteMetadataItem(System.String)">
            <summary>
            Deletes the specified metadata item from the image.
            </summary>
            <param name="key">The metadata key.</param>
            <returns><see langword="true"/> if the metadata item was removed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.DeleteImageMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerImage.UpdateMetadataItem(System.String,System.String)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="key"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="key"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateServerImageRequest">
            <summary>
            This models the JSON request used for the Create Image request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerImageRequest.Details">
            <summary>
            Gets additional details about the Create Image request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.CreateServerImageRequest.#ctor(ConoHaNet.Objects.Servers.CreateServerImageDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.CreateServerImageRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateServerImageDetails">
            <summary>
            This models the JSON body containing details for the Create Image request.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.Servers.CreateServerImageRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerImageDetails.ImageName">
            <summary>
            Gets the name of the image to create.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerImageDetails.Metadata">
            <summary>
            Gets the metadata to associate with the image.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.CreateServerImageDetails.#ctor(System.String,ConoHaNet.Objects.Metadata)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.CreateServerImageDetails"/> class
            with the specified name and metadata.
            </summary>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageName"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageName"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ListServerImagesResponse">
            <summary>
            This models the JSON response used for the List Images request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListServerImagesResponse.Images">
            <summary>
            Gets a collection of basic information about the images.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.GetImageDetailsResponse">
            <summary>
            This models the JSON response used for the Get Image Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Image_Details-d1e4848.html">Get Image Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.GetImageDetailsResponse.Image">
            <summary>
            Gets detailed information about the image.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ListImagesDetailsResponse">
            <summary>
            This models the JSON response used for the List Images with Details request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListImagesDetailsResponse.Images">
            <summary>
            Gets a collection of detailed information about the images.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerResizeDetails">
            <summary>
            This models the JSON body containing details for the Resize Server request.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.Servers.ServerResizeRequest"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Resize_Server-d1e3707.html">Resize Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerResizeDetails.Name">
            <summary>
            Gets the new name for the resized server.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerResizeDetails.Flavor">
            <summary>
            Gets the ID of the new flavor.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Flavor.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerResizeDetails.DiskConfig">
            <summary>
            The disk configuration. If the value is <see langword="null"/>, the default configuration for the image is used.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerResizeDetails.#ctor(System.String,ConoHaNet.Objects.Servers.DiskConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ServerResizeDetails"/> class with the specified details.
            </summary>
            <param name="flavor">The new flavor. This is obtained from <see cref="P:ConoHaNet.Objects.Flavor.Id">Flavor.Id</see>.</param>
            <param name="diskConfig">The disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.</param>
            <exception cref="T:System.ArgumentNullException">
            <para>If <paramref name="flavor"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>If <paramref name="flavor"/> is empty.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerResizeRequest">
            <summary>
            This models the JSON request used for the Resize Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Resize_Server-d1e3707.html">Resize Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerResizeRequest.Details">
            <summary>
            Gets additional information about the Resize Server request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerResizeRequest.#ctor(ConoHaNet.Objects.Servers.ServerResizeDetails)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ServerResizeRequest"/>
            class with the specified details.
            </summary>
            <param name="details">The details of the request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="details"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.RevertServerResizeRequest">
            <summary>
            This models the JSON request used for the Revert Resized Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Revert_Resized_Server-d1e4024.html">Revert Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ConfirmServerResizeRequest">
            <summary>
            This models the JSON request used for the Confirm Resized Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Confirm_Resized_Server-d1e3868.html">Confirm Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ListServersResponse">
            <summary>
            This models the JSON response used for the List Servers and List Servers with Details requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Servers-d1e2078.html">List Servers (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListServersResponse.Servers">
            <summary>
            Gets a collection of information about the servers.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListServersResponse.Links">
            <summary>
            Gets a collection of links related to the collection of servers.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerDetailsResponse">
            <summary>
            This models the JSON response used for the Get Server Details, Update Server, and Rebuild Server requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Server_Details-d1e2623.html">Get Server Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/ServerUpdate.html">Update Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Rebuild_Server-d1e3538.html">Rebuild Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerDetailsResponse.Server">
            <summary>
            Gets the detailed information about the server.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.UpdateServerRequest">
            <summary>
            This models the JSON request used for the Update Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/ServerUpdate.html">Update Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.UpdateServerRequest.Server">
            <summary>
            Gets additional details about the updated server.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.UpdateServerRequest.#ctor(System.String,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.UpdateServerRequest"/> class
            with the specified name and access IP addresses.
            </summary>
            <param name="name">The new name for the server. If the value is <see langword="null"/>, the server name is not changed.</param>
            <param name="accessIPv4">The new IP v4 address for the server, or <see cref="F:System.Net.IPAddress.None"/> to remove the configured IP v4 address for the server. If the value is <see langword="null"/>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server, or <see cref="F:System.Net.IPAddress.None"/> to remove the configured IP v6 address for the server. If the value is <see langword="null"/>, the server's IP v6 address is not updated.</param>
            <exception cref="T:System.ArgumentException">
            <para>If <paramref name="accessIPv4"/> is not <see cref="F:System.Net.IPAddress.None"/> and the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="accessIPv6"/> is not <see cref="F:System.Net.IPAddress.None"/> and the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/>.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.UpdateServerRequest.ServerUpdateDetails">
            <summary>
            This models the JSON body containing details for the Update Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.UpdateServerRequest.ServerUpdateDetails.Name">
            <summary>
            Gets the new name for the server, or <see langword="null"/> if the server's name should not be changed by the update.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.UpdateServerRequest.ServerUpdateDetails.AccessIPv4">
            <summary>
            Gets the IP v4 access address for the server, or <see langword="null"/> if the access address should not be changed by the update.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.UpdateServerRequest.ServerUpdateDetails.AccessIPv6">
            <summary>
            Gets the IP v6 access address for the server, or <see langword="null"/> if the access address should not be changed by the update.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.UpdateServerRequest.ServerUpdateDetails.Metadata">
            <summary>
            Gets the metadata to associate with the server.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.UpdateServerRequest.ServerUpdateDetails.#ctor(System.String,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.UpdateServerRequest"/> class
            with the specified name and access IP addresses.
            </summary>
            <param name="name">The new name for the server. If the value is <see langword="null"/>, the server name is not changed.</param>
            <param name="accessIPv4">The new IP v4 address for the server, or <see cref="F:System.Net.IPAddress.None"/> to remove the configured IP v4 address for the server. If the value is <see langword="null"/>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server, or <see cref="F:System.Net.IPAddress.None"/> to remove the configured IP v6 address for the server. If the value is <see langword="null"/>, the server's IP v6 address is not updated.</param>
            <exception cref="T:System.ArgumentException">
            <para>If <paramref name="accessIPv4"/> is not <see cref="F:System.Net.IPAddress.None"/> and the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="accessIPv6"/> is not <see cref="F:System.Net.IPAddress.None"/> and the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/>.</para>
            </exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD">
            <summary>
            This models the JSON body containing details for the Rebuild Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Rebuild_Server-d1e3538.html">Rebuild Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.Name">
            <summary>
            Gets the new name for the server.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.ImageName">
            <summary>
            Gets the image to rebuild the server from. This is specified as an image ID (see <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/>) or a full URL.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.Flavor">
            <summary>
            The new flavor for server. This is obtained from <see cref="P:ConoHaNet.Objects.Flavor.Id"/>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.DiskConfig">
            <summary>
            The disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.AdminPassword">
            <summary>
            Gets the new admin password for the server.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.Metadata">
            <summary>
            Gets the list of metadata to associate with the server. If the value is <see langword="null"/>, the metadata associated with the server is not changed during the rebuild operation.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.Personality">
            <summary>
            The path and contents of a file to inject in the target file system during the rebuild operation. If the value is <see langword="null"/>, no file is injected.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.AccessIPv4">
            <summary>
            The new IP v4 address for the server. If the value is <see langword="null"/>, the server's IP v4 address is not updated.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerRebuildDetails_OLD.AccessIPv6">
            <summary>
            The new IP v6 address for the server. If the value is <see langword="null"/>, the server's IP v6 address is not updated.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateServerRequest">
            <summary>
            This models the JSON request used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.Details">
            <summary>
            Gets additional details about the Create Server request.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.CreateServerRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],ConoHaNet.Objects.Servers.DiskConfiguration,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{ConoHaNet.Objects.Personality})">
             <summary>
             Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.CreateServerRequest"/> class
             with the specified details.
             </summary>
             <param name="name">Name of the new server.</param>
             <param name="imageId">The image to use for the new server instance. This is
             specified as an image ID (see <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/>) or a full URL.</param>
             <param name="flavorId">The flavor to use for the new server instance. This
             is specified as a flavor ID (see <see cref="P:ConoHaNet.Objects.Flavor.Id"/>) or a full URL.</param>
             <param name="adminPass">The root Password </param>
             <param name="keyName">The ssh key name</param>
             <param name="securityGroupNames">A collection of openstack security group name</param>
             <param name="attachVolumeIds">A collection of voiume ids which will be attached to the instance.</param>
             <param name="diskConfig">The disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.</param>
             <param name="metadata">The metadata to associate with the server.</param>
             <param name="personality">A collection of <see cref="T:ConoHaNet.Objects.Personality"/> objects describing the paths and contents of files to inject in the target file system during the creation process. If the value is <see langword="null"/>, no files are injected.</param>
             <param name="accessIPv4">The behavior of this value is unspecified. Do not use.</param>
             <param name="accessIPv6">The behavior of this value is unspecified. Do not use.</param>
            <param name="networks">A collection of identifiers for networks to initially connect to the server. These are obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see></param>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails">
            <summary>
            This models the JSON body containing details for a Create Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.Name">
            <summary>
            Gets the name of the new server to create.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.ImageId">
            <summary>
            Gets the image to use for the new server instance. This is
            specified as an image ID (see <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/>) or a full URL.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.FlavorId">
            <summary>
            Gets the flavor to use for the new server instance. This
            is specified as a flavor ID (see <see cref="P:ConoHaNet.Objects.Flavor.Id"/>) or a full URL.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.AdminPass">
            <summary>
            Set the password to use for the new server instance. 
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.KeyName">
            <summary>
            Gets the SSHKeyName to use for the new server instance. This
            is specified as a flavor ID (see <see cref="P:ConoHaNet.Objects.Servers.Keypair.Name"/>)
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.SecurityGroupNames">
            <summary>
            Gets the security group names to use for the new server instance. This
            is specified as a flavor ID (see <see cref="T:ConoHaNet.Objects.Networks.NetworkSecurityGroup"/>)
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.BlockDeviceMappings">
            <summary>
            
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.DiskConfig">
            <summary>
            Gets the disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.Metadata">
            <summary>
            Gets the metadata to associate with the server.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.AccessIPv4">
            <summary>
            The behavior of this value is unspecified. Do not use.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.AccessIPv6">
            <summary>
            The behavior of this value is unspecified. Do not use.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.Networks">
            <summary>
            Gets a collection of information about networks to initially connect to the server.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.Personality">
            <summary>
            Gets a collection of <see cref="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.Personality"/> objects describing the paths and
            contents of files to inject in the target file system during the creation process.
            If the value is <see langword="null"/>, no files are injected.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],ConoHaNet.Objects.Servers.DiskConfiguration,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{ConoHaNet.Objects.Personality})">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails"/> class
            with the specified details.
            </summary>
            <param name="name">Name of the new server.</param>
            <param name="imageName">The image to use for the new server instance. This is
            specified as an image ID (see <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavorId">The flavor to use for the new server instance. This
            is specified as a flavor ID (see <see cref="P:ConoHaNet.Objects.Flavor.Id"/>) or a full URL.</param>
            <param name="adminPass">The root Password </param>
            <param name="keyName">the ssh keyname to add to server</param>
            <param name="securityGroupNames">A collection of openstack security group name</param>
            <param name="attachVolumeIds">A collection of voiume ids which will be attached to the instance.</param>
            <param name="diskConfig">The disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.</param>
            <param name="metadata">The metadata to associate with the server.</param>
            <param name="personality">A collection of <see cref="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.Personality"/> objects describing the paths and contents of files to inject in the target file system during the creation process. If the value is <see langword="null"/>, no files are injected.</param>
            <param name="accessIPv4">The behavior of this value is unspecified. Do not use.</param>
            <param name="accessIPv6">The behavior of this value is unspecified. Do not use.</param>
            <param name="networks">A collection of identifiers for networks to initially connect to the server. These are obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see></param>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.NewServerNetwork">
            <summary>
            This models the JSON body containing details for a connected network
            within the Create Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.NewServerNetwork.NetworkId">
            <summary>
            Gets the ID of the network.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.CloudNetwork.Id"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.NewServerNetwork.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.CreateServerRequest.CreateServerDetails.NewServerNetwork"/> class
            with the specified ID.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateServerResponse">
            <summary>
            This models the JSON response used for the Create Server request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateServerResponse.Server">
            <summary>
            Gets information about the created server.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerState">
            <summary>
            Represents the state of a compute server.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known server states,
            with added support for unknown states returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Active">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server which is active and ready to use.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.ShutOff">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server which is currently being shutdowned.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Build">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server which is currently being built.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Deleted">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server which has been deleted.
            </summary>
            <remarks>
            By default, the <see cref="M:ConoHaNet.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,ConoHaNet.Objects.CloudIdentity)"/> operation does not return
            servers which have been deleted. To list deleted servers, call
            <see cref="M:ConoHaNet.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,ConoHaNet.Objects.CloudIdentity)"/> specifying the <c>changesSince</c>
            parameter.
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Error">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server which failed to perform
            an operation and is now in an error state.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.HardReboot">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently performing a hard
            reboot. When the reboot operation completes, the server will be in the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/>
            state.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.HardReboot"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.RebootServer(System.String,ConoHaNet.Objects.RebootType,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Migrating">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server which is currently being moved
            from one physical node to another.
            </summary>
            <remarks>
            <note>Server migration is a Rackspace-specific extension.</note>
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Password">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing the password for the server is being changed.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ChangeAdministratorPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Reboot">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently performing a soft
            reboot. When the reboot operation completes, the server will be in the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/>
            state.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.SoftReboot"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.RebootServer(System.String,ConoHaNet.Objects.RebootType,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Rebuild">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently being rebuilt.
            When the rebuild operation completes, the server will be in the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/>
            state if the rebuild was successful; otherwise, it will be in the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Error"/> state
            if the rebuild operation failed.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.Servers.ServerBase"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.RebuildServer(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Rescue">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently in rescue mode.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.Rescue"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.RescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Resize">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently executing a resize action.
            When the resize operation completes, the server will be in the <see cref="P:ConoHaNet.Objects.Servers.ServerState.VerifyResize"/>
            state if the resize was successful; otherwise, it will be in the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/> state
            if the resize operation failed.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.Resize(System.String,ConoHaNet.Objects.Servers.DiskConfiguration)"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ResizeServer(System.String,System.String,ConoHaNet.Objects.Servers.DiskConfiguration,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.RevertResize">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently executing a revert resize action.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.RevertResize"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.RevertServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Suspended">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> for a server that is currently inactive, either by request or necessity.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.Unknown">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> for a server that is currently in an unknown state.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.VerifyResize">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server which completed a resize operation
            and is now waiting for the operation to be confirmed or reverted.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.Resize(System.String,ConoHaNet.Objects.Servers.DiskConfiguration)"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ResizeServer(System.String,System.String,ConoHaNet.Objects.Servers.DiskConfiguration,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.ConfirmResize"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ConfirmServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.PrepRescue">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently executing a rescue action.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.Rescue"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.RescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerState.PrepUnrescue">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> representing a server currently executing an un-rescue action.
            </summary>
            <seealso cref="M:ConoHaNet.Objects.Servers.ServerBase.UnRescue"/>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.UnRescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.Servers.ServerState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.ServerState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerVolume">
            <summary>
            This models the JSON description of a volume attachment.
            </summary>
            <remarks>
            <note>Volume attachments are a Rackspace-specific extension to the OpenStack Compute Service.</note>
            </remarks>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/List_Volume_Attachments.html">List Volume Attachments (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerVolume.Device">
            <summary>
            Gets the "device" property associated with the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerVolume.ServerId">
            <summary>
            Gets the "serverId" property associated with the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerVolume.Id">
            <summary>
            Gets the unique identifier for the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerVolume.VolumeId">
            <summary>
            Gets the "volumeId" property associated with the volume attachment.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Volume.Id"/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.AttachServerVolumeRequest">
            <summary>
            This models the JSON request used for the Attach Volume to Server request.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Attach Volume to Server</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.AttachServerVolumeRequest.ServerVolumeData">
            <summary>
            Gets additional information about the volume to attach.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.AttachServerVolumeRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.AttachServerVolumeRequest"/> class
            with the given device name and volume ID.
            </summary>
            <param name="device">
            The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value
            is <see langword="null"/>, an automatically generated device name will be used.
            </param>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:ConoHaNet.Objects.Volume.Id"/>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.AttachServerVolumeRequest.AttachServerVolumeData">
            <summary>
            This models the JSON body containing the details of the Attach Volume to Server request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.AttachServerVolumeRequest.AttachServerVolumeData.Device">
            <summary>
            Gets the name of the device, such as <localUri>/dev/xvdb</localUri>.
            If the value is <see langword="null"/>, the server automatically assigns a device
            name.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.AttachServerVolumeRequest.AttachServerVolumeData.VolumeId">
            <summary>
            Gets the ID of the volume to attach to the server instance.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.AttachServerVolumeRequest.AttachServerVolumeData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.AttachServerVolumeRequest.AttachServerVolumeData"/> class
            with the given device name and volume ID.
            </summary>
            <param name="device">
            The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value
            is <see langword="null"/>, an automatically generated device name will be used.
            </param>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:ConoHaNet.Objects.Volume.Id"/>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerVolumeResponse">
            <summary>
            This models the JSON response used for the Attach Volume to Server and Get Volume Attachment Details requests.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Attach Volume to Server</seealso>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Get Volume Attachment Details</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerVolumeResponse.ServerVolume">
            <summary>
            Gets information about the volume attachment.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ServerVolumeListResponse">
            <summary>
            This models the JSON response used for the List Volume Attachments request.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">List Volume Attachments</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ServerVolumeListResponse.ServerVolumes">
            <summary>
            Gets a collection of information about the volume attachments.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.SimpleServer">
            <summary>
            This models the basic JSON description of a server.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SimpleServer.Name">
            <summary>
            Gets the server name.
            <note type="warning">The value of this property is not defined by OpenStack, and may not be consistent across vendors.</note>
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SimpleServer.UpdateThis(ConoHaNet.Objects.Servers.ServerBase)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.SimpleServerImage">
            <summary>
            Provides basic information about an image.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Images-d1e4427.html">Images (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Images-d1e4427.html">Images (Rackspace Next Generation Cloud Servers Developer Guide  - API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">
            <summary>
            Gets the unique identifier for the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SimpleServerImage.Links">
            <summary>
            Gets a collection of links related to the current image.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/LinksReferences.html">Links and References (OpenStack Compute API v2 and Extensions Reference - API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SimpleServerImage.Name">
            <summary>
            Gets the name of the image.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SimpleServerImage.WaitForActive(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the image to enter the <see cref="P:ConoHaNet.Objects.Servers.ImageState.Active"/> state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the image at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the image enters either the
             <see cref="P:ConoHaNet.Objects.Servers.ImageState.Active"/> state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="refreshCount">Number of times to poll the image's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="M:ConoHaNet.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SimpleServerImage.WaitForDelete(System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
            <summary>
            Waits for the image to enter the <see cref="P:ConoHaNet.Objects.Servers.ImageState.Deleted"/> state or to be removed.
            </summary>
            <remarks>
            <note type="warning">
            This is a blocking operation and will not return until the image enters either the
            <see cref="P:ConoHaNet.Objects.Servers.ImageState.Deleted"/> state, an error state, is removed, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.WaitForImageDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SimpleServerImage.WaitForState(ConoHaNet.Objects.Servers.ImageState,ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the image to enter a specified state.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the image at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the image enters either the expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedState">The expected state.</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
             <param name="refreshCount">Number of times to poll the image's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedState"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="M:ConoHaNet.Providers.IComputeProvider.WaitForImageState(System.String,ConoHaNet.Objects.Servers.ImageState,ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SimpleServerImage.WaitForState(ConoHaNet.Objects.Servers.ImageState[],ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32})">
             <summary>
             Waits for the image to enter any one of a set of specified states.
             </summary>
             <remarks>
             When the method returns, the current instance is updated to reflect the state
             of the image at the end of the operation.
            
             <note type="caller">
             This is a blocking operation and will not return until the image enters either an expected state, an error state, or the retry count is exceeded.
             </note>
             </remarks>
             <param name="expectedStates">The expected state(s).</param>
             <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
             <param name="refreshCount">Number of times to poll the image's status.</param>
             <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
             <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="expectedStates"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">If <paramref name="expectedStates"/> is empty.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="refreshCount"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="refreshDelay"/> is negative.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="M:ConoHaNet.Providers.IComputeProvider.WaitForImageState(System.String,ConoHaNet.Objects.Servers.ImageState[],ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SimpleServerImage.UpdateThis(ConoHaNet.Objects.Servers.SimpleServerImage)">
            <summary>
            Updates the current instance to match the information in <paramref name="serverImage"/>.
            </summary>
            <remarks>
            <note type="implement">
            This method should be overridden in derived types to ensure all properties
            for the current instance are updated.
            </note>
            </remarks>
            <param name="serverImage">The updated information for the current image.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverImage"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SimpleServerImage.Delete">
            <summary>
            Deletes the specified image.
            </summary>
            <returns><see langword="true"/> if the image was successfully deleted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.DeleteImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Image-d1e4957.html">Delete Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.SnapshotState">
            <summary>
            Represents the state of a block storage snapshot.
            </summary>
            <remarks>
            This class functions as a strongly-typed enumeration of known snapshot states,
            with added support for unknown states returned by a server extension.
            </remarks>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SnapshotState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SnapshotState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SnapshotState.Creating">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> indicating the snapshot is being created.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SnapshotState.Available">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> indicating the snapshot is ready to be attached to an instance.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SnapshotState.Deleting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> indicating the snapshot is being deleted.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SnapshotState.Error">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> indicating an error occurred during snapshot creation.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.SnapshotState.ErrorDeleting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/> indicating an error occurred during snapshot deletion.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.SnapshotState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.Servers.SnapshotState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.SnapshotState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.TaskState">
             <summary>
             Represents the task status of a server.
             </summary>
             <remarks>
             This class functions as a strongly-typed enumeration of known task states,
             with added support for unknown states returned by a server extension.
            
             <note>
             This property is defined by the Rackspace-specific Extended Status Extension
             to the OpenStack Compute API. The API does not regulate the status values,
             so it is possible that values can be added, removed, or renamed.
             </note>
             </remarks>
             <seealso cref="P:ConoHaNet.Objects.Servers.Server.TaskState"/>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ext_status.html#task_state">OS-EXT-STS:task_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.TaskState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.TaskState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.BlockDeviceMapping">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Deleting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ImageSnapshot">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance indicating that a create image action has been
            initiated and that the hypervisor is creating the snapshot. Any operations that would modify
            data on the server's virtual hard disk should be avoided during this time.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ImageBackup">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ImagePendingUpload">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance indicating that the hypervisor has completed taking a
            snapshot of the server. At this point, the hypervisor is packaging the snapshot and preparing
            it for upload to the image store.
            </summary>
            <preliminary/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ImageUploading">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance indicating that the hypervisor is currently uploading
            a packaged snapshot of the server to the image store.
            </summary>
            <preliminary/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Migrating">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Networking">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Pausing">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.PoweringOff">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.PoweringOn">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Rebooting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.RebootingHard">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Rebuilding">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.RebuildBlockDeviceMapping">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.RebuildSpawning">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Rescuing">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ResizeConfirming">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ResizeFinish">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ResizeMigrated">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ResizeMigrating">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ResizePrep">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.ResizeReverting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Resuming">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Scheduling">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Spawning">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Starting">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Stopping">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Suspending">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Unpausing">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.Unrescuing">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.TaskState.UpdatingPassword">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.TaskState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.TaskState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.Servers.TaskState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.TaskState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.VirtualInterface">
            <summary>
            Represents the detailed configuration of a virtual network interface.
            </summary>
            <remarks>
            <note>
            Virtual network interfaces are a Rackspace-specific extension to the OpenStack Networking Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualInterface.Id">
            <summary>
            Gets the virtual interface ID.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualInterface.Addresses">
            <summary>
            Gets the network addresses associated with the virtual interface.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualInterface.MACAddress">
            <summary>
            Gets the Media Access Control (MAC) address for the virtual interface.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.VirtualInterfaceAddress">
            <summary>
            Represents the IP address of a virtual interface on a specific network.
            </summary>
            <remarks>
            <note>
            Virtual network interfaces are a Rackspace-specific extension to the OpenStack Networking Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualInterfaceAddress.Address">
            <summary>
            Gets the IP address of the virtual interface.
            </summary>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualInterfaceAddress.NetworkId">
            <summary>
            Gets the ID of the network this virtual interface is connected to.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.CloudNetwork.Id"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualInterfaceAddress.NetworkLabel">
            <summary>
            Gets the label of the network this virtual interface is connected to.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.CloudNetwork.Label"/>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest">
            <summary>
            This models the JSON request used for the Create Virtual Interface request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/GET_os-virtual-interfaces-v2_getVirtualInterfaces_v2__tenant_id__servers__server_id__os-virtual-interfaces_ext-os-virtual-interfaces.html">Create Virtual Interface</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest.VirtualInterface">
            <summary>
            Gets additional details about the virtual interface to create.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest"/>
            class with the specified network ID.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest.CreateVirtualInterface">
            <summary>
            This models the JSON body containing details for a Create Virtual Interface request.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest.CreateVirtualInterface.NetworkId">
            <summary>
            Gets the network ID.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.CloudNetwork.Id"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest.CreateVirtualInterface.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.CreateVirtualInterfaceRequest.CreateVirtualInterface"/>
            class with the specified network ID.
            </summary>
            <param name="networkId">The network ID. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.ListVirtualInterfacesResponse">
            <summary>
            This models the JSON response used for the Create Virtual Interface and List Virtual Interfaces requests.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Create Virtual Interface</seealso>
            <seealso href="https://www.google.co.jp/search?q=openstack+">List Virtual Interfaces</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.ListVirtualInterfacesResponse.VirtualInterfaces">
            <summary>
            Gets a collection of information about the virtual interfaces.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.VirtualMachineState">
             <summary>
             Represents the virtual machine (VM) state of a server.
             </summary>
             <remarks>
             This class functions as a strongly-typed enumeration of known virtual machine states,
             with added support for unknown states returned by a server extension.
            
             <note>
             This property is defined by the Rackspace-specific Extended Status Extension
             to the OpenStack Compute API. The API does not regulate the status values,
             so it is possible that values can be added, removed, or renamed.
             </note>
             </remarks>
             <seealso cref="P:ConoHaNet.Objects.Servers.Server.VMState"/>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#vm_state">OS-EXT-STS:vm_state (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.VirtualMachineState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> class with the specified name.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.VirtualMachineState.FromName(System.String)">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The unique <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance with the specified name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Active">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Build">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Deleted">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Error">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Paused">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Rescued">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Resized">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.SoftDeleted">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Stopped">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Servers.VirtualMachineState.Suspended">
            <summary>
            Gets a <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/> instance representing <placeholder>description</placeholder>.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Servers.VirtualMachineState.Converter">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.Servers.VirtualMachineState"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.Servers.VirtualMachineState.Converter.FromName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.ResourceIdentifier`1">
            <summary>
            Represents a unique identifier within the context of a cloud services provider.
            </summary>
            <typeparam name="T">The resource identifier type.</typeparam>
            <threadsafety static="true" instance="false"/>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Objects.ResourceIdentifier`1._id">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.ResourceIdentifier`1.Value"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.#ctor(System.String)">
            <summary>
            Initialized a new instance of the <see cref="T:ConoHaNet.Objects.ResourceIdentifier`1"/> class
            with the specified identifier.
            </summary>
            <param name="id">The resource identifier value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.op_Equality(ConoHaNet.Objects.ResourceIdentifier{`0},ConoHaNet.Objects.ResourceIdentifier{`0})">
            <summary>
            Determines whether two specified resource identifiers have the same value.
            </summary>
            <param name="left">The first resource identifier to compare, or <see langword="null"/>.</param>
            <param name="right">The second resource identifier to compare, or <see langword="null"/>.</param>
            <returns><see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.op_Inequality(ConoHaNet.Objects.ResourceIdentifier{`0},ConoHaNet.Objects.ResourceIdentifier{`0})">
            <summary>
            Determines whether two specified resource identifiers have different values.
            </summary>
            <param name="left">The first resource identifier to compare, or <see langword="null"/>.</param>
            <param name="right">The second resource identifier to compare, or <see langword="null"/>.</param>
            <returns><see langword="true"/> if the value of <paramref name="left"/> is different from the value of <paramref name="right"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:ConoHaNet.Objects.ResourceIdentifier`1.Value">
            <summary>
            Gets the value of this resource identifier.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.Equals(`0)">
             <inheritdoc/>
             <remarks>
             The default implementation uses <see cref="P:System.StringComparer.Ordinal"/> to compare
             the <see cref="P:ConoHaNet.Objects.ResourceIdentifier`1.Value"/> property of two identifiers.
            
             <note type="implement">
             This method may be overridden to change the way unique identifiers are compared.
             </note>
             </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.GetHashCode">
             <inheritdoc/>
             <remarks>
             The default implementation uses <see cref="P:System.StringComparer.Ordinal"/> to calculate
             and return a hash code from the <see cref="P:ConoHaNet.Objects.ResourceIdentifier`1.Value"/> property.
            
             <note type="implement">
             This method may be overridden to change the way unique identifiers are compared.
             </note>
             </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Objects.ResourceIdentifier`1.ConverterBase">
            <summary>
            Provides support for serializing and deserializing <see cref="T:ConoHaNet.Objects.ResourceIdentifier`1"/>
            objects to JSON string values.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.ConverterBase.ConvertToString(`0)">
            <remarks>
            This method uses <see cref="P:ConoHaNet.Objects.ResourceIdentifier`1.Value"/> for serialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.ConverterBase.ConvertToObject(System.String)">
            <remarks>
            If <paramref name="str"/> is <see langword="null"/> or an empty string, this method returns <see langword="null"/>.
            Otherwise, this method uses <see cref="M:ConoHaNet.Objects.ResourceIdentifier`1.ConverterBase.FromValue(System.String)"/> for deserialization.
            </remarks>
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Objects.ResourceIdentifier`1.ConverterBase.FromValue(System.String)">
            <summary>
            Creates a resource identifier with the given value.
            </summary>
            <param name="id">The resource identifier value. This value is never <see langword="null"/> or empty.</param>
            <returns>An instance of <typeparamref name="T"/> corresponding representing the specified <paramref name="id"/>.</returns>
        </member>
        <member name="T:ConoHaNet.Objects.Snapshot">
            <summary>
            This models the basic JSON description of a snapshot.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IBlockStorageProvider.ListSnapshots(System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Snapshot.Id">
            <summary>
            Gets the unique identifier for the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Snapshot.DisplayName">
            <summary>
            Gets the name of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Snapshot.DisplayDescription">
            <summary>
            Gets the description of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Snapshot.VolumeId">
            <summary>
            Gets the ID of the volume this snapshot was taken from.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <seealso cref="P:ConoHaNet.Objects.Volume.Id"/>
        </member>
        <member name="P:ConoHaNet.Objects.Snapshot.Status">
            <summary>
            Gets the status of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Snapshot.Size">
            <summary>
            Gets the "size" property of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Snapshot.CreatedAt">
            <summary>
            Gets the "created_at" property of the snapshot.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.ServiceCatalog">
            <summary>
            Represents a single service provided to an authenticated user. Each service
            has one or more <see cref="P:ConoHaNet.Objects.ServiceCatalog.Endpoints"/> providing access information for the
            service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.ServiceCatalog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ServiceCatalog"/> class.
            </summary>
            <remarks>
            This constructor is used by the JSON deserializer.
            </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.ServiceCatalog.#ctor(System.String,System.String,ConoHaNet.Objects.Endpoint[])">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.ServiceCatalog"/> class
            with the specified name, username, and endpoints.
            </summary>
            <param name="name">The display name of the service.</param>
            <param name="type">The canonical name of the service.</param>
            <param name="endpoints">A collection of <see cref="T:ConoHaNet.Objects.Endpoint"/> objects describing the service endpoints.</param>
        </member>
        <member name="P:ConoHaNet.Objects.ServiceCatalog.Endpoints">
            <summary>
            Gets the endpoints for the service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ServiceCatalog.Name">
            <summary>
            Gets the display name of the service, which may be a vendor-specific
            product name.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.ServiceCatalog.Type">
            <summary>
            Gets the canonical name of the specification implemented by this service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.Status">
            <summary>
            Represents the status of an operation with a status code and description
            of the status.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Status.Code">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.Status.Description">
            <summary>
            Gets the description of the status.
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.Status.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.Status"/> class with the specified
            status code and description.
            </summary>
            <param name="code">The status code.</param>
            <param name="description">The description of the status.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="description"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="description"/> is empty.</exception>
        </member>
        <member name="T:ConoHaNet.Objects.User">
            <summary>
            Represents a user account.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IIdentityProvider.ListUsers(ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Objects.User._domainId">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.User.DomainId"/> property.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.User.DefaultRegion">
             <summary>
             Gets or sets the default region of the user.
             <note type="warning">The value of this property is not defined. Do not use.</note>
             </summary>
             <remarks>
             Changes to this property are not automatically saved on the server. To apply the
             changes, call <see cref="M:ConoHaNet.Providers.IIdentityProvider.UpdateUser(ConoHaNet.Objects.User,ConoHaNet.Objects.CloudIdentity)"/> after setting this property.
            
             <note>
             This property is a Rackspace-specific extension to the OpenStack Identity Service.
             </note>
             </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.User.DomainId">
            <summary>
            Gets the domain ID of the user.
            </summary>
            <remarks>
            <note>
            This property is a Rackspace-specific extension to the OpenStack Identity Service.
            </note>
            </remarks>
            <preliminary/>
        </member>
        <member name="P:ConoHaNet.Objects.User.Id">
            <summary>
            Gets the unique identifier for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.User.Username">
            <summary>
            Gets or sets the "username" property of the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            Changes to this property are not automatically saved on the server. To apply the
            changes, call <see cref="M:ConoHaNet.Providers.IIdentityProvider.UpdateUser(ConoHaNet.Objects.User,ConoHaNet.Objects.CloudIdentity)"/> after setting this property.
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.User.Email">
            <summary>
            Gets or sets the "email" property of the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            Changes to this property are not automatically saved on the server. To apply the
            changes, call <see cref="M:ConoHaNet.Providers.IIdentityProvider.UpdateUser(ConoHaNet.Objects.User,ConoHaNet.Objects.CloudIdentity)"/> after setting this property.
            </remarks>
        </member>
        <member name="P:ConoHaNet.Objects.User.Enabled">
            <summary>
            Gets or sets the "enabled" property of the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
            <remarks>
            Changes to this property are not automatically saved on the server. To apply the
            changes, call <see cref="M:ConoHaNet.Providers.IIdentityProvider.UpdateUser(ConoHaNet.Objects.User,ConoHaNet.Objects.CloudIdentity)"/> after setting this property.
            </remarks>
        </member>
        <member name="T:ConoHaNet.Objects.UserCredential">
            <summary>
            Represents a set of credentials for a user.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IIdentityProvider.ListUserCredentials(System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listCredentials_v2.0_users__userId__OS-KSADM_credentials_.html">List Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.UserCredential.Name">
            <summary>
            Gets the "name" property for the credentials.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.UserCredential.Username">
            <summary>
            Gets the "username" property for the credentials.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.UserCredential.APIKey">
            <summary>
            Gets the "apiKey" property for the credentials.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="M:ConoHaNet.Objects.UserCredential.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.UserCredential"/> class
            with the specified name, username, and API key.
            </summary>
            <param name="name">The name.</param>
            <param name="username">The username.</param>
            <param name="apiKey">The API key.</param>
        </member>
        <member name="T:ConoHaNet.Objects.Volumes.ListVolumeResponse">
            <summary>
            This models the JSON response used for the List Volume Summaries request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Summary_Volumes.html">List Volume Summaries (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Volumes.ListVolumeResponse.Volumes">
            <summary>
            Gets a collection of information about the volumes.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.Volumes.ListVolumeTypeResponse">
            <summary>
            This models the JSON response used for the List Volume Types request.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_List_Types.html">List Volume Types (OpenStack Block Storage Service API Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.Volumes.ListVolumeTypeResponse.VolumeTypes">
            <summary>
            Gets a collection of information about the volume types.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.VolumeType">
            <summary>
            Represents the type of a volume in the Block Storage service.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IBlockStorageProvider.ListVolumeTypes(System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.IBlockStorageProvider.DescribeVolumeType(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.VolumeType.Id">
            <summary>
            Gets the unique identifier for this volume type.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.VolumeType.Name">
            <summary>
            Gets the name of the volume type.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.IdentityToken">
            <summary>
            Represents the authentication token used for making authenticated calls to
            multiple APIs.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.IdentityToken.Expires">
            <summary>
            Gets the token expiration time in the format originally returned by the
            authentication response.
            </summary>
            <seealso cref="M:ConoHaNet.Providers.IIdentityProvider.GetToken(ConoHaNet.Objects.CloudIdentity,System.Boolean)"/>
        </member>
        <member name="P:ConoHaNet.Objects.IdentityToken.Id">
            <summary>
            Gets the token ID which can be used to make authenticated API calls.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.IdentityToken.Tenant">
            <summary>
            Gets a <see cref="P:ConoHaNet.Objects.IdentityToken.Tenant"/> object containing the name and ID of the
            tenant (or account) for the authenticated credentials.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.IdentityToken.IsExpired">
            <summary>
            Gets whether or not the token has expired. This property simply checks
            the <see cref="P:ConoHaNet.Objects.IdentityToken.Expires"/> property against the current system time.
            If the <see cref="P:ConoHaNet.Objects.IdentityToken.Expires"/> value is missing or not in a recognized
            format, the token is assumed to have expired.
            </summary>
            <value><see langword="true"/> if the token has expired; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:ConoHaNet.Objects.IdentityToken.AuthenticationTypes">
            <summary>
            Gets a Collection of <see cref="T:ConoHaNet.Objects.AuthenticationType"/> objects representing the ways the 
            user has authenticated.
            </summary>
            <preliminary/>
        </member>
        <member name="T:ConoHaNet.Objects.UserAccess">
            <summary>
            Represents the response to a user authentication.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Objects.UserAccess.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.UserAccess"/> class.
            </summary>
            <remarks>
            This constructor is used by the JSON deserializer.
            </remarks>
        </member>
        <member name="M:ConoHaNet.Objects.UserAccess.#ctor(ConoHaNet.Objects.IdentityToken,ConoHaNet.Objects.UserDetails,ConoHaNet.Objects.ServiceCatalog[])">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Objects.UserAccess"/> class
            with the specified token, user, and service catalog.
            </summary>
            <param name="token">The <see cref="T:ConoHaNet.Objects.IdentityToken"/>.</param>
            <param name="user">The <see cref="T:ConoHaNet.Objects.UserDetails"/>.</param>
            <param name="serviceCatalog">List of <see cref="P:ConoHaNet.Objects.UserAccess.ServiceCatalog"/>s.</param>
        </member>
        <member name="P:ConoHaNet.Objects.UserAccess.Token">
            <summary>
            Gets the <see cref="T:ConoHaNet.Objects.IdentityToken"/> which allows providers to make authenticated
            calls to API methods.
            </summary>
            <remarks>
            The specific manner in which the token is used is provider-specific. Some implementations
            pass the token's <see cref="P:ConoHaNet.Objects.IdentityToken.Id"/> as an HTTP header when requesting a
            resource.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.UserAccess.User">
            <summary>
            Gets the details for the authenticated user, such as the username and roles.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.UserAccess.ServiceCatalog">
            <summary>
            Gets the services which may be accessed by this user.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Objects.UserAgentGenerator">
            <summary>
            Generates the User-Agent value which identifies this SDK in REST requests.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="P:ConoHaNet.Objects.UserAgentGenerator.UserAgent">
            <summary>
            Gets the User-Agent value for this SDK.
            </summary>
        </member>
        <member name="T:ConoHaNet.Objects.UserDetails">
            <summary>
            Contains additional information about an authenticated user.
            </summary>
            <seealso cref="P:ConoHaNet.Objects.UserAccess.User"/>
            <seealso cref="M:ConoHaNet.Providers.IIdentityProvider.Authenticate(ConoHaNet.Objects.CloudIdentity)"/>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Objects.UserDetails._domainId">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Objects.UserDetails.DomainId"/> property.
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.UserDetails.Id">
            <summary>
            Gets the unique identifier for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.UserDetails.Name">
            <summary>
            Gets the "name" property for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.UserDetails.Roles">
            <summary>
            Gets the "roles" property for the user.
            <note type="warning">The value of this property is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="P:ConoHaNet.Objects.UserDetails.DefaultRegion">
             <summary>
             Gets the default region for the user.
             </summary>
             <remarks>
             Users can be assigned a default region so that, when there is a choice between
             multiple endpoints associated with a service in the user's catalog, the endpoint
             for the user's default region will be selected if it is available. The default
             region is only used when a region is not explicitly specified in the API call.
            
             <note>
             This property is a Rackspace-specific extension to the OpenStack Identity Service.
             </note>
             </remarks>
             <seealso href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Sample_Request_Response-d1e64.html">Sample Authentication Request and Response (Rackspace Cloud Identity Client Developer Guide - API v2.0)</seealso>
        </member>
        <member name="P:ConoHaNet.Objects.UserDetails.DomainId">
            <summary>
            Gets the domain ID of the user.
            </summary>
            <remarks>
            <note>
            This property is a Rackspace-specific extension to the OpenStack Identity Service.
            </note>
            </remarks>
            <preliminary/>
        </member>
        <member name="T:ConoHaNet.IOpenStackMember">
            <summary>
            Provides functionality to OpenStackMember.
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.Identity">
            <summary>
            Gets the CloudIdentity
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.IdentityProvider">
            <summary>
            Gets the CloudIdentityProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.ServersProvider">
            <summary>
            Gets the CloudServersProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.NetworksProvider">
            <summary>
            Gets the CloudNetworksProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.BlockStorageProvider">
            <summary>
            Gets the CloudBlockStorageProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.AccountServiceProvider">
            <summary>
            Gets the CloudAccountServiceProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.ImagesProvider">
            <summary>
            Gets the CloudImagesProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.DatabaseProvider">
            <summary>
            Gets the CloudDatabaseProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.DnsProvider">
            <summary>
            Gets the CloudDnsProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.MailServiceProvider">
            <summary>
            Gets the CloudMailServiceProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.FilesProvider">
            <summary>
            Gets the CloudFilesProvider
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.DefaultPublicEndPointUri">
            <summary>
            Gets the default public endpoint uri
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.DefaultPublicEndPoint">
            <summary>
            Gets the default public endpoint uri string
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.UserName">
            <summary>
            Gets user name
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.TenantId">
            <summary>
            Gets the tenant id
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.TenantName">
            <summary>
            Gets the tenant name
            </summary>
        </member>
        <member name="P:ConoHaNet.IOpenStackMember.DefaultRegion">
            <summary>
            Gets the default region string
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateUserAccess">
            <summary>
            Creates and returns user access
            </summary>
            <returns>An <see cref="T:ConoHaNet.Objects.UserAccess"/> that contains token and catalog</returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateUserAccess(System.String,System.String,System.String,System.String)">
            <summary>
            Creates and returns user access
            </summary>
            <returns>An <see cref="T:ConoHaNet.Objects.UserAccess"/> that contains token and catalog</returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListEndpoints">
            <summary>
            Gets an array of RegionEndpoint for current user
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetDefaultRegion(System.String)">
            <summary>
            Sets the default region
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListTenantUsers(System.String)">
            <summary>
            Gets an array of Tenant
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListOrderItems">
            <summary>
            Gets a collection of order itmes
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-order-item-list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetOrderItem(System.String)">
            <summary>
            Gets an order itedm
            </summary>
            <param name="itemid">an item id</param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-order-item-detail-specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListProducts">
            <summary>
            Gets the list of product
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-products.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListPaymentHistory">
            <summary>
            Gets the list of payment history
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-payment-histories.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetPaymentSummary">
            <summary>
            Gets the information of payment summary
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-payment-summary.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListBillingInvoices(System.Int32,System.Int32)">
            <summary>
            Gets the list of billing invoice
            </summary>
            <param name="offset"></param>
            <param name="limit"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-billing-invoices-list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetBillingInvoice(System.Int32)">
            <summary>
            Gets the billing invoice with invoice id
            </summary>
            <param name="invoiceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-billing-invoices-detail-specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListNotifications(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the list of notification
            </summary>
            <param name="lang"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-informations-list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetNotification(System.Int32,System.String)">
            <summary>
            Gets the notification with id
            </summary>
            <param name="infoCode"></param>
            <param name="lang"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-informations-detail-specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetNotification(System.Int32,System.String)">
            <summary>
            Updates the notification status
            </summary>
            <param name="infoCode"></param>
            <param name="status"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-informations-marking.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the list of flavor
            </summary>
            <param name="minDiskInGB"></param>
            <param name="minRamInMB"></param>
            <param name="markerId"></param>
            <param name="limit"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_flavors_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListFlavorsDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a collection of flavor details
            </summary>
            <param name="minDiskInGB"></param>
            <param name="minRamInMB"></param>
            <param name="markerId"></param>
            <param name="limit"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_flavors_detail.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetFlavor(System.String)">
            <summary>
            Gets the flavor details with flavor id
            </summary>
            <param name="flavorid"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_flavors_detail_specified_.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListServers(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a collection of server instance
            </summary>
            <param name="imageId"></param>
            <param name="flavorId"></param>
            <param name="name"></param>
            <param name="status"></param>
            <param name="markerId"></param>
            <param name="limit"></param>
            <param name="changesSince"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_vms_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListServersDetails(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets a collection of server details
            </summary>
            <param name="imageId"></param>
            <param name="flavorId"></param>
            <param name="name"></param>
            <param name="status"></param>
            <param name="markerId"></param>
            <param name="limit"></param>
            <param name="changesSince"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_vms_detail.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetServer(System.String)">
            <summary>
            Gets the server details with server id
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_vms_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateServer(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],ConoHaNet.Objects.Servers.DiskConfiguration,ConoHaNet.Objects.Metadata,ConoHaNet.Objects.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a server instance. be careful since newly created server instance is not free in charge.
            </summary>
            <param name="cloudServerName"></param>
            <param name="imageId"></param>
            <param name="flavorId"></param>
            <param name="adminPass"></param>
            <param name="keyName"></param>
            <param name="nametag"></param>
            <param name="securityGroupNames"></param>
            <param name="attachVolumeIds"></param>
            <param name="diskConfig"></param>
            <param name="metadata"></param>
            <param name="personality"></param>
            <param name="attachToServiceNetwork"></param>
            <param name="attachToPublicNetwork"></param>
            <param name="networks"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-create_vm.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteServer(System.String)">
            <summary>
            Deletes the server instance
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-delete_vm.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ChangeServerName(System.String,System.String)">
            <summary>
            Changes the server name. ConoHa seems like not support this command, though openstack does.
            </summary>
            <param name="serverId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.StartServer(System.String)">
            <summary>
            Sends 'power-on' signal to the server instance
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-power_on_vm.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ShutdownServer(System.String)">
            <summary>
            Sends 'shutdown' signal to the server instance
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-stop_cleanly_vm.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.RestartServer(System.String,ConoHaNet.Objects.RebootType)">
            <summary>
            Sends 'restart' signal to the server instance
            </summary>
            <param name="serverId"></param>
            <param name="rebootType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-reboot_vm.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.StopServer(System.String)">
            <summary>
            Sends 'power-off' signal to the server instance
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-stop_forcibly_vm.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.RebuildServer(System.String,System.String,System.String,System.String)">
            <summary>
            Sends 'reinstall' signal to the server instance.
            this command throws exception when the server instance is not stopped.
            </summary>
            <param name="serverId"></param>
            <param name="imageRef"></param>
            <param name="adminPassword"></param>
            <param name="keyName"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-re_install.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ResizeServer(System.String,System.String,ConoHaNet.Objects.Servers.DiskConfiguration)">
            <summary>
            Sends 'resize' signal to the server instance.
            </summary>
            <param name="serverId"></param>
            <param name="flavorid"></param>
            <param name="diskconfig"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-vm_resize.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ConfirmServerResized(System.String)">
            <summary>
            Confirm Server Reizing
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-vm_resize_confirm.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.RevertResizeServer(System.String)">
            <summary>
            Revert Resize Server
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-vm_resize_revert.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetVncConsole(System.String)">
            <summary>
            Get VncConsole
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-vnc_console.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetNovaConsole(System.String)">
            <summary>
            Get NovaConsole
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-web_serial_console.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetHttpConsole(System.String)">
            <summary>
            Get Http Console
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-web_http_serial_console.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ChangeStorageController(System.String,System.String)">
            <summary>
            Changes storage controller with bus name
            </summary>
            <param name="serverId"></param>
            <param name="hwDiskBus"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-hw_disk_bus.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ChangeNetworkAdapter(System.String,System.String)">
            <summary>
            Changes the network adapter with model string
            </summary>
            <param name="serverId"></param>
            <param name="hwVifModel"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-hw_vif_model.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ChangeVideoDevice(System.String,System.String)">
            <summary>
            Chages the video device with model string
            </summary>
            <param name="serverId"></param>
            <param name="hwVideoModel"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-hw_video_model.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ChangeVncKeymap(System.String,System.String)">
            <summary>
            Changes Vnc key map
            </summary>
            <param name="serverId"></param>
            <param name="vncKeymap"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-vnc_key_map.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListServerSecurityGroups(System.String)">
            <summary>
            Gets the list of server security groups
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_secgroups_status.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListKeypairs">
            <summary>
            Gets the list of ssh keypairs
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_keypairs.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetKeypair(System.String)">
            <summary>
            Gets a ssh keypair
            </summary>
            <param name="keyName"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_keypairs_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.AddKeypair(System.String,System.String)">
            <summary>
            Adds an ssh keypair
            </summary>
            <param name="name"></param>
            <param name="publickey"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-add_keypair.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteKeypair(System.String)">
            <summary>
            Deletes a ssh keypair
            </summary>
            <param name="name"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-delete_keypair.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListImages(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType)">
            <summary>
            Gets the list of image
            </summary>
            <param name="server"></param>
            <param name="imageName"></param>
            <param name="imageStatus"></param>
            <param name="changesSince"></param>
            <param name="markerId"></param>
            <param name="limit"></param>
            <param name="imageType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_images_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListImagesDetails(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType)">
            <summary>
            Gets the list of image details
            </summary>
            <param name="server"></param>
            <param name="imageName"></param>
            <param name="imageStatus"></param>
            <param name="changesSince"></param>
            <param name="markerId"></param>
            <param name="limit"></param>
            <param name="imageType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_images_detail.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetImage(System.String)">
            <summary>
            Gets an image
            </summary>
            <param name="imageId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_images_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListServerVolumes(System.String)">
            <summary>
            Gets the list of server volume
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_volume_attachments.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetServerVolume(System.String,System.String)">
            <summary>
            Gets a server volume
            </summary>
            <param name="serverId"></param>
            <param name="volumeId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_volume_attachment_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.AttachVolume(System.String,System.String,System.String)">
            <summary>
            Attaches a volume to a server instance
            </summary>
            <param name="serverId"></param>
            <param name="volumeId"></param>
            <param name="devicePath"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-attach_volume.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DetachVolume(System.String,System.String)">
            <summary>
            Detaches the volume from the vm instance
            </summary>
            <param name="serverId"></param>
            <param name="volumeId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-dettach_volume.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListInterfaceAttachments(System.String)">
            <summary>
            Gets the list of interface attachment
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_attached_ports_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetInterfaceAttachment(System.String,System.String)">
            <summary>
            Gets an interface attachment
            </summary>
            <param name="serverId"></param>
            <param name="portId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_attached_port_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.AddInterfaceAttachment(System.String,System.String)">
            <summary>
            Adds an interface to the server instance
            </summary>
            <param name="serverId"></param>
            <param name="portId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-attach_port.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteInterfaceAttachment(System.String,System.String)">
            <summary>
            Deletes the interface from the server instance
            </summary>
            <param name="serverId"></param>
            <param name="portId"></param>
            <returns></returns>
            <see hjref="https://www.conoha.jp/docs/compute-dettach_port.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListBackupServices">
            <summary>
            Gets the list of vm instance backup service
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-get_backup_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetBackupService(System.String)">
            <summary>
            Gets the vm backup service with backup id
            </summary>
            <param name="backupId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-get_backup_list_detailed.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.AddBackupService(System.String)">
            <summary>
            Creates a backup vm service
            </summary>
            <param name="InstanceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-start_backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteBackupService(System.String)">
            <summary>
            Deletes the vm backup service
            </summary>
            <param name="backupId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-end_backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.RestoreFromBackupRun(System.String,System.String)">
            <summary>
            Restores the VM instance with backup
            </summary>
            <param name="backupId"></param>
            <param name="backupRunId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-restore_backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateImageFromBackupRun(System.String,System.String,System.String)">
            <summary>
            this might not be supported
            </summary>
            <param name="backupId"></param>
            <param name="backupRunId"></param>
            <param name="imageName"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListServerIps(System.String)">
            <summary>
            Gets the list of server ips
            </summary>
            <param name="serverId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_server_addresses.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateGlanceImageFromInstance(System.String,System.String)">
            <summary>
            Creates the glance image from vm instance
            </summary>
            <param name="serverId"></param>
            <param name="imageName"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListAddresses(System.String)">
            <summary>
            Gets the list of the server addresses
            </summary>
            <param name="serverId"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListVolumeTypes">
            <summary>
            Gets the list of volume types
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-get_volume_types_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetVolumeType(System.String)">
            <summary>
            Gets the volume type with volume id
            </summary>
            <param name="volumeId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-get_volume_type_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListVolumes">
            <summary>
            Gets the collection of volume
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-get_volumes_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListVolumesDetails">
            <summary>
            Gets the list of the volume details
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-get_volumes_detail.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetVolume(System.String)">
            <summary>
            Gets the volume with volume id
            </summary>
            <param name="volumeId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-get_volume_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateVolume(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a volume
            </summary>
            <param name="size"></param>
            <param name="sourceVolumeId"></param>
            <param name="description"></param>
            <param name="name"></param>
            <param name="snapshotId"></param>
            <param name="volumeType"></param>
            <param name="imageRef"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-create_volume.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteVolume(System.String)">
            <summary>
            Deletes the volume with volume id
            </summary>
            <param name="volumeId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-delete_volume.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.WaitForVolumeAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan})">
            <summary>
            Waits until volume is available
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan})">
            <summary>
            Waits until volume is deleted
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.WaitForVolumeState(System.String,ConoHaNet.Objects.BlockStorage.VolumeState,ConoHaNet.Objects.BlockStorage.VolumeState[],System.Int32,System.Nullable{System.TimeSpan})">
            <summary>
            Waits until volume's status is the specific value
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateGlanceImageFromVolume(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a glance image from volume image
            </summary>
            <param name="volumeId"></param>
            <param name="imageName"></param>
            <param name="diskFormat"></param>
            <param name="containerFormat"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/cinder-create_volume_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListGlanceImages(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets a collection of glance image
            </summary>
            <param name="limit"></param>
            <param name="marker"></param>
            <param name="name"></param>
            <param name="visibility"></param>
            <param name="memberStatus"></param>
            <param name="owner"></param>
            <param name="status"></param>
            <param name="sizeMin"></param>
            <param name="sizeMax"></param>
            <param name="sortKey"></param>
            <param name="sortDir"></param>
            <param name="tag"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/image-get_images_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetGlanceImage(System.String)">
            <summary>
            Gets the glance image with image id
            </summary>
            <param name="imageId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/image-get_images_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteGlanceImage(System.String)">
            <summary>
            Deletes the glance image with image id
            </summary>
            <param name="imageId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/image-remove_image.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetImageQuota(System.String)">
            <summary>
            Gets the value of how much image quota using
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetImageAmount">
            <summary>
            Gets glance image quota
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetWebShare(System.String,System.Boolean)">
            <summary>
            this is not supported by design.
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ImportImage(System.String,System.String)">
            <summary>
            this is not supported by design.
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListCloudImageTasks">
            <summary>
            this is not supported by design.
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetCloudImageTask(System.String)">
            <summary>
            this is not supported by design.
            </summary>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListNetworks">
            <summary>
            Gets the list of the networks
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_networks_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateNetwork(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Creates a network
            </summary>
            <param name="name"></param>
            <param name="admin_state_up"></param>
            <param name="networkType"></param>
            <param name="segmentationId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_network.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteNetwork(System.String)">
            <summary>
            Deletes the network with network id
            </summary>
            <param name="networkId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-remove_network.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListPorts">
            <summary>
            Gets the list of the port
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_ports_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetPort(System.String)">
            <summary>
            Gets the port with port id
            </summary>
            <param name="portid"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_ports_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreatePort(System.String,ConoHaNet.Objects.Networks.FixedIp[],System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String[],System.String)">
            <summary>
            Creates a network port
            </summary>
            <param name="networkId"></param>
            <param name="fixedIps"></param>
            <param name="allowedAddressPairs"></param>
            <param name="tenantId"></param>
            <param name="securityGroups"></param>
            <param name="status"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_port.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdatePort(System.String,System.Nullable{System.Boolean},System.String[],ConoHaNet.Objects.Networks.FixedIp[],ConoHaNet.Objects.Networks.AllowedAddressPair[])">
            <summary>
            Updates the port details
            </summary>
            <param name="portId"></param>
            <param name="adminStateUp"></param>
            <param name="securityGroups"></param>
            <param name="fixedIps"></param>
            <param name="allowedAddressPairs"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-update_port.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeletePort(System.String)">
            <summary>
            Deletes the port with port id
            </summary>
            <param name="portId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-remove_port.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListSubnets">
            <summary>
            Gets the list of the subnet
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_subnet.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetSubnet(System.String)">
            <summary>
            Gets the subnet with subnet id
            </summary>
            <param name="subnetId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_subnets_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateSubnet(System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a subnet
            </summary>
            <param name="name"></param>
            <param name="networkId"></param>
            <param name="ipVersion"></param>
            <param name="cidr"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_subnet.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateSubnet(System.String,System.String)">
            <summary>
            Updates the subnet
            </summary>
            <param name="subnetId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteSubnet(System.String)">
            <summary>
            Deletes the subnet with subnet id
            </summary>
            <param name="subnetId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-remove_subnet.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListVIPs">
            <summary>
            Gets the list of virtual ip
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_vips_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetVIP(System.String)">
            <summary>
            Gets the virtual ip with vid
            </summary>
            <param name="vipId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_vips_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateVIP(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a virtual ip
            </summary>
            <param name="name"></param>
            <param name="protocol"></param>
            <param name="protocolPort"></param>
            <param name="poolId"></param>
            <param name="subnetId"></param>
            <param name="address"></param>
            <param name="adminStateUp"></param>
            <param name="description"></param>
            <param name="sessionPpersistence"></param>
            <param name="connectionLimit"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-create_vip.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateVIP">
            <summary>
            Updates the virtual ip
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-remove_vip.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteVIP(System.String)">
            <summary>
            Deletes the virtual ip
            </summary>
            <param name="vipId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-remove_vip.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListPools">
            <summary>
            Gets the list of monitoring pool
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_pools_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetPool(System.String)">
            <summary>
            Gets the monitoring pools with pool id
            </summary>
            <param name="poolId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_pools_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreatePool(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a pool
            </summary>
            <param name="name"></param>
            <param name="subnetId"></param>
            <param name="lbMethod"></param>
            <param name="protocol"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_pool.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdatePool(System.String,System.String,System.String)">
            <summary>
            Updates the pool
            </summary>
            <param name="poolId"></param>
            <param name="name"></param>
            <param name="lbMethod"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-change_balancer_type.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeletePool(System.String)">
            <summary>
            Deletes the pool with pool id
            </summary>
            <param name="poolId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-delete_pool.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.AssociateHealthMonitor(System.String,System.String)">
            <summary>
            Creates an association between health monitor and pool
            </summary>
            <param name="monitorId"></param>
            <param name="poolId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-set_health_monitor_on_pool.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DisassociateHealthMonitor(System.String,System.String)">
            <summary>
            Deletes the association between health monitor and pool
            </summary>
            <param name="monitorId"></param>
            <param name="poolId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-delete_health_monitor.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListHealthMonitors">
            <summary>
            Gets the list of health monitors
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_healthmonitors_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetHealthMonitor(System.String)">
            <summary>
            Gets the health monitor
            </summary>
            <param name="monitorId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_healthmonitors_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateHealthMonitor(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Creates a health monitor
            </summary>
            <param name="monitorType"></param>
            <param name="delay"></param>
            <param name="maxRetries"></param>
            <param name="urlPath"></param>
            <param name="expectedCodes"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-create_health_monitor.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateHealthMonitor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Updates the health monitor
            </summary>
            <param name="monitorId"></param>
            <param name="delay"></param>
            <param name="maxRetries"></param>
            <param name="urlPath"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-change_health_monitor.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteHealthMonitor(System.String)">
            <summary>
            Deltes the health monitor with monitor id
            </summary>
            <param name="monitorId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-delete_health_monitor.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListLBMembers(System.String,System.String,System.String)">
            <summary>
            Gets the list of load banlancer member
            </summary>
            <param name="subnetId"></param>
            <param name="poolId"></param>
            <param name="protocolPort"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_members_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetLBMember(System.String)">
            <summary>
            Gets load banlancer member with member id
            </summary>
            <param name="memberId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_members_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateLBMember(System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates a load banlancer member
            </summary>
            <param name="poolId"></param>
            <param name="address"></param>
            <param name="protocolPort"></param>
            <param name="weight"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_member.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateLBMember(System.String,System.Int32)">
            <summary>
            Updates the load banlancer member
            </summary>
            <param name="memberId"></param>
            <param name="weight"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-update_member.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteLBMember(System.String)">
            <summary>
            Deletes the load banlancer member with member id
            </summary>
            <param name="memberId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-remove_member.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListNetworkSecurityGroups">
            <summary>
            Gets the list of the network security group
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_secgroups_list.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetNetworkSecurityGroup(System.String)">
            <summary>
            Gets the the network security group
            </summary>
            <param name="groupId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_secgroups_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateNetworkSecurityGroup(System.String,System.String)">
            <summary>
            Creates a network security group
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-create_secgroup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteNetworkSecurityGroup(System.String)">
            <summary>
            Deletes the network security group with group id
            </summary>
            <param name="securityGroupId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-delete_secgroup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListNetworkSecurityGroupRules">
            <summary>
            Gets the list of the security rule
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_rules_on_secgroup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetNetworkSecurityGroupRule(System.String)">
            <summary>
            Gets the security rule
            </summary>
            <param name="ruleId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-get_rules_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateNetworkSecurityGroupRule(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the security rule
            </summary>
            <param name="securityGroupId"></param>
            <param name="direction"></param>
            <param name="etherType"></param>
            <param name="portRangeMin"></param>
            <param name="portRangeMax"></param>
            <param name="protocol"></param>
            <param name="remoteGroupId"></param>
            <param name="remoteIpPrefix"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-create_rule_on_secgroup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteNetworkSecurityGroupRule(System.String)">
            <summary>
            Deletes the security rule
            </summary>
            <param name="ruleId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-delete_rule_on_secgroup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.AddSubnetForAdditionalIp(System.Int32)">
            <summary>
            Creates a subnet for additional ip
            </summary>
            <param name="bitmask"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_subnet_for_addip.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.AddSubnetForLb">
            <summary>
            Creates a subnet for load balancer
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/neutron-add_subnet_for_lb.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateDbService(System.String)">
            <summary>
            Creates a DB service
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListDbServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of DB service
            </summary>
            <param name="lineCount"></param>
            <param name="pageNo"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDbService(System.String)">
            <summary>
            Gets the DB service with service id
            </summary>
            <param name="serviceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateDbService(System.String,System.String)">
            <summary>
            Updates the DB service
            </summary>
            <param name="serviceId"></param>
            <param name="serviceName"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-update-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteDbService(System.String)">
            <summary>
            Deletes the DB Service with service id
            </summary>
            <param name="serviceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDbServiceQuota(System.String)">
            <summary>
            Gets the value of DB service quota
            </summary>
            <param name="serviceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateDbServiceQuota(System.String,System.Int32)">
            <summary>
            Update the value of DB service quota
            </summary>
            <param name="serviceId"></param>
            <param name="quota"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-update-database-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetDbServiceBackup(System.String,System.Boolean)">
            <summary>
            Sets DB service backup
            </summary>
            <param name="serviceId"></param>
            <param name="enabled"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateDatabase(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a database in the DB service
            </summary>
            <param name="serviceId"></param>
            <param name="dbName"></param>
            <param name="type"></param>
            <param name="charset"></param>
            <param name="memo"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListDatabases(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of database
            </summary>
            <param name="serviceId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDatabase(System.String)">
            <summary>
            Get the database with database id
            </summary>
            <param name="databaseId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateDatabase(System.String,System.String)">
            <summary>
            Updates the database
            </summary>
            <param name="databaseId"></param>
            <param name="memo"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteDatabase(System.String)">
            <summary>
            Deletes the database with database id
            </summary>
            <param name="databaseId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-databases.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateDbGrant(System.String,System.String)">
            <summary>
            Create a database grant data
            </summary>
            <param name="databaseId"></param>
            <param name="userId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-grant.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListDbGrant(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get the list of a database grant data
            </summary>
            <param name="databaseId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-grant.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteDbGrant(System.String,System.String)">
            <summary>
            Deletes the database grant data with userid
            </summary>
            <param name="databaseId"></param>
            <param name="userId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-grant.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListDbBackups(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of the database backups
            </summary>
            <param name="databaseId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.RestoreDatabase(System.String,System.String)">
            <summary>
            Restores the database with backup id
            </summary>
            <param name="databaseId"></param>
            <param name="backupId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-restore-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateDbUser(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a database user
            </summary>
            <param name="serviceId"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="hostname"></param>
            <param name="memo"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListDbUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of database user
            </summary>
            <param name="serviceId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDbUser(System.String)">
            <summary>
            Get the database user with userid
            </summary>
            <param name="userId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateDbUser(System.String,System.String,System.String)">
            <summary>
            Updates the database user
            </summary>
            <param name="userId"></param>
            <param name="password"></param>
            <param name="memo"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-update-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteDbUser(System.String)">
            <summary>
            Deletes the database user with userid
            </summary>
            <param name="userId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDnsServiceDetails(System.String)">
            <summary>
            Gets the collection of DNS service details
            </summary>
            <param name="domainId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-get-servers-hosting-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListDomains">
            <summary>
            Gets the collection of domains
            </summary>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-list-domains.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateDomain(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Registers a domain to the DNS service
            </summary>
            <param name="domainName"></param>
            <param name="email"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslb"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-create-domain.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteDomain(System.String)">
            <summary>
            Deletes the domain with domain id
            </summary>
            <param name="domainId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-delete-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDomain(System.String)">
            <summary>
            Gets the domain details with domain id
            </summary>
            <param name="domainId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-get-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateDomain(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Updates the domain resources
            </summary>
            <param name="domainId"></param>
            <param name="domainName"></param>
            <param name="email"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslb"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-update-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListDnsRecords(System.String)">
            <summary>
            Gets the list of DNS records with domain id
            </summary>
            <param name="domainId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-list-records-in-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateDnsRecord(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a DNS record
            </summary>
            <param name="domainId"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="priority"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslbRegion"></param>
            <param name="gslbWeight"></param>
            <param name="gslbCheck"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-create-record.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteDnsRecord(System.String,System.String)">
            <summary>
            Deletes the DNS record with domain id
            </summary>
            <param name="domainId"></param>
            <param name="recordId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-delete-a-record.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDnsRecord(System.String,System.String)">
            <summary>
            Gets the DNS record with domain id
            </summary>
            <param name="domainId"></param>
            <param name="recordId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-get-a-record.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateDnsRecord(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Updates the DNS record details
            </summary>
            <param name="domainId"></param>
            <param name="recordId"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="priority"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslbRegion"></param>
            <param name="gslbWeight"></param>
            <param name="gslbCheck"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-update-a-record.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ImportZone(System.String)">
            <summary>
            Imports zone data
            </summary>
            <param name="zoneContent"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-import-zone.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ExportZone(System.String)">
            <summary>
            Export zone data
            </summary>
            <param name="zoneId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-export-zone.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateMailService(System.String,System.String)">
            <summary>
            Creates a mail service, which is a container of mail address
            </summary>
            <param name="serviceName"></param>
            <param name="defaultSubdomain"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListMailServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets a collection of mail service
            </summary>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetMailService(System.String)">
            <summary>
            Gets the mail service with service id
            </summary>
            <param name="serviceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateMailService(System.String,System.String)">
            <summary>
            Updates the mail service
            </summary>
            <param name="serviceId"></param>
            <param name="serviceName"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetMailServiceBackup(System.String,System.Boolean)">
            <summary>
            Toggles mail service activity
            </summary>
            <param name="serviceId"></param>
            <param name="enabled"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-backup.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteMailService(System.String)">
            <summary>
            Deletes the mail service
            </summary>
            <param name="serviceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetMailBoxQuota(System.String)">
            <summary>
            Gets mail box quota available
            </summary>
            <param name="serviceId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-email-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateMailBoxQuota(System.String,System.Int32)">
            <summary>
            Updates mail box quota
            </summary>
            <param name="serviceId"></param>
            <param name="quota"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateMailDomain(System.String,System.String)">
            <summary>
            Creates a mail domain
            </summary>
            <param name="serviceId"></param>
            <param name="domainName"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListMailDomains(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets a collection of mail domains using
            </summary>
            <param name="serviceId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-domains.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteMailDomain(System.String)">
            <summary>
            Deletes the mail domain with domain id
            </summary>
            <param name="domainId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetMailDomainDedicatedIp(System.String)">
            <summary>
            Get a dedicated ip for the mail domain
            </summary>
            <param name="domainId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-dedicated-ip.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetMailDomainDedicatedIpStatus(System.String,System.Boolean)">
            <summary>
            Update the statusof thededicated ip for email
            </summary>
            <param name="domainId"></param>
            <param name="enabled"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-dedicated-ip.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateEmailAddress(System.String,System.String,System.String)">
            <summary>
            Creates an email address
            </summary>
            <param name="domainId"></param>
            <param name="emailAddress"></param>
            <param name="password"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListEmailAddresses(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets a collection of email addresses
            </summary>
            <param name="domainId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-domain.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetEmailAddress(System.String)">
            <summary>
            Gets the email address with email id
            </summary>
            <param name="emailId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-email.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteEmailAddress(System.String)">
            <summary>
            Deletes the email address with email id
            </summary>
            <param name="emailId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ChangeEmailAddressPassword(System.String,System.String)">
            <summary>
            Updates email address password
            </summary>
            <param name="emailId"></param>
            <param name="password"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-password.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetEmailSpamFilter(System.String,System.Boolean,System.String)">
            <summary>
            Toggles email spam filter activity
            </summary>
            <param name="emailId"></param>
            <param name="enabled"></param>
            <param name="type"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email-spam-filter.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetEmailVirusCheck(System.String,System.Boolean)">
            <summary>
            Sets the virus check activity
            </summary>
            <param name="emailId"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.SetEmailForwardingCopy(System.String,System.Boolean)">
            <summary>
            Toggle the value which indicates whether the copy would be remained or not
            </summary>
            <param name="emailId"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListMailMessageHeaders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of email message's header
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-messages.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetMailMessage(System.String,System.String)">
            <summary>
            Gets the email message with email id and message id
            </summary>
            <param name="emailId"></param>
            <param name="messageId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-messages.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetMailAttachment(System.String,System.String,System.String)">
            <summary>
            Gets the attachment of email by email id, message id and attachment id
            </summary>
            <param name="emailId"></param>
            <param name="messageId"></param>
            <param name="attachmemntId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-messages-attachments.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteMailMessage(System.String,System.String)">
            <summary>
            Deletes the email message with message id
            </summary>
            <param name="emailId"></param>
            <param name="messageId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-messages.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateEmailWebHook(System.String,System.String,System.String)">
            <summary>
            Creates a email web hook
            </summary>
            <param name="emailId"></param>
            <param name="webhookUrl"></param>
            <param name="keyword"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email-webhook.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetEmailWebHook(System.String)">
            <summary>
            Gets the email web hook with emailid
            </summary>
            <param name="emailId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-filter.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateEmailWebHook(System.String,System.String,System.String)">
            <summary>
            Updates email web hook
            </summary>
            <param name="emailId"></param>
            <param name="webhookUrl"></param>
            <param name="keyword"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-filter.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteEmailWebHook(System.String)">
            <summary>
            Deletes the email web hook
            </summary>
            <param name="emailId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email-filter.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetEmailWhiteList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of email white addresses
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-whitelist.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateWhiteList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[])">
            <summary>
            Updates the list of email whilte addresses
            </summary>
            <param name="emailId"></param>
            <param name="targets"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-whitelist.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetEmailBlackList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of email black addresses
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-blacklist.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateBlackList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[])">
            <summary>
            Updates the list of email black addresses
            </summary>
            <param name="emailId"></param>
            <param name="targets"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-blacklist.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateEmailForwarding(System.String,System.String)">
            <summary>
            Creates email forwarding setting
            </summary>
            <param name="emailId"></param>
            <param name="toForwardAddress"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListEmailForwardings(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the list of email forwarding
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetEmailForwarding(System.String)">
            <summary>
            Gets the email forward setting with forwarding id
            </summary>
            <param name="forwardingId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.UpdateEmailForwarding(System.String,System.String)">
            <summary>
            Updates the email forward setting
            </summary>
            <param name="forwardingId"></param>
            <param name="toForwardAddress"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteEmailForwarding(System.String)">
            <summary>
            Deletes the email forwarding setting with forwarding id
            </summary>
            <param name="forwardingId"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.ListContainers(System.Nullable{System.Int32},System.String,System.String,System.Boolean)">
            <summary>
            Gets the list of object storage containers
            </summary>
            <param name="limit"></param>
            <param name="marker"></param>
            <param name="markerEnd"></param>
            <param name="useInternalUrl"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/swift-show_account_details_and_list_containers.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Creates a object storage container
            </summary>
            <param name="container"></param>
            <param name="headers"></param>
            <param name="useInternalUrl"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/swift-create_container.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.DeleteContainer(System.String,System.Boolean,System.Boolean)">
            <summary>
            Deletes the object storage container with container name
            </summary>
            <param name="container"></param>
            <param name="deleteObjects"></param>
            <param name="useInternalUrl"></param>
            <see href="https://www.conoha.jp/docs/swift-delete_container.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetCPUGraph(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Gets CPU graph data
            </summary>
            <param name="serverId"></param>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="mode"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_cpu_utilization_graph.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetDiskIOGraph(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Gets disk graph data
            </summary>
            <param name="serverId"></param>
            <param name="deviceName"></param>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="mode"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_disk_io_graph.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetNetworkGraph(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Gets network graph data
            </summary>
            <param name="serverId"></param>
            <param name="portId"></param>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="mode"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_server_addresses_by_network.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetSwiftRequestGraph(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Gets the number how much swift requests occured
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="mode"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-get_objectstorage_request_rrd.html"/>
        </member>
        <member name="M:ConoHaNet.IOpenStackMember.GetSwiftSizeGraph(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Gets data of the swift network traffic amount occurred
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="mode"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-get_objectstorage_size_rrd.html"/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.DefaultPublicEndPoint">
            <summary>
            Gets the Default public endpoint
            </summary>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.DefaultPublicEndPointUri">
            <summary>
            Gets the default public endpoint uri
            </summary>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.UserName">
            <summary>
            Gets or Sets user name
            </summary>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.TenantId">
            <summary>
            Gets or Sets the tenant id
            </summary>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.TenantName">
            <summary>
            Gets or Sets the tenant name
            </summary>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.DefaultRegion">
            <summary>
            Gets or Sets the default region
            </summary>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.#ctor">
            <summary>
            Initializes a new instance of the OpenStackMember class.”
            </summary>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creats an OpenStack Member
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="tenantName"></param>
            <param name="tenantId"></param>
            <param name="defaultregion"></param>
            <param name="bLazyProviderSetting"></param>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.IsAdminMode">
            <summary>
            Gets or Sets internal admin mode
            </summary>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetProviders">
            <summary>
            Sets the default behavior
            </summary>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetDefaultRegion(System.String)">
            <summary>
            Sets default region
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.toUnixTime(System.DateTime)">
            <summary>
            Convert DateTime to UnixTime
            </summary>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.AccountServiceProvider">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListOrderItems">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetOrderItem(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListProducts">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListPaymentHistory">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetPaymentSummary">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListBillingInvoices(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetBillingInvoice(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListNotifications(System.String,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetNotification(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetNotification(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.BlockStorageProvider">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListVolumeTypes">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetVolumeType(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListVolumes">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListVolumesDetails">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetVolume(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateVolume(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteVolume(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.WaitForVolumeAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.WaitForVolumeState(System.String,ConoHaNet.Objects.BlockStorage.VolumeState,ConoHaNet.Objects.BlockStorage.VolumeState[],System.Int32,System.Nullable{System.TimeSpan})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateGlanceImageFromVolume(System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.ServersProvider">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListFlavorsDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetFlavor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListServers(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListServersDetails(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetServer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateServer(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],ConoHaNet.Objects.Servers.DiskConfiguration,ConoHaNet.Objects.Metadata,ConoHaNet.Objects.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteServer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ChangeServerName(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.StartServer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.RestartServer(System.String,ConoHaNet.Objects.RebootType)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.StopServer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ShutdownServer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.RebuildServer(System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ResizeServer(System.String,System.String,ConoHaNet.Objects.Servers.DiskConfiguration)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ConfirmServerResized(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.RevertResizeServer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetVncConsole(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetNovaConsole(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetHttpConsole(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AttachSecurityGroup(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DetachSecurityGroup(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListServerSecurityGroups(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListKeypairs">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetKeypair(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AddKeypair(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteKeypair(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListImages(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListImagesDetails(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetImage(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListServerVolumes(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetServerVolume(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AttachVolume(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DetachVolume(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListInterfaceAttachments(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetInterfaceAttachment(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AddInterfaceAttachment(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteInterfaceAttachment(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListBackupServices">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetBackupService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AddBackupService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteBackupService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.RestoreFromBackupRun(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateImageFromBackupRun(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListServerIps(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListAddresses(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ChangeStorageController(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ChangeNetworkAdapter(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ChangeVideoDevice(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ChangeVncKeymap(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetCPUGraph(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDiskIOGraph(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetNetworkGraph(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetSwiftRequestGraph(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetSwiftSizeGraph(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateGlanceImageFromInstance(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.DatabaseProvider">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateDbService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListDbServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDbService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateDbService(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteDbService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDbServiceQuota(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateDbServiceQuota(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetDbServiceBackup(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateDatabase(System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListDatabases(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDatabase(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateDatabase(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteDatabase(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateDbGrant(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListDbGrant(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteDbGrant(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListDbBackups(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.RestoreDatabase(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateDbUser(System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListDbUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDbUser(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateDbUser(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteDbUser(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.DnsProvider">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDnsServiceDetails(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListDomains">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateDomain(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteDomain(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDomain(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateDomain(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListDnsRecords(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateDnsRecord(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteDnsRecord(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetDnsRecord(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateDnsRecord(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ImportZone(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ExportZone(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.FilesProvider">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListContainers(System.Nullable{System.Int32},System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteContainer(System.String,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetContainerHeader(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetContainerMetaData(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetContainerCDNHeader(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListCDNContainers(System.Nullable{System.Int32},System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.EnableCDNOnContainer(System.String,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.EnableCDNOnContainer(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.EnableCDNOnContainer(System.String,System.Int64,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DisableCDNOnContainer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateContainerMetadata(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteContainerMetadata(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteContainerMetadata(System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateContainerCdnHeaders(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.EnableStaticWebOnContainer(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.EnableStaticWebOnContainer(System.String,System.String,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.EnableStaticWebOnContainer(System.String,System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DisableStaticWebOnContainer(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetObjectHeaders(System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetObjectMetaData(System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteObjectMetadata(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteObjectMetadata(System.String,System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListObjects(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateObjectFromFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{System.Int64},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateObject(System.String,System.IO.Stream,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{System.Int64},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetObject(System.String,System.String,System.IO.Stream,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Action{System.Int64},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetObjectSaveToFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Action{System.Int64},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CopyObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteObject(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteObjects(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.BulkDelete(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ExtractArchiveFromFile(System.String,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{System.Int64},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ExtractArchive(System.IO.Stream,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Action{System.Int64},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.MoveObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.PurgeObjectFromCDN(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetAccountHeaders(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetAccountMetaData(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateTemporaryPublicUri(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.String,System.String,System.DateTimeOffset,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateFormPostUri(System.String,System.String,System.String,System.DateTimeOffset,System.Uri,System.Int64,System.Int32,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.Identity">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.UA">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.IdentityProvider">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateUserAccess">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateUserAccess(System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListEndpoints">
            <summary>
            Gets the list of endpoint
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListTenantUsers(System.String)">
            <summary>
            Get Tenant Users
            </summary>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.ImagesProvider">
            <summary>
            Defines an instance of CloudImagesProvider
            </summary>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListGlanceImages(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetGlanceImage(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteGlanceImage(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetImageQuota(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetImageAmount">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetWebShare(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ImportImage(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListCloudImageTasks">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetCloudImageTask(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.MailServiceProvider">
            <summary>
            defines CloudMailServiceProvider instance
            </summary>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateMailService(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListMailServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetMailService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateMailService(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetMailServiceBackup(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteMailService(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetMailBoxQuota(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateMailBoxQuota(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateMailDomain(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListMailDomains(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteMailDomain(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetMailDomainDedicatedIp(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetMailDomainDedicatedIpStatus(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateEmailAddress(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListEmailAddresses(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetEmailAddress(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteEmailAddress(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ChangeEmailAddressPassword(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetEmailSpamFilter(System.String,System.Boolean,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetEmailVirusCheck(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.SetEmailForwardingCopy(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListMailMessageHeaders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetMailMessage(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetMailAttachment(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteMailMessage(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateEmailWebHook(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetEmailWebHook(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateEmailWebHook(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteEmailWebHook(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetEmailWhiteList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateWhiteList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[])">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetEmailBlackList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateBlackList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[])">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateEmailForwarding(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListEmailForwardings(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetEmailForwarding(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateEmailForwarding(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteEmailForwarding(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:ConoHaNet.OpenStackMember.NetworksProvider">
            <summary>
            Represents the instance of NetworkProvider
            </summary>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListNetworks">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetNetwork(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateNetwork(System.String,System.Boolean,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteNetwork(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListPorts">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetPort(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreatePort(System.String,ConoHaNet.Objects.Networks.FixedIp[],System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String[],System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdatePort(System.String,System.Nullable{System.Boolean},System.String[],ConoHaNet.Objects.Networks.FixedIp[],ConoHaNet.Objects.Networks.AllowedAddressPair[])">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeletePort(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListSubnets">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetSubnet(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateSubnet(System.String,System.String,System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateSubnet(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteSubnet(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListPools">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetPool(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreatePool(System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdatePool(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeletePool(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListVIPs">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetVIP(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateVIP(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateVIP">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteVIP(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListLBMembers(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetLBMember(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateLBMember(System.String,System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateLBMember(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteLBMember(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListHealthMonitors">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetHealthMonitor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateHealthMonitor(System.String,System.Int32,System.Int32,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.UpdateHealthMonitor(System.String,System.Int32,System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteHealthMonitor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AssociateHealthMonitor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DisassociateHealthMonitor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListNetworkSecurityGroups">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetNetworkSecurityGroup(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateNetworkSecurityGroup(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteNetworkSecurityGroup(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.ListNetworkSecurityGroupRules">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.GetNetworkSecurityGroupRule(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.CreateNetworkSecurityGroupRule(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.DeleteNetworkSecurityGroupRule(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AddSubnetForAdditionalIp(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.OpenStackMember.AddSubnetForLb">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Providers.CloudBlockStorageProvider">
             <summary>
             Provides an implementation of <see cref="T:ConoHaNet.Providers.IBlockStorageProvider"/>
             for operating with ConoHa's Cloud Block Storage product.
             </summary>
             <remarks>
             <para>The Cloud Block Storage Provider enables simple access to the ConoHa Cloud Block Storage Volumes as well as Cloud Block Storage Volume Snapshot services.
             ConoHa Cloud Block Storage is a block level storage solution that allows customers to mount drives or volumes to their ConoHa next Generation Cloud Servers.
             The two primary use cases are (1) to allow customers to scale their storage independently from their compute resources,
             and (2) to allow customers to utilize high performance storage to serve database or I/O-intensive applications.</para>
            
             <para>Highlights of ConoHa Cloud Block Storage include:</para>
             <list type="bullet">
             <item>Mount a drive to a Cloud Server to scale storage without paying for more compute capability.</item>
             <item>A high performance option for databases and high performance applications, leveraging solid state drives for speed.</item>
             <item>A standard speed option for customers who just need additional storage on their Cloud Server.</item>
             </list>
            
             <note>
             <list type="bullet">
             <item>Cloud Block Storage is an add-on feature to Next Generation Cloud Servers.  Customers may not attach Cloud Block Storage volumes to other instances, like first generation Cloud Servers.</item>
             <item>Cloud Block Storage is multi-tenant rather than dedicated.</item>
             <item>When volumes are destroyed, ConoHa keeps that disk space unavailable until zeros have been written to the space to ensure that data is not accessible by any other customers.</item>
             <item>Cloud Block Storage allows you to create snapshots that you can save, list, and restore.</item>
             </list>
             </note>
             </remarks>
             <see cref="T:ConoHaNet.Providers.IBlockStorageProvider"/>
             <inheritdoc />
             <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/">OpenStack Block Storage Service API v2 Reference</seealso>
             <seealso href="https://www.google.co.jp/search?q=openstack+">ConoHa Cloud Block Storage Developer Guide - API v1.0</seealso>
             <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Providers.CloudBlockStorageProvider._validResponseCode">
            <summary>
            The HTTP response codes indicating a successful result from an API call.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.CloudBlockStorageProvider._cloudBlockStorageValidator">
            <summary>
            The <see cref="T:net.openstack.Core.Validators.IBlockStorageValidator"/> to use for validating requests to
            this service. The default value is <see cref="P:net.openstack.Providers.Rackspace.Validators.CloudBlockStorageValidator.Default"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IBlockStorageValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, REST service
            implementation, and block storage validator.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="cloudBlockStorageValidator">The <see cref="T:net.openstack.Core.Validators.IBlockStorageValidator"/> to use for validating requests to this service.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="cloudBlockStorageValidator"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IBlockStorageValidator,System.Boolean)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <param name="defaultRegion"></param>
            <param name="identityProvider"></param>
            <param name="restService"></param>
            <param name="cloudBlockStorageValidator"></param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.CreateVolume(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.ListVolumes(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.ListVolumesDetails(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.ShowVolume(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.DeleteVolume(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.ListVolumeTypes(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.DescribeVolumeType(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.WaitForVolumeAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.WaitForVolumeState(System.String,ConoHaNet.Objects.BlockStorage.VolumeState,ConoHaNet.Objects.BlockStorage.VolumeState[],System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.CreateSnapshot(System.String,System.Boolean,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.ListSnapshots(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.ShowSnapshot(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.DeleteSnapshot(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.WaitForSnapshotAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.WaitForSnapshotDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.WaitForSnapshotState(System.String,ConoHaNet.Objects.SnapshotState,ConoHaNet.Objects.SnapshotState[],System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.CreateGlanceImageFromVolume(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Saves Volume Image as Glance Image
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudBlockStorageProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Block Storage requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>volume</c> for the service type, and <c>cloudBlockStorage</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Block Storage endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="T:ConoHaNet.Providers.ICloudDatabaseProvider">
            <summary>
            Represents a provider for the OpenStack Networking service.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.GetVersion">
            <summary>
            Gets version of the provider
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.GetVersionDetails">
            <summary>
            Gets the details of the provider
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.CreateDbService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Create a DB service
            </summary>
            <param name="serviceName"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.ListDbServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of DB service
            </summary>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.GetDbService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the DB service with service id
            </summary>
            <param name="serviceId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.UpdateDbService(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the DB service
            </summary>
            <param name="serviceId"></param>
            <param name="serviceName"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-update-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.DeleteDbService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the DB Service with service id
            </summary>
            <param name="serviceId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-database-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.GetDbServiceQuota(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the value of DB service quota
            </summary>
            <param name="serviceId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.UpdateDbServiceQuota(System.String,System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Update the value of DB service quota
            </summary>
            <param name="serviceId"></param>
            <param name="quota"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-update-database-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.SetDbServiceBackup(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets DB service backup 
            </summary>
            <param name="databaseId"></param>
            <param name="enabled"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.CreateDatabase(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a database in the DB service
            </summary>
            <param name="serviceId"></param>
            <param name="dbName"></param>
            <param name="type"></param>
            <param name="charset"></param>
            <param name="memo"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.ListDatabases(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of database
            </summary>
            <param name="serviceId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.GetDatabase(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the database with database id
            </summary>
            <param name="databaseId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.UpdateDatabase(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the database
            </summary>
            <param name="databaseId"></param>
            <param name="memo"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.DeleteDatabase(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the database with database id
            </summary>
            <param name="databaseId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-databases.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.CreateDbGrant(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Create a database grant data
            </summary>
            <param name="databaseId"></param>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-grant.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.ListDbGrant(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Get the list of a database grant data
            </summary>
            <param name="databaseId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-grant.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.DeleteDbGrant(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the database grant data with userid
            </summary>
            <param name="databaseId"></param>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-grant.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.ListDbBackups(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of the database backups
            </summary>
            <param name="databaseId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.RestoreDatabase(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Restores the database with backup id
            </summary>
            <param name="databaseId"></param>
            <param name="backupId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-restore-database-backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.CreateDbUser(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a database user
            </summary>
            <param name="serviceId"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="hostname"></param>
            <param name="memo"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-create-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.ListDbUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of database user
            </summary>
            <param name="serviceId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-list-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.GetDbUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Get the database user with userid
            </summary>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-get-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.UpdateDbUser(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the database user
            </summary>
            <param name="userId"></param>
            <param name="password"></param>
            <param name="memo"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-update-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.DeleteDbUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the database user with userid
            </summary>
            <param name="userId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-database-delete-database-account.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDatabaseProvider.SetDbServiceStatus(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            command for staff only.
            </summary>
        </member>
        <member name="T:ConoHaNet.Providers.CloudDatabaseProvider">
            <summary>
            <para>The Cloud Networks Provider enable simple access to the ConoHa Cloud Network Services.
            Cloud Networks lets you create a virtual Layer 2 network, known as an isolated network,
            which gives you greater control and security when you deploy web applications.</para>
            <para />
            <para>Documentation URL: https://www.google.co.jp/search?q=openstack+</para>
            </summary>
            <see cref="T:ConoHaNet.Providers.ICloudDatabaseProvider"/>
            <inheritdoc />
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDatabaseProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDatabaseProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDatabaseProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDatabaseProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDatabaseProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDatabaseProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDatabaseProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <param name="defaultRegion"></param>
            <param name="identityProvider"></param>
            <param name="restService"></param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Networks requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Networks endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.GetVersion">
            <summary>
            not implemented
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.GetVersionDetails">
            <summary>
            not implemented
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.CreateDbService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.ListDbServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.GetDbService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.UpdateDbService(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.DeleteDbService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.GetDbServiceQuota(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.UpdateDbServiceQuota(System.String,System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.SetDbServiceBackup(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.CreateDatabase(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.ListDatabases(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.GetDatabase(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.UpdateDatabase(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.DeleteDatabase(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.CreateDbGrant(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.ListDbGrant(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.DeleteDbGrant(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.ListDbBackups(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.RestoreDatabase(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.CreateDbUser(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.ListDbUsers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.GetDbUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.UpdateDbUser(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.DeleteDbUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDatabaseProvider.SetDbServiceStatus(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Providers.ICloudDnsProvider">
            <summary>
            Represents a provider for the OpenStack Networking service.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.GetDnsServiceVersion">
            <summary>
            Gets the version of service provider
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.GetDnsServiceDetails(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the collection of DNS service details
            </summary>
            <param name="domainId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-get-servers-hosting-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.ListDomains(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the collection of domains
            </summary>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-list-domains.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.CreateDomain(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Registers a domain to the DNS service
            </summary>
            <param name="domainName"></param>
            <param name="email"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslb"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-create-domain.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.DeleteDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the domain with domain id
            </summary>
            <param name="domainId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-delete-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.GetDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the domain details with domain id
            </summary>
            <param name="domainId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-get-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.UpdateDomain(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the domain resources
            </summary>
            <param name="domainId"></param>
            <param name="domainName"></param>
            <param name="email"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslb"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-update-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.SearchDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not supported
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.ListDnsRecords(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of DNS records with domain id
            </summary>
            <param name="domainId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-list-records-in-a-domain.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.CreateDnsRecord(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a DNS record
            </summary>
            <param name="domainId"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="priority"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslbRegion"></param>
            <param name="gslbWeight"></param>
            <param name="gslbCheck"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-create-record.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.DeleteDnsRecord(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the DNS record with domain id
            </summary>
            <param name="domainId"></param>
            <param name="recordId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-delete-a-record.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.GetDnsRecord(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the DNS record with domain id
            </summary>
            <param name="domainId"></param>
            <param name="recordId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-get-a-record.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.UpdateDnsRecord(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the DNS record details
            </summary>
            <param name="domainId"></param>
            <param name="recordId"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="priority"></param>
            <param name="ttl"></param>
            <param name="description"></param>
            <param name="gslbRegion"></param>
            <param name="gslbWeight"></param>
            <param name="gslbCheck"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-update-a-record.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.ImportZone(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Imports zone data
            </summary>
            <param name="zoneContent"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-import-zone.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.ExportZone(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Exports zone data
            </summary>
            <param name="zoneId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-dns-export-zone.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudDnsProvider.SetGslbSuspend(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this command is for staff only. 
            </summary>
            <param name="domainId"></param>
            <param name="enabled"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:ConoHaNet.Providers.CloudDnsProvider">
            <summary>
            <para>The Cloud Networks Provider enable simple access to the ConoHa Cloud Network Services.
            Cloud Networks lets you create a virtual Layer 2 network, known as an isolated network,
            which gives you greater control and security when you deploy web applications.</para>
            <para />
            <para>Documentation URL: https://www.google.co.jp/search?q=openstack+</para>
            </summary>
            <see cref="T:ConoHaNet.Providers.ICloudDnsProvider"/>
            <inheritdoc />
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDnsProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDnsProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDnsProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDnsProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDnsProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDnsProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudDnsProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <param name="defaultRegion"></param>
            <param name="identityProvider"></param>
            <param name="restService"></param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.GetDnsServiceVersion">
            <summary>
            not implemented
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Networks requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Networks endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.GetDnsServiceDetails(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.ListDomains(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.CreateDomain(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.DeleteDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.GetDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.UpdateDomain(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.SearchDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.ListDnsRecords(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.CreateDnsRecord(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.DeleteDnsRecord(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.GetDnsRecord(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.UpdateDnsRecord(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.ImportZone(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.ExportZone(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudDnsProvider.SetGslbSuspend(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Providers.CloudFilesProvider">
            <summary>
            Provides an implementation of <see cref="T:ConoHaNet.Providers.IObjectStorageProvider"/>
            for operating with Rackspace's Cloud Files product.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/">OpenStack Object Storage API v1 Reference</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Overview-d1e70.html">Rackspace Cloud Files Developer Guide - API v1</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider._cloudFilesValidator">
            <summary>
            The <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> to use for this provider. This is
            typically set to <see cref="P:ConoHaNet.Objects.CloudFilesValidator.Default"/>.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider._cloudFilesMetadataProcessor">
            <summary>
            The <see cref="T:ConoHaNet.Objects.IObjectStorageMetadataProcessor"/> to use for this provider. This is
            typically set to <see cref="P:ConoHaNet.Objects.File.CloudFilesMetadataProcessor.Default"/>.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider._encodeDecodeProvider">
            <summary>
            The <see cref="T:ConoHaNet.Objects.IEncodeDecodeProvider"/> to use for this provider. This is
            typically set to <see cref="P:ConoHaNet.Providers.EncodeDecodeProvider.Default"/>.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider._statusParser">
            <summary>
            The <see cref="T:ConoHaNet.Objects.IStatusParser"/> to use for this provider. This is
            typically set to <see cref="P:ConoHaNet.Objects.HttpStatusCodeParser.Default"/>.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider._bulkDeletionResultMapper">
            <summary>
            The <see cref="T:ConoHaNet.Objects.IObjectMapper`2"/> to use for
            this provider. This is typically set to a new instance of <see cref="T:ConoHaNet.Objects.File.BulkDeletionResultMapper"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST service
            implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, no default region, and the default identity provider
            and REST service implementation.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(ConoHaNet.Providers.IIdentityProvider,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, no default region, the specified identity
            provider and REST service implementation, and the default
            Rackspace-Cloud-Files-specific implementations of the object storage validator,
            metadata processor, encoder, status parser, and bulk delete results mapper.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, and REST service
            implementation, and the default Rackspace-Cloud-Files-specific implementations of
            the object storage validator, metadata processor, encoder, status parser, and bulk
            delete results mapper.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IObjectStorageValidator,ConoHaNet.Objects.IObjectStorageMetadataProcessor,ConoHaNet.Objects.IEncodeDecodeProvider,ConoHaNet.Objects.IStatusParser,ConoHaNet.Objects.IObjectMapper{ConoHaNet.Objects.File.BulkDeleteResponse,ConoHaNet.Objects.File.BulkDeletionResults},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity, the specified default region, and the default identity
            provider, REST service implementation, validator, metadata processor, encoder,
            status parser, and bulk delete results mapper.
            </summary>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="cloudFilesValidator">The <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> to use for validating requests to this service.</param>
            <param name="cloudFilesMetadataProcessor">The <see cref="T:ConoHaNet.Objects.IObjectStorageMetadataProcessor"/> to use for processing metadata returned in HTTP headers.</param>
            <param name="encodeDecodeProvider">The <see cref="T:ConoHaNet.Objects.IEncodeDecodeProvider"/> to use for encoding data in URI query strings.</param>
            <param name="statusParser">The <see cref="T:ConoHaNet.Objects.IStatusParser"/> to use for parsing HTTP status codes.</param>
            <param name="mapper">The object mapper to use for mapping <see cref="T:ConoHaNet.Objects.File.BulkDeleteResponse"/> objects to <see cref="T:ConoHaNet.Objects.File.BulkDeletionResults"/> objects.</param>
            <param name="isAdminMode"></param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cloudFilesValidator"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="cloudFilesMetadataProcessor"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="encodeDecodeProvider"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="statusParser"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="mapper"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IObjectStorageValidator,ConoHaNet.Objects.IObjectStorageMetadataProcessor,ConoHaNet.Objects.IEncodeDecodeProvider,ConoHaNet.Objects.IStatusParser,ConoHaNet.Objects.IObjectMapper{ConoHaNet.Objects.File.BulkDeleteResponse,ConoHaNet.Objects.File.BulkDeletionResults},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            the specified default identity, default region, identity provider, REST service
            implementation, validator, metadata processor, encoder, status parser, and bulk
            delete results mapper.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="cloudFilesValidator">The <see cref="T:net.openstack.Core.Validators.IObjectStorageValidator"/> to use for validating requests to this service.</param>
            <param name="cloudFilesMetadataProcessor">The <see cref="T:ConoHaNet.Objects.IObjectStorageMetadataProcessor"/> to use for processing metadata returned in HTTP headers.</param>
            <param name="encodeDecodeProvider">The <see cref="T:ConoHaNet.Objects.IEncodeDecodeProvider"/> to use for encoding data in URI query strings.</param>
            <param name="statusParser">The <see cref="T:ConoHaNet.Objects.IStatusParser"/> to use for parsing HTTP status codes.</param>
            <param name="bulkDeletionResultMapper">The object mapper to use for mapping <see cref="T:ConoHaNet.Objects.File.BulkDeleteResponse"/> objects to <see cref="T:ConoHaNet.Objects.File.BulkDeletionResults"/> objects.</param>
            <param name="isAdminMode"></param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cloudFilesValidator"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="cloudFilesMetadataProcessor"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="encodeDecodeProvider"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="statusParser"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="bulkDeletionResultMapper"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.ListContainers(System.Nullable{System.Int32},System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DeleteContainer(System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetContainerHeader(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetContainerMetaData(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetContainerCDNHeader(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.ListCDNContainers(System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.EnableCDNOnContainer(System.String,System.Int64,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.EnableCDNOnContainer(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.EnableCDNOnContainer(System.String,System.Int64,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DisableCDNOnContainer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.UpdateContainerMetadata(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DeleteContainerMetadata(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DeleteContainerMetadata(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.UpdateContainerCdnHeaders(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DisableStaticWebOnContainer(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetObjectMetaData(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DeleteObjectMetadata(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DeleteObjectMetadata(System.String,System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.ListObjects(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CreateObjectFromFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CreateObject(System.String,System.IO.Stream,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetObject(System.String,System.String,System.IO.Stream,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetObjectSaveToFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CopyObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DeleteObject(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.DeleteObjects(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes a collection of objects from a container.
            </summary>
            <param name="container">The container name.</param>
            <param name="objects">A names of objects to delete.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objects"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objects"/> contains any null or empty values.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objects"/> contains an item that is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Bulk_Delete-d1e2338.html.html">Bulk Delete (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.BulkDelete(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes a collection of objects stored in object storage.
            </summary>
            <param name="items">The collection of items to delete. The keys of each pair specifies the container name, and the value specifies the object name.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="items"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="items"/> contains any values with empty keys or values.
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="items"/> contains a pair where the key is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="items"/> contains a pair where the value is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Bulk_Delete-d1e2338.html.html">Bulk Delete (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchiveFromFile(System.String,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Upload and automatically extract an archive of files.
            </summary>
            <param name="filePath">The source file path. Example <localUri>c:\folder1\folder2\archive_name.tar.gz</localUri></param>
            <param name="uploadPath">The target path for the extracted files. For details about this value, see the Extract Archive reference link in the documentation for this method.</param>
            <param name="archiveFormat">The archive format.</param>
            <param name="contentType">The content type of the files extracted from the archive. If the value is <see langword="null"/> or empty, the content type of the extracted files is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:ConoHaNet.Providers.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>An <see cref="T:ConoHaNet.Objects.File.ExtractArchiveResponse"/> object containing the detailed result of the extract archive operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="filePath"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="uploadPath"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="archiveFormat"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="filePath"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.IO.FileNotFoundException">If the file <paramref name="filePath"/> could not be found.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="archiveFormat"/> is not supported by the provider.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Extract_Archive-d1e2338.html">Extract Archive (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.ExtractArchive(System.IO.Stream,System.String,ConoHaNet.Objects.File.ArchiveFormat,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Upload and automatically extract an archive of files.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> providing the data for the archive.</param>
            <param name="uploadPath">The target path for the extracted files. For details about this value, see the Extract Archive reference link in the documentation for this method.</param>
            <param name="archiveFormat">The archive format.</param>
            <param name="contentType">The content type of the files extracted from the archive. If the value is <see langword="null"/> or empty, the content type of the extracted files is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:ConoHaNet.Providers.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>An <see cref="T:ConoHaNet.Objects.File.ExtractArchiveResponse"/> object containing the detailed result of the extract archive operation.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="stream"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="uploadPath"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="archiveFormat"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="archiveFormat"/> is not supported by the provider.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Extract_Archive-d1e2338.html">Extract Archive (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.MoveObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.PurgeObjectFromCDN(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetAccountHeaders(System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetAccountMetaData(System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.UpdateAccountMetadataThroughAdminUrl(System.Collections.Generic.Dictionary{System.String,System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.UpdateAccountMetadataThroughAdminUrl(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CreateTemporaryPublicUri(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.String,System.String,System.DateTimeOffset,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Construct a <see cref="T:System.Uri"/> which allows public access to an object hosted in Cloud Files.
            </summary>
            <param name="method">The HTTP method that will be used to access the object. This is typically <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.GET"/> or <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.PUT"/>.</param>
            <param name="container">The container name.</param>
            <param name="objectName">The object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="key">The account key to use with the TempURL feature, as specified in the account <see cref="F:ConoHaNet.Providers.CloudFilesProvider.TempUrlKey"/> metadata.</param>
            <param name="expiration">The expiration time for the generated URI.</param>
            <param name="region">The region in which to access the object. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>An absolute <see cref="T:System.Uri"/> which allows unauthenticated (public) access to the specified object until the <paramref name="expiration"/> time passes or the account key is changed.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.TempUrlKey"/>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/tempurl.html">Temporary URL middleware (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Create_TempURL-d1a444.html">Create the TempURL (Rackspace Cloud Files Developer Guide - API v1)</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CreateFormPostUri(System.String,System.String,System.String,System.DateTimeOffset,System.Uri,System.Int64,System.Int32,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Construct a <see cref="T:System.Uri"/> and field information supporting the public upload of objects to a Cloud Files container via an HTTP form submission.
             </summary>
             <remarks>
             The HTTP form used for uploading files has the following form, where <em>uri</em> is a placeholder
             for the URI described in the return value from this method.
            
             <code>
             &lt;form action="<em>uri</em>" method="POST" enctype="multipart/form-data"&gt;
               &lt;input type="file" name="file1"/&gt;&lt;br/&gt;
               &lt;input type="submit"/&gt;
             &lt;/form&gt;
             </code>
            
             <para>
             In addition to the above <c>&lt;input&gt;</c> fields, the form should include one hidden input
             for each of the key/value pairs described in the return value from this method. Each of these
             fields should have the following form, where <em>key</em> and <em>value</em> are placeholders
             for one key/value pair.
             </para>
            
             <code>
             &lt;input type="hidden" name="<em>key</em>" value="<em>value</em>"/&gt;
             </code>
             </remarks>
             <param name="container">The container name where uploaded files are placed.</param>
             <param name="objectPrefix">The prefix applied to uploaded objects.</param>
             <param name="key">The account key to use with the Form POST feature, as specified in the account <see cref="F:ConoHaNet.Providers.CloudFilesProvider.TempUrlKey"/> metadata.</param>
             <param name="expiration">The expiration time for the generated URI.</param>
             <param name="redirectUri">The URI to redirect the user to after the upload operation completes.</param>
             <param name="maxFileSize">Specifies the maximum size in bytes of a single file.</param>
             <param name="maxFileCount">The maximum number of files which can be uploaded in a single request.</param>
             <param name="region">The region in which to access the object. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>
             A <see cref="T:System.Tuple`2"/> object containing the information necessary to submit a POST operation uploading one or more files to Cloud Files.
             The first item in the tuple is the absolute URI where the form data should be submitted, which is valid until the <paramref name="expiration"/>
             time passes or the account key is changed. The value is a collection of key/value pairs describing
             the names/values of additional fields to submit with the form.
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="container"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="objectPrefix"/> is <see langword="null"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="key"/> is <see langword="null"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="redirectUri"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="maxFileSize"/> is less than 0.
             <para>-or-</para>
             <para>If <paramref name="maxFileCount"/> is less or equal to 0.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="objectPrefix"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="key"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="maxFileSize"/> is greater than <see cref="P:ConoHaNet.Providers.CloudFilesProvider.LargeFileBatchThreshold"/>.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectPrefix"/> is not a valid object name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.TempUrlKey"/>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/form-post.html">Form POST middleware (OpenStack Object Storage API v1 Reference)</seealso>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/FormPost-d1a555.html">FormPost (Rackspace Cloud Files Developer Guide - API v1)</seealso>
             <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetServiceEndpointCloudFiles(ConoHaNet.Objects.CloudIdentity,System.String,System.Boolean)">
            <summary>
            Gets the public or internal service endpoint to use for Cloud Files requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>object-store</c> for the service type, and <c>cloudFiles</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the internal service endpoint; otherwise <see langword="false"/> to use the public service endpoint.</param>
            <returns>The URL for the requested Cloud Files endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetAdminServiceEndpointCloudFiles(ConoHaNet.Objects.CloudIdentity,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.GetServiceEndpointCloudFilesCDN(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Files CDN requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>rax:object-cdn</c> for the service type, and <c>cloudFilesCDN</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Files CDN endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CopyStream(System.IO.Stream,System.IO.Stream,System.Int32,System.Action{System.Int64})">
            <summary>
            Copy data from an input stream to an output stream.
            </summary>
            <remarks>
            The argument to the callback method is the total number of bytes written to the output stream thus far.
            Note that <see cref="M:System.IO.Stream.Flush"/> is not called on <paramref name="output"/> prior to reporting a
            progress update, so data may remain in the stream's buffer.
            </remarks>
            <param name="input">The input stream.</param>
            <param name="output">The output stream.</param>
            <param name="bufferSize">The size of the buffer to use for copying data.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="input"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="output"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="bufferSize"/> is less than or equal to 0.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.CreateObjectInSegments(System.String,System.IO.Stream,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates an object consisting of multiple segments, each no larger than
            <see cref="P:ConoHaNet.Providers.CloudFilesProvider.LargeFileBatchThreshold"/>, using data from a <see cref="T:System.IO.Stream"/>.
            If the destination file already exists, the contents are overwritten.
            </summary>
            <remarks>
            In addition to the individual segments containing file data, this method creates
            the manifest required for treating the segments as a single object in future GET
            requests.
            </remarks>
            <param name="container">The container name.</param>
            <param name="stream">A <see cref="T:System.IO.Stream"/> providing the data for the file.</param>
            <param name="objectName">The destination object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="contentType">The content type of the created object. If the value is <see langword="null"/> or empty, the content type of the created object is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:ConoHaNet.Providers.CloudFilesProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="stream"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/PUT_createOrReplaceObject_v1__account___container___object__storage_object_services.html">Create or replace object (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/manifest-objects.html">Manifest objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.CloudFilesProvider.VerifyContainerIsCDNEnabled(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Verifies that a particular container is CDN-enabled.
            </summary>
            <remarks>
            Normally, the <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/> property is used to check if a container is
            CDN-enabled. However, if a container has <em>never</em> been CDN-enabled, the
            <see cref="M:ConoHaNet.Providers.CloudFilesProvider.GetContainerCDNHeader(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/> method throws a misleading <see cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException"/>.
            This method uses <see cref="M:ConoHaNet.Providers.CloudFilesProvider.GetContainerHeader(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> to distinguish between these cases, ensuring
            that a <see cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException"/> gets thrown whenever a container exists but is not
            CDN-enabled.
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the container does not have a CDN header, or if the <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/> property is <see langword="false"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.AuthToken">
            <summary>
            The <strong>X-Auth-Token</strong> header, which specifies the token to use for authenticated requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/authentication.html">Authentication (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Authentication-d1e639.html">Authentication (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnManagementUrl">
            <summary>
            The <strong>X-Cdn-Management-Url</strong> header.
            <note type="warning">The value of this header is not defined. Do not use.</note>
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.StorageUrl">
            <summary>
            The <strong>X-Storage-Url</strong> header, which specifies the base URI for all object storage requests.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/authentication.html">Authentication (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Authentication-d1e639.html">Authentication (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.AccountMetaDataPrefix">
            <summary>
            The <strong>X-Account-Meta-</strong> header prefix, which specifies the HTTP header prefix for metadata keys associated with an account.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateAccountMeta_v1__account__storage_account_services.html">Create, update, or delete account metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.AccountBytesUsed">
            <summary>
            The <strong>X-Account-Bytes-Used</strong> header, which specifies the total number of bytes that are stored in Object Storage for the account.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showAccountMeta_v1__account__storage_account_services.html">Show account metadata (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listcontainers_v1__account__accountServicesOperations_d1e000.html">Show Account Details and List Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.AccountContainerCount">
            <summary>
            The <strong>X-Account-Container-Count</strong> header, which specifies the number of containers associated with an account.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showAccountMeta_v1__account__storage_account_services.html">Show account metadata (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listcontainers_v1__account__accountServicesOperations_d1e000.html">Show Account Details and List Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.AccountObjectCount">
            <summary>
            The <strong>X-Account-Object-Count</strong> header, which specifies the number of objects in an account.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showAccountDetails_v1__account__storage_account_services.html">Show account details and list containers (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listcontainers_v1__account__accountServicesOperations_d1e000.html">Show Account Details and List Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.TempUrlKey">
            <summary>
            The <strong>Temp-Url-Key</strong> account metadata key for use with <see cref="M:ConoHaNet.Providers.CloudFilesProvider.CreateTemporaryPublicUri(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.String,System.String,System.DateTimeOffset,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>.
            </summary>
            <remarks>
            This account metadata value is passed as the <em>key</em> parameter to <see cref="M:ConoHaNet.Providers.CloudFilesProvider.CreateTemporaryPublicUri(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.String,System.String,System.DateTimeOffset,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>.
            </remarks>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.GetAccountMetaData(System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso cref="M:ConoHaNet.Providers.CloudFilesProvider.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Set_Account_Metadata-d1a4460.html">Set Account TempURL Metadata Key (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ContainerMetaDataPrefix">
            <summary>
            The <strong>X-Container-Meta-</strong> header prefix, which specifies the HTTP header prefix for metadata keys associated with a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateContainerMeta_v1__account___container__storage_container_services.html">Create, update, or delete container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ContainerRemoveMetaDataPrefix">
            <summary>
            The <strong>X-Remove-Container-Meta-</strong> header prefix, which specifies the HTTP header prefix for removing metadata keys from a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateContainerMeta_v1__account___container__storage_container_services.html">Create, update, or delete container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ContainerBytesUsed">
            <summary>
            The <strong>X-Container-Bytes-Used</strong> header, which specifies the total size of all objects stored in a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showContainerMeta_v1__account___container__storage_container_services.html">Show container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ContainerObjectCount">
            <summary>
            The <strong>X-Container-Object-Count</strong> header, which specifies the total number of objects stored in a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showContainerMeta_v1__account___container__storage_container_services.html">Show container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.WebIndex">
            <summary>
            The <strong>Web-Index</strong> metadata key, which specifies the index page for every pseudo-directory in a website.
            </summary>
            <remarks>
            If your pseudo-directory does not have a file with the same name as your index file, visits to the sub-directory return a 404 error.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Create_Static_Website-dle4000.html">Create Static Website (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.WebError">
             <summary>
             The <strong>Web-Error</strong> metadata key, which specifies the suffix for error pages displayed for a website.
             </summary>
             <remarks>
             You may create and set custom error pages for visitors to your website; currently, only
             401 (Unauthorized) and 404 (Not Found) errors are supported. To do this, set the metadata
             value <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebError"/>.
            
             <para>
             Error pages are served with the &lt;status&gt; code prepended to the name of the error
             page you set. For instance, if you set <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebError"/> to <fictitiousUri>error.html</fictitiousUri>,
             401 errors will display the page <fictitiousUri>401error.html</fictitiousUri>. Similarly, 404
             errors will display <fictitiousUri>404error.html</fictitiousUri>. You must have both of these
             pages created in your container when you set the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebError"/> metadata, or your site
             will display generic error pages.
             </para>
            
             <para>
             You need only set the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebError"/> metadata once for your entire static website.
             </para>
             </remarks>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/Set_Error_Pages_for_Static_Website-dle4005.html">Set Error Pages for Static Website (OpenStack Object Storage API v1 Reference - API v1)</seealso>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/Set_Error_Pages_for_Static_Website-dle4005.html">Set Error Pages for Static Website (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.WebListings">
            <summary>
            The <strong>Web-Listings</strong> metadata key, which specifies whether or not pseudo-directories should
            display a list of files instead of returning a 404 error when the pseudo-directory does
            not contain an index file.
            </summary>
            <remarks>
            To display a list of files in pseudo-directories instead of an index, set the
            <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebListings"/> metadata value to <c>"TRUE"</c> for a container.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.WebListingsCSS">
            <summary>
            The <strong>Web-Listings-CSS</strong> metadata key, which specifies the stylesheet to use for file listings
            when <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebListings"/> is <see langword="true"/> and a pseudo-directory does not contain an
            index file.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.VersionsLocation">
            <summary>
            The <strong>X-Versions-Location</strong> header, which specifies the name of the container where previous
            versions of objects are stored for a container.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/set-object-versions.html">Object versioning (OpenStack Object Storage API v1 Reference - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnUri">
            <summary>
            The <strong>X-Cdn-Uri</strong> header, which specifies the publicly-available URL
            for a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ContainerCDN.CDNUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnSslUri">
            <summary>
            The <strong>X-Cdn-Ssl-Uri</strong> header, which specifies the publicly-available
            URL for SSL access to a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ContainerCDN.CDNSslUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnStreamingUri">
            <summary>
            The <strong>X-Cdn-Streaming-Uri</strong> header, which specifies the publicly-available
            URL for streaming access to a CDN-enabled container (using Adobe HTTP Dynamic Streaming).
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ContainerCDN.CDNStreamingUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnTTL">
            <summary>
            The <strong>X-Ttl</strong> header, which specifies the Time To Live (TTL) in seconds for a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ContainerCDN.Ttl"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnLogRetention">
            <summary>
            The <strong>X-Log-Retention</strong> header, which specifies whether or not log retention is enabled for a CDN-enabled container.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ContainerCDN.LogRetention"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnEnabled">
            <summary>
            The <strong>X-Cdn-Enabled</strong> header, which specifies whether or not a container is CDN-enabled.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnIosUri">
            <summary>
            The <strong>X-Cdn-Ios-Uri</strong> header, which specifies the publicly-available URL for
            iOS streaming access to a CDN-enabled container (using Apple HTTP Live Streaming).
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso cref="P:ConoHaNet.Objects.ContainerCDN.CDNIosUri"/>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/iOS-Streaming-d1f3725.html">iOS Streaming (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ObjectMetaDataPrefix">
            <summary>
            The <strong>X-Object-Meta-</strong> header prefix, which specifies the HTTP header prefix for metadata keys associated with an object.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateObjectMeta_v1__account___container___object__storage_object_services.html">Create or update object metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ObjectDeleteAfter">
            <summary>
            The <strong>X-Delete-After</strong> header, which specifies the relative time (in seconds
            from "now") after which an object should expire, not be served, and be
            deleted completely from the storage system.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/expire-objects.html">Schedule objects for deletion (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ObjectDeleteAt">
            <summary>
            The <strong>X-Delete-At</strong> header, which specifies the absolute time (in Unix Epoch
            format) after which an object should expire, not be served, and be deleted
            completely from the storage system.
            </summary>
            <remarks>
            Unix time is specified as the number of seconds elapsed since 00:00:00 UTC,
            1 January 1970, not counting leap seconds.
            </remarks>
            <seealso href="http://en.wikipedia.org/wiki/Unix_time">Unix time (Wikipedia)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/expire-objects.html">Schedule objects for deletion (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.Etag">
            <summary>
            The <strong>ETag</strong> header, which specifies the MD5 checksum of the data in an object stored in Object Storage.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/PUT_createOrReplaceObject_v1__account___container___object__storage_object_services.html">Create or replace object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.Destination">
            <summary>
            The <strong>Destination</strong> header, which specifies the destination container and object
            name for a Copy Object operation.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/COPY_copyObject_v1__account___container___object__storage_object_services.html">Copy object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.IfNoneMatch">
            <summary>
            The <strong>If-None-Match</strong> header, which allows calls to create or update objects to
            query whether the server already has a copy of the object before any data is sent.
            </summary>
            <remarks>
            Currently the service only supports specifying the header <c>If-None-Match: *</c>, which
            results in a <seealso cref="F:System.Net.HttpStatusCode.PreconditionFailed"/> response if the Object
            Storage Service contains any file matching the name of the object being updated. Neither
            the content of the object nor its associated metadata are checked by the service.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/PUT_createOrReplaceObject__v1__account___container___object__storage_object_services.html">Create or replace object (OpenStack Object Storage API v1 Reference)</seealso>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ObjectManifest">
            <summary>
            The <strong>X-Object-Manifest</strong> header, which specifies the container and prefix for the segments of a
            dynamic large object.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/dynamic-large-object-creation.html">Dynamic large objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.StaticLargeObject">
            <summary>
            The <strong>X-Static-Large-Object</strong> header, which specifies whether an object is a manifest for a static
            large object.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-large-objects.html">Static large objects (OpenStack Object Storage API v1 Reference)</seealso>
            <preliminary/>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.DetectContentType">
             <summary>
             The <strong>X-Detect-Content-Type</strong> header, which specifies that the Object Storage service should
             automatically assign the content type for the object.
             </summary>
             <remarks>
             The provider may use any algorithm to assign the content type for the object, including but not limited
             to filename extension analysis and file contents analysis. The resulting content type is not required
             to accurately reflect the true contents of the file.
            
             <note>If this header is set to <c>True</c>, the <strong>Content-Type</strong> header is ignored.</note>
             </remarks>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/PUT_createOrReplaceObject_v1__account___container___object__storage_object_services.html">Create or replace object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.CdnPurgeEmail">
            <summary>
            The <strong>X-Purge-Email</strong> header, which specifies the comma-separated list of email addresses to notify when a CDN purge request completes.
            </summary>
            <remarks>
            <note type="note">
            This header is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/DELETE_deleteCDNobject_v1__account___object__CDN_Object_Services.html">Delete CDN-Enabled Object (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.Newest">
            <summary>
            The <strong>X-Newest</strong> header, which indicates that Cloud Files should locate
            the most recent version of an object or container listing rather than return the
            first response provided by an underlying storage node.
            </summary>
            <remarks>
            Setting this header to <c>True</c> can have a substantial performance impact on the
            <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.GET"/> or <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.HEAD"/> request. It should only
            be used when absolutely necessary.
            </remarks>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showAccountDetails_v1__account__storage_account_services.html">Show account details and list containers (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showAccountMeta_v1__account__storage_account_services.html">Show account metadata (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showContainerMeta_v1__account___container__storage_container_services.html">Show container metadata (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_getObject_v1__account___container___object__storage_object_services.html">Get object content and metadata (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showObjectMeta_v1__account___container___object__storage_object_services.html">Show object metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.MaxLargeFileBatchThreshold">
            <summary>
            The maximum value of <see cref="P:ConoHaNet.Providers.CloudFilesProvider.LargeFileBatchThreshold"/> supported by this provider.
            This value is set to the minimum value for which creation of a single object larger than
            the value may result in the server closing the TCP/IP connection and purging the object's
            data.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/large-object-creation.html">Large objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider._largeFileBatchThreshold">
            <summary>
            This is the backing field for <see cref="P:ConoHaNet.Providers.CloudFilesProvider.LargeFileBatchThreshold"/>. The
            default value is <see cref="F:ConoHaNet.Providers.CloudFilesProvider.MaxLargeFileBatchThreshold"/>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Providers.CloudFilesProvider.LargeFileBatchThreshold">
            <summary>
            Gets or sets the maximum allowable size of a single object stored in this provider.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="value"/> exceeds <see cref="F:ConoHaNet.Providers.CloudFilesProvider.MaxLargeFileBatchThreshold"/>.</exception>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ProcessedHeadersMetadataKey">
            <summary>
            This value is used as the key for storing metadata information in the dictionary
            returned by <see cref="M:ConoHaNet.Objects.IObjectStorageMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})"/>.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.IObjectStorageMetadataProcessor"/>
        </member>
        <member name="F:ConoHaNet.Providers.CloudFilesProvider.ProcessedHeadersHeaderKey">
            <summary>
            This value is used as the key for storing non-metadata header information in the
            dictionary returned by <see cref="M:ConoHaNet.Objects.IObjectStorageMetadataProcessor.ProcessMetadata(System.Collections.Generic.IList{JSIStudios.SimpleRESTServices.Client.HttpHeader})"/>.
            </summary>
            <seealso cref="T:ConoHaNet.Objects.IObjectStorageMetadataProcessor"/>
        </member>
        <member name="T:ConoHaNet.Providers.CloudIdentityProvider">
            <summary>
            Provides an implementation of <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> and <see cref="T:ConoHaNet.Providers.IExtendedCloudIdentityProvider"/>
            for operating with ConoHa's Cloud Identity product.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/">OpenStack Identity Service API v2.0 Reference</seealso>
            <seealso href="https://www.google.co.jp/search?q=openstack+">ConoHa Cloud Identity Client Developer Guide - API v2.0</seealso>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Providers.CloudIdentityProvider._userAccessCache">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.TokenCache"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.CloudIdentityProvider._urlBase">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.UrlBase"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with no default identity, and the default base URL, REST service implementation,
            and token cache.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with the specified default identity, and the default base URL, REST service
            implementation, and token cache.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <example>
            <para>The following example demonstrates the use of this method to create an identity provider that
            authenticates using username and API key credentials.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="CreateProvider" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="CreateProvider" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="CreateProvider" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="CreateProvider" language="fs"/>
            <para>The following example demonstrates the use of this method to create an identity provider that
            authenticates using username and password credentials.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="CreateProviderWithPassword" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="CreateProviderWithPassword" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="CreateProviderWithPassword" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="CreateProviderWithPassword" language="fs"/>
            </example>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with no default identity, the specified base URL, and the default REST service
            implementation and token cache.
            </summary>
            <param name="urlBase">The base URL for the cloud instance. If this value is <see langword="null"/>, the provider will use <c>https://www.google.co.jp/search?q=openstack+</c>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.Uri,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with the specified default identity and base URL, and the default REST service
            implementation and token cache.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="urlBase">The base URL for the cloud instance. If this value is <see langword="null"/>, the provider will use <c>https://www.google.co.jp/search?q=openstack+</c>.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Caching.ICache{ConoHaNet.Objects.UserAccess},System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with no default identity, and the specified base URL, REST service
            implementation, and token cache.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <see langword="null"/>, the provider will use <see cref="P:ConoHaNet.Objects.UserAccessCache.Instance"/>.</param>
            <param name="urlBase">The base URL for the cloud instance. If this value is <see langword="null"/>, the provider will use <c>https://www.google.co.jp/search?q=openstack+</c>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(net.openstack.Core.Caching.ICache{ConoHaNet.Objects.UserAccess})">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with no default identity, the default base URL, the default REST service
            implementation, and the specified token cache.
            </summary>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <see langword="null"/>, the provider will use <see cref="P:ConoHaNet.Objects.UserAccessCache.Instance"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with no default identity, the default base URL, the specified REST service
            implementation, and the <see cref="P:ConoHaNet.Objects.UserAccessCache.Instance"/>
            token cache.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Caching.ICache{ConoHaNet.Objects.UserAccess})">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            with no default identity, the default base URL, and the specified REST service
            implementation and token cache.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <see langword="null"/>, the provider will use <see cref="P:ConoHaNet.Objects.UserAccessCache.Instance"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Caching.ICache{ConoHaNet.Objects.UserAccess},System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> class
            using the provided values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
            <param name="tokenCache">The cache to use for caching user access tokens. If this value is <see langword="null"/>, the provider will use <see cref="P:ConoHaNet.Objects.UserAccessCache.Instance"/>.</param>
            <param name="urlBase">The base URL for the cloud instance. If this value is <see langword="null"/>, the provider will use <c>https://www.google.co.jp/search?q=openstack+</c>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Caching.ICache{ConoHaNet.Objects.UserAccess},System.Uri,System.Boolean)">
             <summary>
            
             </summary>
             <param name="defaultIdentity"></param>
             <param name="restService"></param>
             <param name="tokenCache"></param>
             <param name="urlBase"></param>
             <param name="isAdminMode"></param>
        </member>
        <member name="P:ConoHaNet.Providers.CloudIdentityProvider.TokenCache">
            <summary>
            Gets the cache to use for caching user access tokens.
            </summary>
        </member>
        <member name="P:ConoHaNet.Providers.CloudIdentityProvider.UrlBase">
            <summary>
            Gets the base URL for the cloud instance.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListRoles(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.DeleteRole(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AddRole(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetRole(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetRolesByUser(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetRolesByUserTenant(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AddRoleToUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.DeleteRoleFromUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListUsersByRole(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.SetUserPassword(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.SetUserPassword(ConoHaNet.Objects.User,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.SetUserPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.SetUserPasswordByUpdate(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListUserCredentials(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetUserCredential(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ResetApiKey(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Reset the API key credentials for a user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.User.Id"/> or <see cref="P:ConoHaNet.Objects.NewUser.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.UserCredential"/> object containing the new API key for the user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.</para>
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method. For more information about creating the
            provider, see <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="ResetApiKey" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="ResetApiKey" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="ResetApiKey" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="ResetApiKey" language="fs"/>
            </example>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Reset API key credentials (ConoHa Cloud Identity Client Developer Guide - API v2.0)</seealso>
        </member>
        <member name="P:ConoHaNet.Providers.CloudIdentityProvider.DefaultIdentity">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.UpdateUserCredentials(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.UpdateUserCredentials(ConoHaNet.Objects.User,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.UpdateUserCredentials(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.DeleteUserCredentials(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListUsers(ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetUserByName(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetUsersByEmail(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the details for users with the specified email address.
            </summary>
            <param name="email">The email address.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.User"/> objects describing the users with the specified email address.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="email"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="email"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="https://www.google.co.jp/search?q=openstack+">Get User by Email (ConoHa Cloud Identity Client Developer Guide - API v2.0)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetUser(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AddUser(ConoHaNet.Objects.NewUser,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AddUserWithTenantId(ConoHaNet.Objects.Identity.NewUserWithTenantId,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.UpdateUser(ConoHaNet.Objects.User,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.DeleteUser(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListTenants(ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AddTenant(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.UpdateTenant(System.String,System.String,System.String,System.Nullable{System.Boolean},ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.DeleteTenant(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListServiceCatalogEndpoints(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists the endpoints in a tenant's service catalog.
            </summary>
            <remarks>
            <para>This call is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <param name="tenantId">The tenant ID. This is obtained from <see cref="P:ConoHaNet.Objects.Tenant.Id"/></param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.ExtendedEndpoint"/> objects containing endpoint details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="tenantId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="tenantId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://developer.openstack.org/api-ref-identity-v2.html#os-kscatalog-ext">OS-KSCATALOG admin extension (Identity API v2.0 - OpenStack Complete API Reference)</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetServiceCatalogEndpoint(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets an endpoint by ID from the service catalog for a tenant.
            </summary>
            <remarks>
            <para>This call is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <param name="tenantId">The tenant ID. This is obtained from <see cref="P:ConoHaNet.Objects.Tenant.Id"/></param>
            <param name="endpointId">The endpoint ID. This is obtained from <see cref="P:ConoHaNet.Objects.ExtendedEndpoint.Id"/></param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>An <see cref="T:ConoHaNet.Objects.ExtendedEndpoint"/> object containing the endpoint details.</returns>
            <exception cref="T:System.ArgumentNullException">
            <para>If <paramref name="tenantId"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="endpointId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>If <paramref name="tenantId"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="endpointId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://developer.openstack.org/api-ref-identity-v2.html#os-kscatalog-ext">OS-KSCATALOG admin extension (Identity API v2.0 - OpenStack Complete API Reference)</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AddServiceCatalogEndpoint(System.String,ConoHaNet.Objects.Identity.EndpointTemplateId,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Adds an endpoint to the service catalog for a tenant.
            </summary>
            <remarks>
            <para>This call is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <param name="tenantId">The tenant ID. This is obtained from <see cref="P:ConoHaNet.Objects.Tenant.Id"/></param>
            <param name="endpointTemplateId">The endpoint template ID.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>An <see cref="T:ConoHaNet.Objects.ExtendedEndpoint"/> object containing the endpoint details.</returns>
            <exception cref="T:System.ArgumentNullException">
            <para>If <paramref name="tenantId"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="endpointTemplateId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="tenantId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://developer.openstack.org/api-ref-identity-v2.html#os-kscatalog-ext">OS-KSCATALOG admin extension (Identity API v2.0 - OpenStack Complete API Reference)</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.DeleteServiceCatalogEndpoint(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Removes an endpoint from the service catalog for a tenant.
            </summary>
            <remarks>
            <para>This call is part of the <c>OS-KSCATALOG</c> extension to the OpenStack Identity Service V2.</para>
            </remarks>
            <param name="tenantId">The tenant Id. This is obtained from <see cref="P:ConoHaNet.Objects.Tenant.Id"/></param>
            <param name="endpointId">The endpoint Id. This is obtained from <see cref="P:ConoHaNet.Objects.ExtendedEndpoint.Id"/></param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.CloudIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the endpoint was successfully deleted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <para>If <paramref name="tenantId"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="endpointId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>If <paramref name="tenantId"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="endpointId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://developer.openstack.org/api-ref-identity-v2.html#os-kscatalog-ext">OS-KSCATALOG admin extension (Identity API v2.0 - OpenStack Complete API Reference)</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetToken(ConoHaNet.Objects.CloudIdentity,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetTokenAsync(ConoHaNet.Objects.CloudIdentity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.Authenticate(ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AuthenticateAsync(ConoHaNet.Objects.CloudIdentity,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetUserAccess(ConoHaNet.Objects.CloudIdentity,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetUserAccessAsync(ConoHaNet.Objects.CloudIdentity,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.BuildServiceCatalog(System.Collections.Generic.IEnumerable{ConoHaNet.Objects.ExtendedEndpoint})">
            <summary>
            Converts a collection of <see cref="T:ConoHaNet.Objects.ExtendedEndpoint"/> objects describing service endpoints
            for an impersonated identity to a collection of <see cref="T:ConoHaNet.Objects.ServiceCatalog"/> objects used by
            the provider implementations for endpoint resolution.
            </summary>
            <param name="endpoints">A collection of <see cref="T:ConoHaNet.Objects.ExtendedEndpoint"/> objects describing the available endpoints.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.ServiceCatalog"/> objects describing the same endpoints as <paramref name="endpoints"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="endpoints"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="endpoints"/> contains any <see langword="null"/> values.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ValidateToken(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListEndpoints(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.AddInternalUserWithTenantId(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            ConoHa only use.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.GetInternalUserAccess(ConoHaNet.Objects.CloudIdentity,System.Boolean)">
            <summary>
            ConoHa only use.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.BuildImpersonationRequestJson(System.String,System.Int32)">
            <summary>
            Constructs the JSON representation used for an impersonation request.
            </summary>
            <param name="userName">The username of the user to impersonate.</param>
            <param name="expirationInSeconds">The time until the impersonation token will expire.</param>
            <returns>A <see cref="T:Newtonsoft.Json.Linq.JObject"/> representing the JSON body of the impersonation request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userName"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="expirationInSeconds"/> is less than or equal to 0.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudIdentityProvider.ListTenantUsers(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of same tenant users
            </summary>
            <param name="tenantId"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:ConoHaNet.Providers.CloudImagesProvider">
            <summary>
            <para>The Cloud Images Provider enable simple access to the ConoHa Cloud Image Services.
            Cloud Images lets you create a virtual machine to be used for a server instance,
            which gives you greater control and security when you deploy web applications.</para>
            <para />
            <para>Documentation URL: http://developer.openstack.org/api-ref-image-v2.html </para>
            </summary>
            <see cref="T:ConoHaNet.Providers.IImagesProvider"/>
            <inheritdoc />
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudImagesProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudImagesProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudImagesProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudImagesProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudImagesProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudImagesProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudImagesProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
             <summary>
            
             </summary>
             <param name="identity"></param>
             <param name="defaultRegion"></param>
             <param name="identityProvider"></param>
             <param name="restService"></param>
             <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Networks requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Networks endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetPublicServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetInternalServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetAdminServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.ListGlanceImages(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetGlanceImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.DeleteGlanceImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.CreateGlanceImageMember(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.ListGlanceImageMembers(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetGlanceImageMember(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.UpdateGlanceImageMember(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.DeleteGlanceImageMember(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.SetImageQuota(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets Image Quota
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetImageAmount(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets Image Amount
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.ListCommonlyUsedImages(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of image which are used often
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.SetWebShare(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets Web Share
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.ImportImage(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Imports Image
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.ListCloudImageTasks(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of image task
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudImagesProvider.GetCloudImageTask(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets an image task
            </summary>
        </member>
        <member name="T:ConoHaNet.Providers.ICloudMailServiceProvider">
            <summary>
            Represents a provider for the OpenStack Networking service.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetMailServiceVersion">
            <summary>
            Gets the version data of this provider
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetMailServiceVersionDetails">
            <summary>
            Gets the detail of service provider
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.CreateMailService(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a mail service, which is a container of mail address
            </summary>
            <param name="serviceName"></param>
            <param name="defaultSubdomain"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.ListMailServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a collection of mail service
            </summary>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetMailService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the mail service with service id
            </summary>
            <param name="serviceId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.UpdateMailService(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the mail service
            </summary>
            <param name="serviceId"></param>
            <param name="serviceName"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.SetMailServiceBackup(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Toggles mail service activity
            </summary>
            <param name="serviceId"></param>
            <param name="enabled"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.DeleteMailService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the mail service
            </summary>
            <param name="serviceId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-mail-service.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetMailBoxQuota(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets mail box quota available
            </summary>
            <param name="serviceId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-email-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.UpdateMailBoxQuota(System.String,System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates mail box quota
            </summary>
            <param name="serviceId"></param>
            <param name="quota"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-quotas.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.CreateMailDomain(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a mail domain
            </summary>
            <param name="serviceId"></param>
            <param name="domainName"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.ListMailDomains(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a collection of mail domains using
            </summary>
            <param name="serviceId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-domains.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.DeleteMailDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the mail domain with domain id
            </summary>
            <param name="domainId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetMailDomainDedicatedIp(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Get a dedicated ip for the mail domain
            </summary>
            <param name="domainId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-dedicated-ip.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.SetMailDomainDedicatedIpStatus(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Update the statusof thededicated ip for email 
            </summary>
            <param name="domainId"></param>
            <param name="enabled"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-dedicated-ip.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.CreateEmailAddress(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates an email address
            </summary>
            <param name="serviceId"></param>
            <param name="emailAddress"></param>
            <param name="password"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.ListEmailAddresses(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a collection of email addresses
            </summary>
            <param name="domainId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-domain.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetEmailAddress(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the email address with email id
            </summary>
            <param name="emailId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-email.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.DeleteEmailAddress(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the email address with email id
            </summary>
            <param name="emailId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.ChangeEmailAddressPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates email address password
            </summary>
            <param name="emailId"></param>
            <param name="password"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-password.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.SetEmailSpamFilter(System.String,System.Boolean,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Toggles email spam filter activity
            </summary>
            <param name="emailId"></param>
            <param name="enabled"></param>
            <param name="type"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email-spam-filter.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.SetEmailVirusCheck(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the activity of virus check for emails
            </summary>
            <param name="emailId"></param>
            <param name="enabled"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.SetEmailForwardingCopy(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Toggle the value which indicates whether the copy would be remained or not
            </summary>
            <param name="emailId"></param>
            <param name="enabled"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.ListMailMessageHeaders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of email message's header
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-messages.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetMailMessage(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the email message with email id and message id
            </summary>
            <param name="emailId"></param>
            <param name="messageId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-messages.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetMailAttachment(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the attachment of email by email id, message id and attachment id
            </summary>
            <param name="emailId"></param>
            <param name="messageId"></param>
            <param name="attachmemntId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-messages-attachments.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.DeleteMailMessage(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the email message with message id
            </summary>
            <param name="emailId"></param>
            <param name="messageId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-messages.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.CreateEmailWebHook(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a email web hook
            </summary>
            <param name="emailId"></param>
            <param name="webhookUrl"></param>
            <param name="keyword"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email-webhook.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetEmailWebHook(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the email web hook with email id
            </summary>
            <param name="emailId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-filter.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.UpdateEmailWebHook(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates email web hook
            </summary>
            <param name="emailId"></param>
            <param name="webhookFilter"></param>
            <param name="keyword"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-filter.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.DeleteEmailWebHook(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the email web hook
            </summary>
            <param name="emailId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email-filter.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetEmailWhiteList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of email white addresses
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-whitelist.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.UpdateWhiteList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[],System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the list of email whilte addresses
            </summary>
            <param name="emailId"></param>
            <param name="targets"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-whitelist.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetEmailBlackList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of email black addresses
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-blacklist.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.UpdateBlackList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[],System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the list of email black addresses
            </summary>
            <param name="emailId"></param>
            <param name="targets"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-blacklist.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.CreateEmailForwarding(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates email forwarding setting
            </summary>
            <param name="emailId"></param>
            <param name="toForwardAddress"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-create-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.ListEmailForwardings(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of email forwarding
            </summary>
            <param name="emailId"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="sortKey"></param>
            <param name="sortType"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-list-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.GetEmailForwarding(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the email forward setting with forwarding id
            </summary>
            <param name="forwardingId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-get-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.UpdateEmailForwarding(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the email forward setting
            </summary>
            <param name="forwardingId"></param>
            <param name="toForwardAddress"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-update-email-filter.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.DeleteEmailForwarding(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the email forwarding setting with forwarding id
            </summary>
            <param name="forwardingId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/paas-mail-delete-email-forwarding.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.ICloudMailServiceProvider.SetMailServiceStatus(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the email service activity status 
            </summary>
            <param name="serviceId"></param>
            <param name="enabled"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:ConoHaNet.Providers.CloudMailServiceProvider">
            <summary>
            <para>The Cloud Networks Provider enable simple access to the ConoHa Cloud Network Services.
            Cloud Networks lets you create a virtual Layer 2 network, known as an isolated network,
            which gives you greater control and security when you deploy web applications.</para>
            <para />
            <para>Documentation URL: https://www.google.co.jp/search?q=openstack+</para>
            </summary>
            <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/>
            <inheritdoc />
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudMailServiceProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
             <summary>
            
             </summary>
             <param name="identity"></param>
             <param name="defaultRegion"></param>
             <param name="identityProvider"></param>
             <param name="restService"></param>
             <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Networks requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Networks endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetMailServiceVersion">
            <summary>
            not implemented
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetMailServiceVersionDetails">
            <summary>
            not implemented
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.CreateMailService(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.ListMailServices(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetMailService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.UpdateMailService(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.SetMailServiceBackup(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.DeleteMailService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetMailBoxQuota(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.UpdateMailBoxQuota(System.String,System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.CreateMailDomain(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.ListMailDomains(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.DeleteMailDomain(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetMailDomainDedicatedIp(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.SetMailDomainDedicatedIpStatus(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.CreateEmailAddress(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.ListEmailAddresses(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetEmailAddress(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.DeleteEmailAddress(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.ChangeEmailAddressPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.SetEmailSpamFilter(System.String,System.Boolean,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.SetEmailVirusCheck(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.SetEmailForwardingCopy(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.ListMailMessageHeaders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetMailMessage(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetMailAttachment(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.DeleteMailMessage(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.CreateEmailWebHook(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetEmailWebHook(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.UpdateEmailWebHook(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.DeleteEmailWebHook(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetEmailWhiteList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.UpdateWhiteList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[],System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetEmailBlackList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.UpdateBlackList(System.String,ConoHaNet.Objects.Mails.EmailFilterDetails[],System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.CreateEmailForwarding(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.ListEmailForwardings(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.GetEmailForwarding(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.UpdateEmailForwarding(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.DeleteEmailForwarding(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudMailServiceProvider.SetMailServiceStatus(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Providers.IAccountServiceProvider">
            <summary>
            Represents a provider for the OpenStack Account(Billing) service.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.ListOrderItems(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a collection of order itmes
            </summary>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-order-item-list.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.GetOrderItem(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets an order itedm
            </summary>
            <param name="itemid"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-order-item-detail-specified.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.ListProducts(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of product
            </summary>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-products.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.ListPaymentHistory(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of payment history
            </summary>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-payment-histories.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.GetPaymentSummary(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the information of payment summary
            </summary>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-payment-summary.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.ListBillingInvoices(System.Int32,System.Int32,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of billing invoice
            </summary>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-billing-invoices-list.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.GetBillingInvoice(System.Int32,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the billing invoice with invoice id
            </summary>
            <param name="invoiceId"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-billing-invoices-detail-specified.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.ListNotifications(System.String,System.Int32,System.Int32,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of notification
            </summary>
            <param name="lang"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-informations-list.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.GetNotification(System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the notification with id
            </summary>
            <param name="notificationCode"></param>
            <param name="lang"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-informations-detail-specified.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IAccountServiceProvider.SetNotification(System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the notification status
            </summary>
            <param name="notificationCode"></param>
            <param name="status"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-informations-marking.html"/>
        </member>
        <member name="T:ConoHaNet.Providers.CloudAccountServiceProvider">
            <summary>
            <para>The Cloud Servers Provider enables simple access go the ConoHa next generation Cloud Servers powered by OpenStack.
            The next generation service is a fast, reliable, and scalable cloud compute solution without the risk of proprietary lock-in.
            It provides the core features of the OpenStack Compute API v2 and also deploys certain extensions as permitted by the OpenStack Compute API contract.
            Some of these extensions are generally available through OpenStack while others implement ConoHa-specific features
            to meet customers�f expectations and for operational compatibility. The OpenStack Compute API and the ConoHa extensions are
            known collectively as API v2.</para>
            <para />
            <para>Documentation URL: https://www.google.co.jp/search?q=openstack+</para>
            </summary>
            <see cref="T:ConoHaNet.Providers.IComputeProvider"/>
            <inheritdoc />
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.ListOrderItems(ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.GetOrderItem(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
            /v1/{tenant_id}/order-items/{item_id}
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.ListProducts(ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
            /v1/{tenant_id}/order-items/{item_id}
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.ListPaymentHistory(ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
            /v1/{tenant_id}/order-items/{item_id}
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.GetPaymentSummary(ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
            /v1/{tenant_id}/order-items/{item_id}
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.ListBillingInvoices(System.Int32,System.Int32,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.GetBillingInvoice(System.Int32,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.ListNotifications(System.String,System.Int32,System.Int32,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.GetNotification(System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.SetNotification(System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.ExecuteServerAction``1(System.String,System.Object,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Execute a Cloud Servers action which returns a strongly-typed value in the body of the response.
            </summary>
            <remarks>
            This method executes actions using a <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.POST"/> request to the URI
            <strong>servers/{serverId}/action</strong>.
            </remarks>
            <typeparam name="T">The type modeling the JSON representation of the result of executing the action.</typeparam>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>.</param>
            <param name="body">The body of the action.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>The result of the web request, as an object of type <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="body"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.ExecuteServerAction(System.String,System.Object,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Execute a Cloud Servers action which does not return a response.
            </summary>
            <remarks>
            This method executes actions using a <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.POST"/> request to the URI
            <strong>servers/{serverId}/action</strong>.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>.</param>
            <param name="body">The body of the action.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.POST"/> request is executed successfully; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="body"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudAccountServiceProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Servers requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Servers endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="T:ConoHaNet.Providers.CloudNetworksProvider">
            <summary>
            <para>The Cloud Networks Provider enable simple access to the ConoHa Cloud Network Services.
            Cloud Networks lets you create a virtual Layer 2 network, known as an isolated network,
            which gives you greater control and security when you deploy web applications.</para>
            <para />
            <para>Documentation URL: https://www.google.co.jp/search?q=openstack+</para>
            </summary>
            <see cref="T:ConoHaNet.Providers.INetworksProvider"/>
            <inheritdoc />
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudFilesProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudNetworksProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudNetworksProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudNetworksProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudNetworksProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudNetworksProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudNetworksProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudNetworksProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:net.openstack.Core.Domain.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <param name="defaultRegion"></param>
            <param name="identityProvider"></param>
            <param name="restService"></param>
            <param name="isAdminMode"></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Networks requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Networks endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetAdminServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            not used
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetInternalServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            not used
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListNetworks(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            not used.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ShowNetwork(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            not used.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreateNetwork(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            not used.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteNetwork(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            not used.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListNuetronNetworks(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreateNuetronNetwork(System.String,System.Boolean,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteNuetronNetwork(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetNuetronNetwork(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListPorts(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetPort(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreatePort(System.String,ConoHaNet.Objects.Networks.FixedIp[],System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String[],System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.UpdatePort(System.String,System.Nullable{System.Boolean},System.String[],ConoHaNet.Objects.Networks.FixedIp[],ConoHaNet.Objects.Networks.AllowedAddressPair[],System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeletePort(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListSubnets(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetSubnet(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreateSubnet(System.String,System.String,System.Int32,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.UpdateSubnet(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteSubnet(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListVIPs(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetVIP(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreateVIP(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.UpdateVip(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteVIP(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListPools(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetPool(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreatePool(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.UpdatePool(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeletePool(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListHealthMonitors(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetHealthMonitor(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreateHealthMonitor(System.String,System.Int32,System.Int32,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.UpdateHealthMonitor(System.String,System.Int32,System.Int32,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteHealthMonitor(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.AssociateHealthMonitor(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DisassociateHealthMonitor(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListLBMembers(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetLBMember(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreateLBMember(System.String,System.String,System.String,System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.UpdateLBMember(System.String,System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteLBMember(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListSecurityGroups(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetSecurityGroup(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreatSecurityGroup(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteSecurityGroup(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.ListSecurityGroupRules(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetSecurityGroupRule(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.CreatSecurityGroupRule(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.DeleteSecurityRule(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.AddSubnetForAdditionalIp(System.Int32,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.AddSubnetForLb(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.GetPortBlocks(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudNetworksProvider.SetPortBlocks(System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="T:ConoHaNet.Providers.IComputeProvider">
            <summary>
            Represents a provider for the OpenStack Compute service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/">OpenStack Compute API v2 and Extensions Reference</seealso>
            <summary>
            Represents a provider for the OpenStack Compute service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/">OpenStack Compute API v2 and Extensions Reference</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListBackupServices(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of vm instance backup service
            </summary>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-get_backup_list.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetBackupService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the vm backup service with backup id
            </summary>
            <param name="backupId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-get_backup_list_detailed.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.AddBackupService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Create a backup vm service
            </summary>
            <param name="InstanceId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-start_backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.DeleteBackupService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the vm backup service
            </summary>
            <param name="backupId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-end_backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.RestoreFromBackupRun(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Restores the VM instance with backup
            </summary>
            <param name="backupId"></param>
            <param name="backupRunId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/backup-restore_backup.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.CreateImageFromBackupRun(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this might not be supported
            </summary>
            <param name="backupId"></param>
            <param name="backupRunId"></param>
            <param name="imageName"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.StopBackup(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Inactivates auto backup service
            </summary>
            <param name="backupId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ResumeBackup(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Resumes auto backup service
            </summary>
            <param name="backupId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ChangeStorageController(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Changes storage controller with bus name
            </summary>
            <param name="serverId"></param>
            <param name="hwDiskBus"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-hw_disk_bus.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ChangeNetworkAdapter(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Changes the network adapter with model string
            </summary>
            <param name="serverId"></param>
            <param name="hwVifModel"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-hw_vif_model.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ChangeVideoDevice(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Chages the video device with model string
            </summary>
            <param name="serverId"></param>
            <param name="hwVideoModel"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-hw_video_model.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ChangeVncKeymap(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Changes Vnc key map
            </summary>
            <param name="serverId"></param>
            <param name="vncKeymap"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-vnc_key_map.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetCPUGraph(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets CPU graph data
            </summary>
            <param name="serverId"></param>
            <param name="startDateRaw"></param>
            <param name="endDateRaw"></param>
            <param name="mode"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_cpu_utilization_graph.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetDiskIOGraph(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets disk graph data
            </summary>
            <param name="serverId"></param>
            <param name="deviceName"></param>
            <param name="startDateRaw"></param>
            <param name="endDateRaw"></param>
            <param name="mode"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_disk_io_graph.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetNetworkGraph(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets network graph data
            </summary>
            <param name="serverId"></param>
            <param name="portId"></param>
            <param name="startDateRaw"></param>
            <param name="endDateRaw"></param>
            <param name="mode"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_server_addresses_by_network.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetSwiftRequestGraph(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the number how much swift requests occured
            </summary>
            <param name="startDateRaw"></param>
            <param name="endDateRaw"></param>
            <param name="mode"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-get_objectstorage_request_rrd.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetSwiftSizeGraph(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets data of the swift network traffic amount occurred
            </summary>
            <param name="startDateRaw"></param>
            <param name="endDateRaw"></param>
            <param name="mode"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/account-get_objectstorage_size_rrd.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.CreateGlanceImageFromInstance(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            
            </summary>
            <param name="serverId"></param>
            <param name="imageName"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForVMState(System.String,ConoHaNet.Objects.Servers.VirtualMachineState,ConoHaNet.Objects.Servers.VirtualMachineState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
             Waits until vm's status is the specific value
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForVMState(System.String,ConoHaNet.Objects.Servers.VirtualMachineState[],ConoHaNet.Objects.Servers.VirtualMachineState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits until vm's status is the specific value
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.RebuildServer(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Rebuilds the vm instance
            </summary>
            <param name="serverId"></param>
            <param name="imageRef"></param>
            <param name="adminPassword"></param>
            <param name="keyName"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListServers(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Returns a list of basic information for servers in the account.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is specified, servers which have been
            deleted since the specified time are returned by this method. Otherwise, deleted servers
            are not included in the list of servers returned by this method.
            </remarks>
            <param name="imageId">The image to filter the returned servers list. If
            the value is <see langword="null"/>, servers for all images are returned. This is
            specified as an image ID (see <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavorId">The flavor to filter the returned servers list. If
            the value is <see langword="null"/>, servers for all flavors are returned. This
            is specified as a flavor ID (see <see cref="P:ConoHaNet.Objects.Flavor.Id"/>) or a full URL.</param>
            <param name="name">Filters the list to those with a name that matches.
            If the value is <see langword="null"/>, servers are not filtered by name.</param>
            <param name="status">Filters the list to those with a status that matches.
            If the value is <see langword="null"/>, servers are not filtered by status. See
            <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> for the allowed values.</param>
            <param name="markerId">The <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="changesSince">Filters the list to those that have changed since the given date.
            If the value is <see langword="null"/>, servers are not filtered by timestamp.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.SimpleServer"/> objects describing the requested servers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Servers-d1e2078.html">List Servers (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListServersWithDetails(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Returns a list of detailed information servers for servers in the account.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is specified, servers which have been
            deleted since the specified time are returned by this method. Otherwise, deleted servers
            are not included in the list of servers returned by this method.
            </remarks>
            <param name="imageId">The image to filter the returned servers list. If
            the value is <see langword="null"/>, servers for all images are returned. This is
            specified as an image ID (see <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/>) or a full URL.</param>
            <param name="flavorId">The flavor to filter the returned servers list. If
            the value is <see langword="null"/>, servers for all flavors are returned. This
            is specified as a flavor ID (see <see cref="P:ConoHaNet.Objects.Flavor.Id"/>) or a full URL.</param>
            <param name="name">Filters the list to those with a name that matches.
            If the value is <see langword="null"/>, servers are not filtered by name.</param>
            <param name="status">Filters the list to those with a status that matches.
            If the value is <see langword="null"/>, servers are not filtered by status. See
            <see cref="T:ConoHaNet.Objects.Servers.ServerState"/> for the allowed values.</param>
            <param name="markerId">The <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="changesSince">Filters the list to those that have changed since the given date.
            If the value is <see langword="null"/>, servers are not filtered by timestamp.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.Server"/> objects describing the requested servers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Servers-d1e2078.html">List Servers (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.CreateServer(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],ConoHaNet.Objects.Servers.DiskConfiguration,ConoHaNet.Objects.Metadata,ConoHaNet.Objects.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Creates a new server.
             </summary>
             <remarks>
             This operation asynchronously provisions a new server. The progress of this operation depends on
             several factors including location of the requested image, network i/o, host load, and the selected
             flavor. The progress of the request can be checked by calling <see cref="M:ConoHaNet.Providers.IComputeProvider.GetDetails(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/> and getting
             the value of <see cref="P:ConoHaNet.Objects.Servers.Server.Status"/> and <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/>.
            
             <note type="caller">
             This is the only time the server's admin password is returned. Make sure to retain the value.
             </note>
            
             <note>
             The <paramref name="diskConfig"/> parameter is ignored if the provider does not support the
             <see href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/ch_extensions.html#diskconfig_attribute"><newTerm>disk configuration extension</newTerm></see>.
             </note>
             </remarks>
             <param name="cloudServerName">Name of the cloud server.</param>
             <param name="imageName">The image to use for the new server instance. This is
             specified as an image ID (see <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/>) or a full URL.</param>
             <param name="flavor">The flavor to use for the new server instance. This
             is specified as a flavor ID (see <see cref="P:ConoHaNet.Objects.Flavor.Id"/>) or a full URL.</param>
             <param name="diskConfig">The disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.</param>
             <param name="metadata">The metadata to associate with the server.</param>
             <param name="personality">A collection of <see cref="T:ConoHaNet.Objects.Personality"/> objects describing the paths and contents of files to inject in the target file system during the creation process. If the value is <see langword="null"/>, no files are injected.</param>
             <param name="attachToServiceNetwork"><see langword="true"/> if the private network will be attached to the newly created server; otherwise, <see langword="false"/>.</param>
             <param name="attachToPublicNetwork"><see langword="true"/> if the public network will be attached to the newly created server; otherwise, <see langword="false"/>.</param>
             <param name="networks">A collection of IDs of networks to attach to the server. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A <see cref="T:ConoHaNet.Objects.Servers.NewServer"/> instance containing the details for the newly created server.</returns>
             <exception cref="T:System.ArgumentNullException">
             <paramref name="cloudServerName"/> is <see langword="null"/>.
             <para>-or-</para>
             <para><paramref name="imageName"/> is <see langword="null"/>.</para>
             <para>-or-</para>
             <para><paramref name="flavor"/> is <see langword="null"/>.</para>
             <param name="adminPass">The new administrator password.</param>
             <param name="keyname"></param>
             <param name="securityGroupNames"></param>
             <param name="attachVolumeIds"></param>
             <returns><see langword="true"/> if the administrator password change operation was successfully started; otherwise, <see langword="false"/>.</returns>
             </exception>
             <exception cref="T:System.ArgumentException">
             <paramref name="cloudServerName"/> is empty.
             <para>-or-</para>
             <para><paramref name="imageName"/> is empty.</para>
             <para>-or-</para>
             <para><paramref name="flavor"/> is empty.</para>
             <para>-or-</para>
             <para><paramref name="metadata"/> contains a value with a null or empty key.</para>
             <para>-or-</para>
             <para><paramref name="networks"/> contains a null or empty value.</para>
             </exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="diskConfig"/>.
             <para>-or-</para>
             <para>If the provider does not support the given <paramref name="identity"/> type.</para>
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/CreateServers.html">Create Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetDetails(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the detailed information for a specific server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.Server"/> object containing the details for the given server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Server_Details-d1e2623.html">Get Server Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.UpdateServer(System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the editable attributes for the specified server.
            </summary>
            <remarks>
            Server names are not guaranteed to be unique.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="name">The new name for the server. If the value is <see langword="null"/>, the server name is not changed.</param>
            <param name="accessIPv4">The new IP v4 address for the server, or <see cref="F:System.Net.IPAddress.None"/> to remove the configured IP v4 address for the server. If the value is <see langword="null"/>, the server's IP v4 address is not updated.</param>
            <param name="accessIPv6">The new IP v6 address for the server, or <see cref="F:System.Net.IPAddress.None"/> to remove the configured IP v6 address for the server. If the value is <see langword="null"/>, the server's IP v6 address is not updated.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the server was successfully updated; otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="accessIPv4"/> is not <see cref="F:System.Net.IPAddress.None"/> and the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv4"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="accessIPv6"/> is not <see cref="F:System.Net.IPAddress.None"/> and the <see cref="T:System.Net.Sockets.AddressFamily"/> of <paramref name="accessIPv6"/> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/ServerUpdate.html">Update Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.DeleteServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Marks a server for asynchronous deletion.
            </summary>
            <remarks>
            The server deletion operation is completed asynchronously. The <see cref="M:ConoHaNet.Providers.IComputeProvider.WaitForServerDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
            method may be used to block execution until the server is finally deleted.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the server was successfully marked for deletion; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Server-d1e2883.html">Delete Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListAddresses(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists all networks and server addresses associated with a specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerAddresses"/> object containing the list of network addresses for the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses-d1e3014.html">List Addresses (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListAddressesByNetwork(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists addresses associated with a specified server and network.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="network">The network label. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Label">CloudNetwork.Label</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:System.Net.IPAddress"/> containing the network addresses associated with the server on the specified network.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="network"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="network"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Addresses_by_Network-d1e3118.html">List Addresses by Network (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ChangeAdministratorPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Changes the administrator password for a specified server.
            </summary>
            <remarks>
            The password change operation is performed asynchronously. If the password does not
            meet the server's complexity requirements, the server may end up in an <see cref="P:ConoHaNet.Objects.Servers.ServerState.Error"/>
            state. In this case, the client may call <see cref="M:ConoHaNet.Providers.IComputeProvider.ChangeAdministratorPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/> again to
            select a new password.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="password">The new administrator password.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the administrator password change operation was successfully started; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Change_Password-d1e3234.html">Change Administrator Password (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.RebootServer(System.String,ConoHaNet.Objects.RebootType,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initiates an asynchronous reboot operation on the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="rebootType">The type of reboot to perform. See <see cref="T:ConoHaNet.Objects.RebootType"/> for predefined values.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the reboot operation was successfully initiated; otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="rebootType"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the specified <paramref name="rebootType"/>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Reboot_Server-d1e3371.html">Reboot Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ResizeServer(System.String,System.String,ConoHaNet.Objects.Servers.DiskConfiguration,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initiates an asynchronous resize of the specified server. A server resize is performed by
            specifying a new <see cref="T:ConoHaNet.Objects.Flavor"/> for the server.
            </summary>
            <remarks>
            Following a resize operation, the original server is not immediately removed. After testing
            if the resulting server is operating successfully, a call should be made to <see cref="M:ConoHaNet.Providers.IComputeProvider.ConfirmServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            to keep the resized server, or to <see cref="M:ConoHaNet.Providers.IComputeProvider.RevertServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/> to revert to the original server.
            If 24 hours pass and neither of these methods is called, the server will be automatically confirmed.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="flavor">The new flavor. This is obtained from <see cref="P:ConoHaNet.Objects.Flavor.Id">Flavor.Id</see>.</param>
            <param name="diskConfig">The disk configuration. If the value is <see langword="null"/>, the default configuration for the specified image is used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the resize operation is successfully started; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="flavor"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="diskConfig"/>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Resize_Server-d1e3707.html">Resize Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ConfirmServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Confirms a completed asynchronous server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the resize operation was confirmed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Confirm_Resized_Server-d1e3868.html">Confirm Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.RevertServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Cancels and reverts a server resize action.
            </summary>
            <remarks>
            If a server resize operation is not manually confirmed or reverted within 24 hours,
            the operation is automatically confirmed.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the resize operation was reverted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Revert_Resized_Server-d1e4024.html">Revert Resized Server (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.RescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Places a server in rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to enter rescue mode,
             call <see cref="O:net.openstack.Core.Providers.IComputeProvider.WaitForServerState"/> with the state <see cref="P:ConoHaNet.Objects.Servers.ServerState.Rescue"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:ConoHaNet.Providers.IComputeProvider.UnRescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>.
             </note>
             </remarks>
             <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>The root password assigned for use during rescue mode.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/rescue_mode.html">Rescue Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.UnRescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Takes a server out of rescue mode.
             </summary>
             <remarks>
             This operation is completed asynchronously. To wait for the server to exit rescue mode,
             call <see cref="M:ConoHaNet.Providers.IComputeProvider.WaitForServerActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>.
            
             <note>
             The provider may limit the duration of rescue mode, after which the rescue image is destroyed
             and the server attempts to reboot. Rescue mode may be explicitly exited at any time by
             calling <see cref="M:ConoHaNet.Providers.IComputeProvider.UnRescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)"/>.
             </note>
             </remarks>
             <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns><see langword="true"/> if the server exited rescue mode; otherwise, <see langword="false"/>.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/exit_rescue_mode.html">Unrescue Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.CreateImage(System.String,System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a new snapshot image for a specified server at its current state.
            </summary>
            <remarks>
            The server snapshot process is completed asynchronously. To wait for the image
            to be completed, you may call <see cref="M:ConoHaNet.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="imageName">Name of the new image.</param>
            <param name="metadata">The metadata to associate to the new image.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the image creation process was successfully started; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="imageName"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="imageName"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_Image-d1e4655.html">Create Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.AttachServerVolume(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Attaches a volume to the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>.</param>
            <param name="volumeId">The volume ID. This is obtained from <see cref="P:ConoHaNet.Objects.Volume.Id"/>.</param>
            <param name="storageDevice">The name of the device, such as <localUri>/dev/xvdb</localUri>. If the value is <see langword="null"/>, an automatically generated device name will be used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerVolume"/> object containing the details about the volume.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Attach_Volume_to_Server.html">Attach Volume to Server (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListServerVolumes(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists the volume attachments for the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.ServerVolume"/> objects describing the volumes attached to the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/List_Volume_Attachments.html">List Volume Attachments (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetServerVolumeDetails(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets detailed information about the specified server-attached volume.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>.</param>
            <param name="volumeId">The volume attachment ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerVolume.Id">ServerVolume.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerVolume"/> object containing details about the volume attachment.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Get_Volume_Attachment_Details.html">Get Volume Attachment Details (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.DetachServerVolume(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Detaches the specified volume from the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="volumeId">The volume attachment ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerVolume.Id">ServerVolume.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the volume was successfully detached; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="volumeId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/servers/api/v2/cs-devguide/content/Delete_Volume_Attachment.html">Delete Volume Attachment (Rackspace Next Generation Cloud Servers Developer Guide - API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListVirtualInterfaces(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists the virtual interfaces for the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.VirtualInterface"/> objects describing the virtual interfaces for the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/list_virt_interfaces.html">List Virtual Interfaces (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.CreateVirtualInterface(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a virtual interface for the specified network and attaches the network to the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="networkId">The network ID. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id">CloudNetwork.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.VirtualInterface"/> object containing the details of the newly-created virtual network.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="networkId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="networkId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/api_create_virtual_interface.html">Create Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.DeleteVirtualInterface(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified virtual interface from the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="virtualInterfaceId">The virtual interface ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.VirtualInterface.Id">VirtualInterface.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the virtual interface was successfully removed from the server; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="virtualInterfaceId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="virtualInterfaceId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/networks/api/v2/cn-devguide/content/delete_virt_interface_api.html">Delete Virtual Interface (Rackspace Cloud Networks Developer Guide - OpenStack Networking API v2)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists basic information for all available flavors.
            </summary>
            <param name="minDiskInGB">Filters the list of flavors to those with the specified minimum number of gigabytes of disk storage. If the value is <see langword="null"/>, the results are not filtered by storage space.</param>
            <param name="minRamInMB">Filters the list of flavors to those with the specified minimum amount of RAM in megabytes. If the value is <see langword="null"/>, the results are not filtered by memory capacity.</param>
            <param name="markerId">The <see cref="P:ConoHaNet.Objects.Flavor.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>.</param>
            <param name="limit">The maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Flavor"/> objects describing the available flavors.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="minDiskInGB"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="minRamInMB"/> is less than 0.</para>
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than 0.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists full details for all available flavors.
            </summary>
            <param name="minDiskInGB">Filters the list of flavors to those with the specified minimum number of gigabytes of disk storage. If the value is <see langword="null"/>, the results are not filtered by storage space.</param>
            <param name="minRamInMB">Filters the list of flavors to those with the specified minimum amount of RAM in megabytes. If the value is <see langword="null"/>, the results are not filtered by memory capacity.</param>
            <param name="markerId">The <see cref="P:ConoHaNet.Objects.Flavor.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>.</param>
            <param name="limit">The maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.FlavorDetails"/> objects containing detailed information for the available flavors.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="minDiskInGB"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="minRamInMB"/> is less than 0.</para>
            <para>-or-</para>
            <para>If <paramref name="limit"/> is less than 0.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Flavors-d1e4188.html">List Flavors (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetFlavor(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets details for the specified flavor.
            </summary>
            <param name="id">The flavor ID. This is obtained from <see cref="P:ConoHaNet.Objects.Flavor.Id">Flavor.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.FlavorDetails"/> object containing details of the flavor.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Flavor_Details-d1e4317.html">Get Flavor Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListImages(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists basic information for all available images.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is not specified, deleted images are
            not returned by this method. If the <paramref name="changesSince"/> parameter is specified,
            the result includes images which were deleted since the specified time.
            </remarks>
            <param name="server">Filters the list of images by server. This is specified as a server ID (see <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>) or a full URL. If the value is <see langword="null"/>, the results are not filtered by ID.</param>
            <param name="imageName">Filters the list of images by image name. If the value is <see langword="null"/>, the results are not filtered by name.</param>
            <param name="imageStatus">Filters the list of images by status. If the value is <see langword="null"/>, the results are not filtered by status.</param>
            <param name="changesSince">Filters the list of images to those that have changed since the specified time. If the value is <see langword="null"/>, the results are not filtered by timestamp.</param>
            <param name="markerId">The <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, the results start at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="imageType">Filters base Rackspace images or any custom server images that you have created. If the value is <see langword="null"/>, the results are not filtered by image type.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.SimpleServerImage"/> objects containing basic information for the images.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListImagesWithDetails(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListImagesWithDetails(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists detailed information for all available images.
            </summary>
            <remarks>
            If the <paramref name="changesSince"/> parameter is not specified, deleted images are
            not returned by this method. If the <paramref name="changesSince"/> parameter is specified,
            the result includes images which were deleted since the specified time.
            </remarks>
            <param name="server">Filters the list of images by server. This is specified as a server ID (see <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>) or a full URL. If the value is <see langword="null"/>, the results are not filtered by ID.</param>
            <param name="imageName">Filters the list of images by image name. If the value is <see langword="null"/>, the results are not filtered by name.</param>
            <param name="imageStatus">Filters the list of images by status. If the value is <see langword="null"/>, the results are not filtered by status.</param>
            <param name="changesSince">Filters the list of images to those that have changed since the specified time. If the value is <see langword="null"/>, the results are not filtered by timestamp.</param>
            <param name="markerId">The <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id"/> of the last item in the previous list. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, the results start at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for <see href="http://docs.openstack.org/api/openstack-compute/2/content/Paginated_Collections-d1e664.html">pagination</see>. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="imageType">Filters base Rackspace images or any custom server images that you have created. If the value is <see langword="null"/>, the results are not filtered by image type.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Servers.ServerImage"/> objects containing detailed information for the images.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="M:ConoHaNet.Providers.IComputeProvider.ListImages(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)"/>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Images-d1e4435.html">List Images (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets detailed information for the specified image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerImage"/> object containing detailed information about the specified image.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Image_Details-d1e4848.html">Get Image Details (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.DeleteImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the image was successfully deleted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Image-d1e4957.html">Delete Image (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListServerMetadata(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the metadata associated with the specified server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Metadata"/> object containing the metadata associated with the server.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serverId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.SetServerMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the metadata associated with the specified server, replacing any existing metadata.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="metadata">The metadata to associate with the server.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.UpdateServerMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the metadata for the specified server.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="metadata">The server metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetServerMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the specified metadata item.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>The metadata value for the associated with the server for the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Metadata_Item-d1e5507.html">Get Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata for the server was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.DeleteServerMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the server.
            </summary>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata item was removed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListImageMetadata(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the metadata associated with the specified image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Metadata"/> object containing the metadata associated with the image.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="imageId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="imageId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/List_Metadata-d1e5089.html">List Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.SetImageMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the metadata associated with the specified image, replacing any existing metadata.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="metadata">The metadata to associate with the image.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Replace_Metadata-d1e5358.html">Set Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.UpdateImageMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the metadata for the specified image.
            </summary>
            <remarks>
            For each item in <paramref name="metadata"/>, if the key exists, the value is updated; otherwise, the item is added.
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="metadata">The image metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains any values with empty keys.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Update_Metadata-d1e5208.html">Update Metadata (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.GetImageMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the specified metadata item.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>The metadata value for the associated with the image for the specified key.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Get_Metadata_Item-d1e5507.html">Get Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the value for the specified metadata item. If the key already exists, it is updated; otherwise, a new metadata item is added.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="value">The new value for the metadata item.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata for the image was successfully updated; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="value"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Create_or_Update_a_Metadata_Item-d1e5633.html">Set Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.DeleteImageMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the image.
            </summary>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="key">The metadata key.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the metadata item was removed; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-compute/2/content/Delete_Metadata_Item-d1e5790.html">Delete Metadata Item (OpenStack Compute API v2 and Extensions Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForServerState(System.String,ConoHaNet.Objects.Servers.ServerState,ConoHaNet.Objects.Servers.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the server to enter a specified state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters either the expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="expectedState">The expected state.</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.Server"/> object containing the server details, including the final <see cref="P:ConoHaNet.Objects.Servers.Server.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:ConoHaNet.Objects.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForServerState(System.String,ConoHaNet.Objects.Servers.ServerState[],ConoHaNet.Objects.Servers.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the server to enter any one of a set of specified states.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters either an expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="expectedStates">The expected state(s).</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the server enters.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.Server"/> object containing the server details, including the final <see cref="P:ConoHaNet.Objects.Servers.Server.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is empty.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:ConoHaNet.Objects.ServerEnteredErrorStateException">If the method returned due to the server entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForServerActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the server to enter the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/> state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Active"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.Server"/> object containing the server details, including the final <see cref="P:ConoHaNet.Objects.Servers.Server.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForServerDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the server to enter the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Deleted"/> state or to be removed.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the server enters the <see cref="P:ConoHaNet.Objects.Servers.ServerState.Deleted"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id">ServerBase.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the server's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the server status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.Server.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="serverId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForImageState(System.String,ConoHaNet.Objects.Servers.ImageState,ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the image to enter a specified state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the image enters either the expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="expectedState">The expected state.</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerImage"/> object containing the image details, including the final <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:ConoHaNet.Objects.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForImageState(System.String,ConoHaNet.Objects.Servers.ImageState[],ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the image to enter any one of a set of specified states.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the image enters either an expected state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="expectedStates">The expected state(s).</param>
            <param name="errorStates">The error state(s) in which to throw an exception if the image enters.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerImage"/> object containing the image details, including the final <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="expectedStates"/> is empty.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:ConoHaNet.Objects.ImageEnteredErrorStateException">If the method returned due to the image entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the image to enter the <see cref="P:ConoHaNet.Objects.Servers.ImageState.Active"/> state.
            </summary>
            <remarks>
            <note type="caller">
            This is a blocking operation and will not return until the image enters either the
            <see cref="P:ConoHaNet.Objects.Servers.ImageState.Active"/> state, an error state, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Servers.ServerImage"/> object containing the image details, including the final <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.WaitForImageDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for the image to enter the <see cref="P:ConoHaNet.Objects.Servers.ImageState.Deleted"/> state or to be removed.
            </summary>
            <remarks>
            <note type="warning">
            This is a blocking operation and will not return until the image enters either the
            <see cref="P:ConoHaNet.Objects.Servers.ImageState.Deleted"/> state, an error state, is removed, or the retry count is exceeded.
            </note>
            </remarks>
            <param name="imageId">The image ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.SimpleServerImage.Id">SimpleServerImage.Id</see>.</param>
            <param name="refreshCount">Number of times to poll the image's status.</param>
            <param name="refreshDelay">The time to wait between polling requests for the image status. If this value is <see langword="null"/>, the default is 2.4 seconds.</param>
            <param name="progressUpdatedCallback">A callback delegate to execute each time the <see cref="P:ConoHaNet.Objects.Servers.ServerImage.Progress"/> value increases. If this value is <see langword="null"/>, progress updates are not reported.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="imageId"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="imageId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IComputeProvider.ListServerIps(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of server ips
            </summary>
            <param name="serverId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/compute-get_server_addresses.html"/>
        </member>
        <member name="T:ConoHaNet.Providers.CloudServersProvider">
            <summary>
            <para>The Cloud Servers Provider enables simple access go the ConoHa next generation Cloud Servers powered by OpenStack.
            The next generation service is a fast, reliable, and scalable cloud compute solution without the risk of proprietary lock-in.
            It provides the core features of the OpenStack Compute API v2 and also deploys certain extensions as permitted by the OpenStack Compute API contract.
            Some of these extensions are generally available through OpenStack while others implement ConoHa-specific features
            to meet customers�f expectations and for operational compatibility. The OpenStack Compute API and the ConoHa extensions are
            known collectively as API v2.</para>
            <para />
            <para>Documentation URL: https://www.google.co.jp/search?q=openstack+</para>
            </summary>
            <see cref="T:ConoHaNet.Providers.IComputeProvider"/>
            <inheritdoc />
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            no default identity or region, and the default identity provider and REST
            service implementation.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity, no default region, and the default identity
            provider and REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            no default identity or region, the default identity provider, and the specified
            REST service implementation.
            </summary>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            no default identity or region, the specified identity provider, and the default
            REST service implementation.
            </summary>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created with no default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity and identity provider, no default region, and
            the default REST service implementation.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="identity"/> as the default identity.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(ConoHaNet.Objects.CloudIdentity,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity and REST service implementation, no default region,
            and the default identity provider.
            </summary>
            <param name="identity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(ConoHaNet.Objects.CloudIdentity,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity, no default region, and the specified identity
            provider and REST service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.CloudServersProvider"/> class with
            the specified default identity, default region, identity provider, and REST
            service implementation.
            </summary>
            <param name="identity">An instance of a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object. <remarks>If not provided, the user will be required to pass a <see cref="T:ConoHaNet.Objects.CloudIdentity"/> object to each method individually.</remarks></param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">An instance of an <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to override the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/></param>
            <param name="restService">An instance of an <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to override the default <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRestServices"/></param>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListServers(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListServersWithDetails(System.String,System.String,System.String,ConoHaNet.Objects.Servers.ServerState,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.CreateServer(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],ConoHaNet.Objects.Servers.DiskConfiguration,ConoHaNet.Objects.Metadata,ConoHaNet.Objects.Personality[],System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetDetails(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.UpdateServer(System.String,System.String,System.Net.IPAddress,System.Net.IPAddress,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.UpdateServerNametag(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForServerState(System.String,ConoHaNet.Objects.Servers.ServerState,ConoHaNet.Objects.Servers.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForServerState(System.String,ConoHaNet.Objects.Servers.ServerState[],ConoHaNet.Objects.Servers.ServerState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForVMState(System.String,ConoHaNet.Objects.Servers.VirtualMachineState,ConoHaNet.Objects.Servers.VirtualMachineState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForVMState(System.String,ConoHaNet.Objects.Servers.VirtualMachineState[],ConoHaNet.Objects.Servers.VirtualMachineState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForServerActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForServerDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListAddresses(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListServerIps(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListAddressesByNetwork(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ChangeAdministratorPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.RebootServer(System.String,ConoHaNet.Objects.RebootType,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.AddSecurityGroup(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.RemoveSecurityGroup(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListSecurityGroup(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListInterfaceAttachments(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetInterfaceAttachment(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.AddInterfaceAttachment(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteInterfaceAttachment(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListKeypair(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetKeypair(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.AddKeypair(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteKeypair(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.StartServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.StopServer(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Stops Server
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.RebuildServer(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ResizeServer(System.String,System.String,ConoHaNet.Objects.Servers.DiskConfiguration,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ConfirmServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.RevertServerResize(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.RescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.UnRescueServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.CreateImage(System.String,System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ExecuteServerAction``1(System.String,System.Object,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Execute a Cloud Servers action which returns a strongly-typed value in the body of the response.
            </summary>
            <remarks>
            This method executes actions using a <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.POST"/> request to the URI
            <strong>servers/{serverId}/action</strong>.
            </remarks>
            <typeparam name="T">The type modeling the JSON representation of the result of executing the action.</typeparam>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>.</param>
            <param name="body">The body of the action.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>The result of the web request, as an object of type <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="body"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ExecuteServerAction(System.String,System.Object,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Execute a Cloud Servers action which does not return a response.
            </summary>
            <remarks>
            This method executes actions using a <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.POST"/> request to the URI
            <strong>servers/{serverId}/action</strong>.
            </remarks>
            <param name="serverId">The server ID. This is obtained from <see cref="P:ConoHaNet.Objects.Servers.ServerBase.Id"/>.</param>
            <param name="body">The body of the action.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the <see cref="F:JSIStudios.SimpleRESTServices.Client.HttpMethod.POST"/> request is executed successfully; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="serverId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="body"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serverId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.AttachServerVolume(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListServerVolumes(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetServerVolumeDetails(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DetachServerVolume(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListVirtualInterfaces(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.CreateVirtualInterface(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteVirtualInterface(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListFlavors(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListFlavorsWithDetails(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetFlavor(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListImages(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListImagesWithDetails(System.String,System.String,ConoHaNet.Objects.Servers.ImageState,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{System.Int32},ConoHaNet.Objects.ImageType,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForImageState(System.String,ConoHaNet.Objects.Servers.ImageState[],ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForImageState(System.String,ConoHaNet.Objects.Servers.ImageState,ConoHaNet.Objects.Servers.ImageState[],System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForImageActive(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.WaitForImageDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.Action{System.Int32},System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListBackupServices(System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetBackupService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.AddBackupService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteBackupService(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.RestoreFromBackupRun(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.CreateImageFromBackupRun(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.StopBackup(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ResumeBackup(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListServerMetadata(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.SetServerMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.UpdateServerMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetServerMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.SetServerMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteServerMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.LockServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.UnlockServer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ListImageMetadata(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.SetImageMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.UpdateImageMetadata(System.String,ConoHaNet.Objects.Metadata,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetImageMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.SetImageMetadataItem(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.DeleteImageMetadataItem(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc />
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ChangeStorageController(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ChangeNetworkAdapter(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ChangeVideoDevice(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.ChangeVncKeymap(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String)">
            <summary>
            Gets the public service endpoint to use for Cloud Servers requests for the specified identity and region.
            </summary>
            <remarks>
            This method uses <c>compute</c> for the service type, and <c>cloudServersOpenStack</c> for the preferred service name.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The public URL for the requested Cloud Servers endpoint.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.toUnixTime(System.DateTime)">
            <summary>
            change time to unix time
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetCPUGraph(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetDiskIOGraph(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetNetworkGraph(System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetSwiftRequestGraph(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetSwiftSizeGraph(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetVncConsole(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets Vnc Console Url
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetNovaConsole(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets Nova Console Url
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetHttpConsole(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets http console
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.GetConsole(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a console
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.CloudServersProvider.CreateGlanceImageFromInstance(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Providers.EncodeDecodeProvider">
            <summary>
            Provides a default implementation of <see cref="T:ConoHaNet.Objects.IEncodeDecodeProvider"/> for
            use with ConoHa services. This implementation encodes text using
            <see cref="T:net.openstack.Core.UriUtility"/> with <see cref="F:net.openstack.Core.UriPart.AnyUrl"/>,
            and decodes text with <see cref="M:net.openstack.Core.UriUtility.UriDecode(System.String)"/>.
            </summary>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Providers.EncodeDecodeProvider._default">
            <summary>
            A default instance of <see cref="T:ConoHaNet.Providers.EncodeDecodeProvider"/>.
            </summary>
        </member>
        <member name="P:ConoHaNet.Providers.EncodeDecodeProvider.Default">
            <summary>
            Gets a default instance of <see cref="T:ConoHaNet.Providers.EncodeDecodeProvider"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.EncodeDecodeProvider.UrlEncode(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ConoHaNet.Providers.EncodeDecodeProvider.UrlDecode(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Providers.IBlockStorageProvider">
            <summary>
            Represents a provider for the OpenStack Block Storage Service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/">OpenStack Block Storage Service API v2 Reference</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.CreateVolume(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a new block storage volume.
            </summary>
            <param name="size">The size of the volume in GB.</param>
            <param name="sourceVolumeId">The original volume id</param>
            <param name="Description">A description of the volume.</param>
            <param name="Name">The name of the volume.</param>
            <param name="snapshotId">The snapshot from which to create a volume. The value should be <see langword="null"/> or obtained from <see cref="P:ConoHaNet.Objects.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="volumeType">The type of volume to create. If not defined, then the default is used. The value should be <see langword="null"/> or obtained from <see cref="P:ConoHaNet.Objects.VolumeType.Id">VolumeType.Id</see>.</param>
            <param name="imageRef"></param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the request succeeded; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="size"/> is less than zero.</exception>
            <exception cref="T:net.openstack.Providers.Rackspace.Exceptions.InvalidVolumeSizeException">If <paramref name="size"/> is not valid for this provider.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If the specified <paramref name="volumeType"/> is not supported.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Volume.html">Create Volume (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.ListVolumes(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a list of volumes.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Volume"/> objects describing the volumes.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Summary_Volumes.html">List Volume Summaries (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.ShowVolume(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            View information about a single volume.
            </summary>
            <param name="volumeId">The ID of the volume. The value should be obtained from <see cref="P:ConoHaNet.Objects.Volume.Id">Volume.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Volume"/> object containing the volume details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Volume.html">Show Volume (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.DeleteVolume(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Deletes a volume.
             </summary>
             <remarks>
             The deletion operation is performed asynchronously. After this call returns,
             <see cref="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)"/> may be called to wait until the volume
             is finally deleted.
            
             <note type="note">
             It is not currently possible to delete a volume once you have created a snapshot from it. Any snapshots will need to be deleted prior to deleting the volume.
             </note>
             </remarks>
             <param name="volumeId">The ID of the volume to delete. The value should be obtained from <see cref="P:ConoHaNet.Objects.Volume.Id">Volume.Id</see>.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns><see langword="true"/> if the volume was successfully deleted; otherwise <see langword="false"/>.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Delete_Volume.html">Delete Volume (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.ListVolumeTypes(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Get a list of volume types.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.VolumeType"/> objects containing the details of each volume type.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_List_Types.html">List Volume Types (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.DescribeVolumeType(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Get information about a volume type.
            </summary>
            <param name="volumeTypeId">The ID of the volume type. The value should be obtained from <see cref="P:ConoHaNet.Objects.VolumeType.Id">VolumeType.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.VolumeType"/> object containing the details of the volume type.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volume_Show_Type.html">Show Volume Type (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForVolumeAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for a volume to be set to <see cref="P:ConoHaNet.Objects.BlockStorage.VolumeState.Available"/> status.
            </summary>
            <remarks>
            This method can be used to ensure that a volume is correctly created prior to executing additional requests against it.
            </remarks>
            <param name="volumeId">The ID of the volume to poll. The value should be obtained from <see cref="P:ConoHaNet.Objects.Volume.Id">Volume.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the volume to become available.</param>
            <param name="refreshDelay">The refresh delay. If the value is <see langword="null"/>, the default value is 2.4 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Volume"/> object containing the details of the volume, including the final <see cref="P:ConoHaNet.Objects.Volume.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForVolumeDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for a volume to be deleted.
            </summary>
            <remarks>
            This method can be used to ensure that a volume is completely removed.
            </remarks>
            <param name="volumeId">The ID of the volume to poll. The value should be obtained from <see cref="P:ConoHaNet.Objects.Volume.Id">Volume.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the volume to be deleted.</param>
            <param name="refreshDelay">The refresh delay. If the value is <see langword="null"/>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the volume was successfully deleted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForVolumeState(System.String,ConoHaNet.Objects.BlockStorage.VolumeState,ConoHaNet.Objects.BlockStorage.VolumeState[],System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for a volume to be set to be set to a particular <see cref="T:ConoHaNet.Objects.BlockStorage.VolumeState"/>.
            </summary>
            <remarks>
            This method can be used to ensure that a volume is in an intended state prior to
            executing additional requests against it.
            </remarks>
            <param name="volumeId">The ID of the volume to poll. The value should be obtained from <see cref="P:ConoHaNet.Objects.Volume.Id">Volume.Id</see>.</param>
            <param name="expectedState">The expected state for the volume.</param>
            <param name="errorStates">The error state(s) in which to stop polling once reached.</param>
            <param name="refreshCount">The number of times to poll the volume.</param>
            <param name="refreshDelay">The refresh delay. If the value is <see langword="null"/>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Volume"/> object containing the details of the volume, including the final <see cref="P:ConoHaNet.Objects.Volume.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="volumeId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="volumeId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.VolumeEnteredErrorStateException">If the method returned due to the volume entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/cbs/api/v1.0/cbs-devguide/content/volume_status.html">Volume Status (Rackspace Cloud Block Storage Developer Guide - API V1.0)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.CreateSnapshot(System.String,System.Boolean,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Creates a new snapshot.
             </summary>
             <remarks>
             The snapshot operation is performed asynchronously. After this call returns,
             <see cref="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForSnapshotAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)"/> may be called to wait until the snapshot
             process is complete and the snapshot is available.
            
             <para>Creating a snapshot makes a point-in-time copy of the volume.
             All writes to the volume should be flushed before creating the snapshot, either by un-mounting any file systems on the volume, or by detaching the volume before creating the snapshot.
             Snapshots are incremental, so each time you create a new snapshot, you are appending the incremental changes for the new snapshot to the previous one.
             The previous snapshot is still available. Note that you can create a new volume from the snapshot if desired.</para>
             </remarks>
             <param name="volumeId">The ID of the volume to snapshot. The value should be obtained from <see cref="P:ConoHaNet.Objects.Volume.Id">Volume.Id</see>.</param>
             <param name="force">If <see langword="true"/>, the snapshot is created even if the volume is currently attached.</param>
             <param name="displayName">Name of the snapshot.</param>
             <param name="displayDescription">Description of snapshot.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A <see cref="T:ConoHaNet.Objects.Snapshot"/> object containing the details about the snapshot.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="volumeId"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="volumeId"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Create_Snapshot.html">Create Snapshot (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.ListSnapshots(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Get a list of snapshots.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Snapshot"/> objects containing the details of each snapshot.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/List_Snapshots.html">List Snapshot Summaries (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.ShowSnapshot(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            View all information about a single snapshot.
            </summary>
            <param name="snapshotId">The ID of the snapshot. The value should be obtained from <see cref="P:ConoHaNet.Objects.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Snapshot"/> object containing the snapshot details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Show_Snapshot.html">Show Snapshot (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.DeleteSnapshot(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Marks a snapshot for deletion.
            </summary>
            <remarks>
            The deletion operation is performed asynchronously. After this call returns,
            <see cref="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForSnapshotDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)"/> may be called to wait until the snapshot
            is finally deleted.
            </remarks>
            <param name="snapshotId">The ID of the snapshot. The value should be obtained from <see cref="P:ConoHaNet.Objects.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the snapshot was successfully marked for deletion; otherwise <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Delete_Snapshot.html">Delete Snapshot (OpenStack Block Storage Service API Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForSnapshotAvailable(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for a snapshot to be set to <see cref="P:ConoHaNet.Objects.SnapshotState.Available"/> status.
            </summary>
            <remarks>
            This method can be used to ensure that a snapshot is correctly created prior to executing additional requests against it.
            </remarks>
            <param name="snapshotId">The ID of the snapshot to poll. The value should be obtained from <see cref="P:ConoHaNet.Objects.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the snapshot to become available.</param>
            <param name="refreshDelay">The refresh delay. If the value is <see langword="null"/>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Snapshot"/> object containing the snapshot details, including the final <see cref="P:ConoHaNet.Objects.Snapshot.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForSnapshotDeleted(System.String,System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for a snapshot to be deleted.
            </summary>
            <remarks>
            This method can be used to ensure that a snapshot is completely removed.
            </remarks>
            <param name="snapshotId">The ID of the snapshot to poll. The value should be obtained from <see cref="P:ConoHaNet.Objects.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="refreshCount">The number of times to poll for the snapshot to be deleted.</param>
            <param name="refreshDelay">The refresh delay. If the value is <see langword="null"/>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the snapshot was successfully deleted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="snapshotId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="snapshotId"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.WaitForSnapshotState(System.String,ConoHaNet.Objects.SnapshotState,ConoHaNet.Objects.SnapshotState[],System.Int32,System.Nullable{System.TimeSpan},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Waits for a snapshot to be set to be set to a particular status.
            </summary>
            <remarks>
            This method can be used to ensure that a snapshot is in an intended state prior to
            executing additional requests against it.
            </remarks>
            <param name="snapshotId">The ID of the snapshot to poll. The value should be obtained from <see cref="P:ConoHaNet.Objects.Snapshot.Id">Snapshot.Id</see>.</param>
            <param name="expectedState">The expected state for the snapshot.</param>
            <param name="errorStates">The error state(s) in which to stop polling once reached.</param>
            <param name="refreshCount">The number of times to poll the snapshot.</param>
            <param name="refreshDelay">The refresh delay. If the value is <see langword="null"/>, the default value is 10 seconds.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Snapshot"/> object containing the snapshot details, including the final <see cref="P:ConoHaNet.Objects.Snapshot.Status"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="snapshotId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="expectedState"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="errorStates"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="snapshotId"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="refreshCount"/> is less than 0.
            <para>-or-</para>
            <para>If <paramref name="refreshDelay"/> is negative.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:ConoHaNet.Exceptions.SnapshotEnteredErrorStateException">If the method returned due to the snapshot entering one of the <paramref name="errorStates"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IBlockStorageProvider.CreateGlanceImageFromVolume(System.String,System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            
            </summary>
            <param name="volumeId"></param>
            <param name="imageName"></param>
            <param name="diskFormat"></param>
            <param name="containerFormat"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:ConoHaNet.Providers.IExtendedCloudIdentityProvider">
            <summary>
            Represents an identity provider that implements ConoHa-specific extensions to the
            OpenStack Identity API.
            </summary>
            <seealso href="https://www.google.co.jp/search?q=openstack+">ConoHa Cloud Identity Client Developer Guide - API v2.0</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.ListRoles(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists all roles.
            <note type="warning">The behavior of this API method is not defined. Do not use.</note>
            </summary>
            <param name="serviceId">The "serviceId".</param>
            <param name="marker">The index of the last item in the previous list. Used for pagination. If the value is <see langword="null"/>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for pagination. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Identity.Role"/> objects describing the requested roles.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method using the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/>
            implementation of <see cref="T:ConoHaNet.Providers.IExtendedCloudIdentityProvider"/>. For more information about creating the provider, see
            <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="ListRoles" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="ListRoles" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="ListRoles" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="ListRoles" language="fs"/>
            </example>
            <seealso href="https://www.google.co.jp/search?q=openstack+">List Roles</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.ListUsersByRole(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists all users for a given role.
            </summary>
            <param name="roleId">The role ID. This is obtained from <see cref="P:ConoHaNet.Objects.Identity.Role.Id">Role.Id</see>.</param>
            <param name="enabled">Allows you to filter enabled or un-enabled users. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="marker">The index of the last item in the previous list. Used for pagination. If the value is <see langword="null"/>, the list starts at the beginning.</param>
            <param name="limit">Indicates the maximum number of items to return. Used for pagination. If the value is <see langword="null"/>, a provider-specific default value is used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Identity.Role"/> objects describing the requested roles.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0 or greater than 1000.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.AddRole(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Create a new role.
            </summary>
            <param name="name">The name for the new role.</param>
            <param name="description">The description for the new role.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Identity.Role"/> containing the details of the added role.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addRole_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Add Role (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.GetRole(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets details about the specified role.
            </summary>
            <param name="roleId">The role ID. This is obtained from <see cref="P:ConoHaNet.Objects.Identity.Role.Id">Role.Id</see>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.Identity.Role"/> containing the details of the role.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="roleId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="roleId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getRoleByName_v2.0_OS-KSADM_roles_Role_Operations_OS-KSADM.html">Get Role by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.AddRoleToUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Adds the specified global role to the user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.NewUser.Id"/> or <see cref="P:ConoHaNet.Objects.User.Id"/>.</param>
            <param name="roleId">The role ID. This is obtained from <see cref="P:ConoHaNet.Objects.Identity.Role.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the role was removed from the user; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method using the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/>
            implementation of <see cref="T:ConoHaNet.Providers.IExtendedCloudIdentityProvider"/>. For more information about creating the provider, see
            <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="AddRoleToUser" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="AddRoleToUser" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="AddRoleToUser" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="AddRoleToUser" language="fs"/>
            </example>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/PUT_addUserRole_v2.0_users__userId__roles_OS-KSADM__roleId__.html">Add Global Role to User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.DeleteRoleFromUser(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified global role from the user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.NewUser.Id"/> or <see cref="P:ConoHaNet.Objects.User.Id"/>.</param>
            <param name="roleId">The role ID. This is obtained from <see cref="P:ConoHaNet.Objects.Identity.Role.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the role was removed from the user; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="roleId"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method using the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/>
            implementation of <see cref="T:ConoHaNet.Providers.IExtendedCloudIdentityProvider"/>. For more information about creating the provider, see
            <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="DeleteRoleFromUser" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="DeleteRoleFromUser" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="DeleteRoleFromUser" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="DeleteRoleFromUser" language="fs"/>
            </example>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUserRole_v2.0_users__userId__roles_OS-KSADM__roleId__.html">Delete Global Role from User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.UpdateUserCredentials(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the API key for the specified user.
            </summary>
            <remarks>
            This method is a ConoHa-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <returns>A <see cref="T:ConoHaNet.Objects.UserCredential"/> object containing the updated user information.</returns>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.NewUser.Id"/> or <see cref="P:ConoHaNet.Objects.User.Id"/>.</param>
            <param name="apiKey">The new API key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.DeleteUserCredentials(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes API key credentials for the specified user.
            </summary>
            <remarks>
            This method is a ConoHa-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Delete User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.NewUser.Id"/> or <see cref="P:ConoHaNet.Objects.User.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the credentials were removed from the user; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Delete User Credentials</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.SetUserPassword(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the password for the specified user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.NewUser.Id"/> or <see cref="P:ConoHaNet.Objects.User.Id"/>.</param>
            <param name="password">The new password.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the operation succeeded; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.SetUserPassword(ConoHaNet.Objects.User,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the username and password for the specified user.
            </summary>
            <param name="user">The user.</param>
            <param name="password">The new password.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the operation succeeded; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="user"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="password"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="password"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.User.Id"/> is <see langword="null"/> or empty.</para>
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.User.Username"/> is <see langword="null"/> or empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.SetUserPassword(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the username and password for the specified user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.NewUser.Id"/> or <see cref="P:ConoHaNet.Objects.User.Id"/>.</param>
            <param name="username">The new username.</param>
            <param name="password">The new password.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the operation succeeded; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="username"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="password"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="username"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="password"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.UpdateUserCredentials(ConoHaNet.Objects.User,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the username and API key for the specified user.
            </summary>
            <remarks>
            This method is a ConoHa-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <param name="user">The user.</param>
            <param name="apiKey">The API key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.UserCredential"/> object containing the updated user information.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="user"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="apiKey"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.User.Id"/> is <see langword="null"/> or empty.</para>
            <para>-or-</para>
            <para>If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.User.Username"/> is <see langword="null"/> or empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IExtendedCloudIdentityProvider.UpdateUserCredentials(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the username and API key for the specified user.
            </summary>
            <remarks>
            This method is a ConoHa-specific usage scenario for the
            <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials</see>
            method, where the credentials are always specified in the form of an API key.
            </remarks>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.NewUser.Id"/> or <see cref="P:ConoHaNet.Objects.User.Id"/>.</param>
            <param name="username">The new username.</param>
            <param name="apiKey">The new API key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.UserCredential"/> object containing the updated user information.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="username"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="username"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="apiKey"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUserCredential_v2.0_users__userId__OS-KSADM_credentials__credential-type__.html">Update User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Providers.IIdentityProvider">
            <summary>
            Represents a provider for the OpenStack Identity Service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/">OpenStack Identity Service API v2.0 Reference</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.Authenticate(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Authenticates the user for the specified identity.
            </summary>
            <remarks>
            This method always authenticates to the server, even if an unexpired, cached <see cref="T:ConoHaNet.Objects.UserAccess"/>
            is available for the specified identity.
            </remarks>
            <param name="identity">The identity of the user to authenticate. If this value is <see langword="null"/>, the authentication is performed with the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/>.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.ValidateToken(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Validates a given token.
            </summary>
            <param name="token">The token to be validated.</param>
            <param name="tenantId">If specified, the validation ensures that the specified tenant is in scope. This is obtained from <see cref="P:ConoHaNet.Objects.Tenant.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.UserAccess"/> object containing the authentication token and user data. The <see cref="P:ConoHaNet.Objects.UserAccess.ServiceCatalog"/> property of the result may be <see langword="null"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="token"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="token"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException">If <paramref name="tenantId"/> is specified and the token is not valid within the specified tenant.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_validateToken_v2.0_tokens__tokenId__Token_Operations.html">Validate Token (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.GetToken(ConoHaNet.Objects.CloudIdentity,System.Boolean)">
             <summary>
             Gets the authentication token for the specified identity. If necessary, the identity is authenticated
             on the server to obtain a token.
             </summary>
             <remarks>
             If <paramref name="forceCacheRefresh"/> is <see langword="false"/> and a cached <see cref="T:ConoHaNet.Objects.IdentityToken"/>
             is available for the specified <paramref name="identity"/>, this method may return the cached
             value without performing an authentication against the server. If <paramref name="forceCacheRefresh"/>
             is <see langword="true"/>, this method returns the equivalent of the following statement.
            
             <para><c>provider.<see cref="M:ConoHaNet.Providers.IIdentityProvider.Authenticate(ConoHaNet.Objects.CloudIdentity)">Authenticate</see>(<paramref name="identity"/>).<see cref="P:ConoHaNet.Objects.UserAccess.Token"/></c></para>
             </remarks>
             <param name="identity">The identity of the user to authenticate. If this value is <see langword="null"/>, the authentication is performed with the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/>.</param>
             <param name="forceCacheRefresh">If <see langword="true"/>, the user is always authenticated against the server; otherwise a cached <see cref="T:ConoHaNet.Objects.IdentityToken"/> may be returned.</param>
             <returns>The user's authentication token.</returns>
             <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
             <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.GetRolesByUser(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists global roles for a specified user. Excludes tenant roles.
            </summary>
            <param name="userId">The user's ID. This is obtained from <see cref="P:ConoHaNet.Objects.User.Id">User.Id</see>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Identity.Role"/> objects describing the roles for the specified user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUserGlobalRoles_v2.0_users__user_id__roles_User_Operations.html">List User Global Roles (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.ListUsers(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists all users for the account.
            </summary>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.User"/> objects describing the users for the account.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method using the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/>
            implementation of <see cref="T:ConoHaNet.Providers.IIdentityProvider"/>. For more information about creating the provider, see
            <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="ListUsers" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="ListUsers" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="ListUsers" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="ListUsers" language="fs"/>
            </example>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listUsers_v2.0_users_.html">List Users (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.GetUserByName(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the details for the user with the specified username.
            </summary>
            <param name="name">The username.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>The <see cref="T:ConoHaNet.Objects.User"/> details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserByName_v2.0_users__User_Operations.html">Get User Information by Name (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.GetUser(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the details for the user with the specified ID.
            </summary>
            <param name="id">The user ID.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>The <see cref="T:ConoHaNet.Objects.User"/> details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="id"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="id"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_getUserById_v2.0_users__user_id__User_Operations.html">Get User Information by ID (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.AddUser(ConoHaNet.Objects.NewUser,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Adds a user to the account.
            </summary>
            <remarks>
            The returned <see cref="T:ConoHaNet.Objects.NewUser"/> object will contain the password of the created user.
            If no <see cref="P:ConoHaNet.Objects.NewUser.Password"/> is specified in <paramref name="user"/>, the returned
            password will be an automatically generated password from the server.
            <note type="warning">
            After this call, there is no way to retrieve the password for a user. If the password was
            auto-generated by the server, make sure to either store the returned value or provide the
            information to the user for later use.
            </note>
            </remarks>
            <param name="user">A <see cref="T:ConoHaNet.Objects.NewUser"/> object containing the details of the user to create.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.NewUser"/> object containing the details of the created user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.NewUser.Username"/> is <see langword="null"/> or empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.NewUser.Id"/> is not <see langword="null"/> (i.e. <paramref name="user"/> represents a user that already exists).
            <para>-or-</para>
            <para>If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ServiceConflictException">If a user with the specified <see cref="P:ConoHaNet.Objects.NewUser.Username"/> already exists.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method using the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/>
            implementation of <see cref="T:ConoHaNet.Providers.IIdentityProvider"/>. For more information about creating the provider, see
            <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="CreateUser" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="CreateUser" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="CreateUser" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="CreateUser" language="fs"/>
            </example>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_addUser_v2.0_users_.html">Add User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.UpdateUser(ConoHaNet.Objects.User,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the details for the specified user.
            </summary>
            <remarks>
            The ID of the user to update is specified in <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.User.Id"/>.
            The other fields of <paramref name="user"/> are either <see langword="null"/> to keep the existing values
            or non-null to specify an updated value. The returned <see cref="T:ConoHaNet.Objects.User"/> instance contains
            the complete details of the updated user.
            </remarks>
            <param name="user">The <see cref="T:ConoHaNet.Objects.User"/> details to update.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.User"/> object containing the details of the updated user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="user"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="user"/>.<see cref="P:ConoHaNet.Objects.User.Id"/> is <see langword="null"/> or empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method using the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/>
            implementation of <see cref="T:ConoHaNet.Providers.IIdentityProvider"/>. For more information about creating the provider, see
            <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="UpdateUser" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="UpdateUser" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="UpdateUser" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="UpdateUser" language="fs"/>
            </example>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_updateUser_v2.0_users__userId__.html">Update User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.DeleteUser(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified user from the account.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.User.Id"/> or <see cref="P:ConoHaNet.Objects.NewUser.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the user was successfully deleted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method using the <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/>
            implementation of <see cref="T:ConoHaNet.Providers.IIdentityProvider"/>. For more information about creating the provider, see
            <see cref="M:ConoHaNet.Providers.CloudIdentityProvider.#ctor(ConoHaNet.Objects.CloudIdentity)"/>.</para>
            <code source="..\Samples\CSharpCodeSamples\IdentityProviderExamples.cs" region="DeleteUser" language="cs"/>
            <code source="..\Samples\VBCodeSamples\IdentityProviderExamples.vb" region="DeleteUser" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\IdentityProviderExamples.cpp" region="DeleteUser" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\IdentityProviderExamples.fs" region="DeleteUser" language="fs"/>
            </example>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/DELETE_deleteUser_v2.0_users__userId__.html">Delete User (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.ListUserCredentials(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists the credentials for the specified user.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.User.Id"/> or <see cref="P:ConoHaNet.Objects.NewUser.Id"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>List of <see cref="T:ConoHaNet.Objects.UserCredential"/> objects describing the credentials of the specified user.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="userId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="userId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listCredentials_v2.0_users__userId__OS-KSADM_credentials_.html">List Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.ListTenants(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists the tenants for the currently authenticated user.
            </summary>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>List of <see cref="T:ConoHaNet.Objects.Tenant"/> objects describing the tenants of the currently authenticated user.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listTenants_v2.0_tenants_Tenant_Operations.html">List Tenants (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.GetUserAccess(ConoHaNet.Objects.CloudIdentity,System.Boolean)">
            <summary>
            Gets the user access details, authenticating with the server if necessary.
            </summary>
            <remarks>
            If <paramref name="forceCacheRefresh"/> is <see langword="false"/> and a cached <see cref="T:ConoHaNet.Objects.UserAccess"/>
            is available for the specified <paramref name="identity"/>, this method may return the cached
            value without performing an authentication against the server. If <paramref name="forceCacheRefresh"/>
            is <see langword="true"/>, this method is equivalent to <see cref="M:ConoHaNet.Providers.IIdentityProvider.Authenticate(ConoHaNet.Objects.CloudIdentity)"/>.
            </remarks>
            <param name="identity">The identity of the user to authenticate. If this value is <see langword="null"/>, the authentication is performed with the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/>.</param>
            <param name="forceCacheRefresh">If <see langword="true"/>, the user is always authenticated against the server; otherwise a cached <see cref="T:ConoHaNet.Objects.IdentityToken"/> may be returned.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.GetInternalUserAccess(ConoHaNet.Objects.CloudIdentity,System.Boolean)">
            <summary>
            this is not supported by design
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.GetUserCredential(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the specified user credential.
            </summary>
            <param name="userId">The user ID. This is obtained from <see cref="P:ConoHaNet.Objects.User.Id"/> or <see cref="P:ConoHaNet.Objects.NewUser.Id"/>.</param>
            <param name="credentialKey">The credential key.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the <see cref="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity"/> for the current provider instance will be used.</param>
            <returns>The <see cref="T:ConoHaNet.Objects.UserCredential"/> details for the specified credentials type.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="userId"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="credentialKey"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="userId"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="credentialKey"/> is empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the <see href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/Admin_API_Service_Developer_Operations-d1e1357.html">OS-KSADM Admin Extension</see>.
            <para>-or-</para>
            <para>If the provider does not support the given <paramref name="identity"/> type.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="">Get User Credentials (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.ListEndpoints(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists the endpoints associated to a given authentication token.
            </summary>
            <param name="token">The authentication token Id. This is obtained from <see cref="P:ConoHaNet.Objects.IdentityToken.Id"/></param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.ExtendedEndpoint"/> objects containing endpoint details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="token"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="token"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed or the token does not exist.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/GET_listEndpointsForToken_v2.0_tokens__tokenId__endpoints_Token_Operations.html">List Token Endpoints (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="P:ConoHaNet.Providers.IIdentityProvider.DefaultIdentity">
            <summary>
            Gets the default <see cref="T:ConoHaNet.Objects.CloudIdentity"/> to use for requests from this provider.
            If no default identity is available, the value is <see langword="null"/>.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityProvider.ListTenantUsers(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Get the list of users for current tenant id
            </summary>
            <param name="tenantId"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:ConoHaNet.Providers.IIdentityService">
            <summary>
            Represents a provider for asynchronous operations on the OpenStack Identity Service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/">OpenStack Identity Service API v2.0 Reference</seealso>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityService.AuthenticateAsync(ConoHaNet.Objects.CloudIdentity,System.Threading.CancellationToken)">
            <summary>
            Authenticates the user for the specified identity.
            </summary>
            <remarks>
            This method always authenticates to the server, even if an unexpired, cached <see cref="T:ConoHaNet.Objects.UserAccess"/>
            is available for the specified identity.
            </remarks>
            <param name="identity">The identity of the user to authenticate.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:ConoHaNet.Objects.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityService.GetUserAccessAsync(ConoHaNet.Objects.CloudIdentity,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Gets the user access details, authenticating with the server if necessary.
            </summary>
            <remarks>
            If <paramref name="forceCacheRefresh"/> is <see langword="false"/> and a cached <see cref="T:ConoHaNet.Objects.UserAccess"/>
            is available for the specified <paramref name="identity"/>, this method may return the cached
            value without performing an authentication against the server. If <paramref name="forceCacheRefresh"/>
            is <see langword="true"/>, this method is equivalent to <see cref="M:ConoHaNet.Providers.IIdentityService.AuthenticateAsync(ConoHaNet.Objects.CloudIdentity,System.Threading.CancellationToken)"/>.
            </remarks>
            <param name="identity">The identity of the user to authenticate.</param>
            <param name="forceCacheRefresh">If <see langword="true"/>, the user is always authenticated against the server; otherwise a cached <see cref="T:ConoHaNet.Objects.IdentityToken"/> may be returned.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain a <see cref="T:ConoHaNet.Objects.UserAccess"/> object containing the authentication token, service catalog and user data.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IIdentityService.GetTokenAsync(ConoHaNet.Objects.CloudIdentity,System.Threading.CancellationToken)">
            <summary>
            Gets the authentication token for the specified identity. If necessary, the identity is authenticated
            on the server to obtain a token.
            </summary>
            <remarks>
            If a cached <see cref="T:ConoHaNet.Objects.IdentityToken"/> is available for the specified <paramref name="identity"/>,
            this method may return the cached value without performing an authentication against the server.
            </remarks>
            <param name="identity">The identity of the user to authenticate.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain the user's authentication token.</returns>
            <exception cref="T:System.NotSupportedException">If the provider does not support the given <paramref name="identity"/> type.</exception>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the authentication request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-identity-service/2.0/content/POST_authenticate_v2.0_tokens_.html">Authenticate (OpenStack Identity Service API v2.0 Reference)</seealso>
        </member>
        <member name="T:ConoHaNet.Providers.IImagesProvider">
            <summary>
            Represents a provider for the OpenStack Networking service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/">OpenStack Networking API v2.0 Reference</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.ListGlanceImages(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a collection of glance image
            </summary>
            <param name="limit"></param>
            <param name="marker"></param>
            <param name="name"></param>
            <param name="visibility"></param>
            <param name="memberStatus"></param>
            <param name="owner"></param>
            <param name="status"></param>
            <param name="sizeMin"></param>
            <param name="sizeMax"></param>
            <param name="sortKey"></param>
            <param name="sortDir"></param>
            <param name="tag"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/image-get_images_list.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.GetGlanceImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the glance image with image id
            </summary>
            <param name="imageId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/image-get_images_detail_specified.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.DeleteGlanceImage(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the glance image with image id
            </summary>
            <param name="imageId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
            <see href="https://www.conoha.jp/docs/image-remove_image.html"/>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.CreateGlanceImageMember(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates a glance image member
            </summary>
            <param name="imageId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.ListGlanceImageMembers(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the list of glance image member
            </summary>
            <param name="imageId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.UpdateGlanceImageMember(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the glance image member
            </summary>
            <param name="imageId"></param>
            <param name="memberId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.DeleteGlanceImageMember(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the glance image emember with member id
            </summary>
            <param name="imageId"></param>
            <param name="memberId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.GetImageAmount(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets glance image quota
            </summary>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.ListCommonlyUsedImages(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not public command.
            </summary>
            <param name="tenantId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.SetWebShare(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not public command.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.ImportImage(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not public command.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.ListCloudImageTasks(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not public command.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.IImagesProvider.GetCloudImageTask(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not public command.
            </summary>
            <param name="taskId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:ConoHaNet.Providers.INetworksProvider">
            <summary>
            Represents a provider for the OpenStack Networking service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/">OpenStack Networking API v2.0 Reference</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.INetworksProvider.ListNetworks(System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            List the networks configured for the account.
            </summary>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A list of <see cref="T:ConoHaNet.Objects.CloudNetwork"/> objects describing the networks for the account.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/List_Networks.html">List Networks (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.INetworksProvider.CreateNetwork(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Create a network with the given IP block.
            </summary>
            <param name="cidr">The IP block from which to allocate the network. For example, <c>172.16.0.0/24</c> or <c>2001:DB8::/64</c>.</param>
            <param name="label">The name of the new network. For example, <c>my_new_network</c>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.CloudNetwork"/> instance containing details for the newly created network.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cidr"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="label"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cidr"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="label"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CidrFormatException">If <paramref name="cidr"/> is not in the correct format.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/Create_Network.html">Create Network (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.INetworksProvider.ShowNetwork(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Retrieve details for the specified network.
            </summary>
            <param name="networkId">ID of the network to retrieve. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.CloudNetwork"/> instance containing the network details.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/List_Networks_Detail.html">Show Network (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.INetworksProvider.DeleteNetwork(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified network. <remarks>You cannot delete an isolated network unless the network is not attached to any server.</remarks>
            </summary>
            <param name="networkId">ID of the network to delete. This is obtained from <see cref="P:ConoHaNet.Objects.CloudNetwork.Id"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns><see langword="true"/> if the network was successfully deleted; otherwise, <see langword="false"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="networkId"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="networkId"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-network/2.0/content/Delete_Network.html">Delete Network (OpenStack Networking API v2.0 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.INetworksProvider.AssociateHealthMonitor(System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            associate the health monitor and pool
            </summary>
            <param name="monitorId"></param>
            <param name="poolId"></param>
            <param name="region"></param>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.INetworksProvider.GetPortBlocks(System.String,System.String,System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not supported by design.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.INetworksProvider.SetPortBlocks(System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            this is not supported by design.
            </summary>
        </member>
        <member name="T:ConoHaNet.Providers.IObjectStorageProvider">
            <summary>
            Represents a provider for the OpenStack Object Storage service.
            </summary>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/">OpenStack Object Storage API v1 Reference</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.ListContainers(System.Nullable{System.Int32},System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a list of containers stored in the account.
            </summary>
            <param name="limit">The maximum number of containers to return. If the value is <see langword="null"/>, a provider-specific default is used.</param>
            <param name="marker">When specified, only containers with names greater than <paramref name="marker"/> are returned. If the value is <see langword="null"/>, the list starts at the beginning.</param>
            <param name="markerEnd">When specified, only containers with names less than <paramref name="markerEnd"/> are returned. If the value is <see langword="null"/>, the list proceeds to the end, or until the <paramref name="limit"/> is reached.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.Container"/> objects containing the details of the specified containers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than or equal to 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showAccountDetails_v1__account__storage_account_services.html">Show account details and list containers (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.CreateContainer(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Creates a container if it does not already exist.
             </summary>
             <param name="container">The container name.</param>
             <param name="headers">A collection of custom HTTP headers to associate with the container (see <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.GetContainerHeader(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>
             This method returns one of the following <see cref="T:ConoHaNet.Objects.ObjectStore"/> values.
            
             <list type="bullet">
             <item><see cref="F:ConoHaNet.Objects.ObjectStore.ContainerCreated"/> - if the container was created.</item>
             <item><see cref="F:ConoHaNet.Objects.ObjectStore.ContainerExists"/> - if the container was not created because it already exists.</item>
             </list>
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/PUT_createContainer_v1__account___container__storage_container_services.html">Create container (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DeleteContainer(System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes a container, and optionally all objects stored in the container.
            </summary>
            <remarks>
            Containers cannot be deleted unless they are empty. The <paramref name="deleteObjects"/> parameter provides
            a mechanism to combine the deletion of container objects with the deletion of the container itself.
            </remarks>
            <param name="container">The container name.</param>
            <param name="deleteObjects">When <see langword="true"/>, all objects in the specified container are deleted before deleting the container.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNotEmptyException">If the container could not be deleted because it was not empty and <paramref name="deleteObjects"/> was <see langword="false"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException">If the specified container does not exist.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/DELETE_deleteContainer_v1__account___container__storage_container_services.html">Delete container (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetContainerHeader(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the non-metadata headers associated with the container.
            </summary>
            <remarks>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of non-metadata HTTP headers returned with the container.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showContainerMeta_v1__account___container__storage_container_services.html">Show container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetContainerMetaData(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Gets the container metadata.
             </summary>
             <remarks>
             The metadata associated with containers in the Object Storage Service are
             case-insensitive.
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of metadata associated with the container.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showContainerMeta_v1__account___container__storage_container_services.html">Show container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetContainerCDNHeader(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the container CDN header.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A <see cref="T:ConoHaNet.Objects.ContainerCDN"/> object describing the CDN properties of the container.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/HEAD_retrieveCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">List a CDN-Enabled Container's Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.ListCDNContainers(System.Nullable{System.Int32},System.String,System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets a list of CDN properties for a group of containers.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            </remarks>
            <param name="limit">The maximum number of containers to return. If the value is <see langword="null"/>, a provider-specific default is used.</param>
            <param name="markerId">When specified, only containers with names greater than <paramref name="markerId"/> are returned. If the value is <see langword="null"/>, the list starts at the beginning.</param>
            <param name="markerEnd">When specified, only containers with names less than <paramref name="markerEnd"/> are returned. If the value is <see langword="null"/>, the list proceeds to the end, or until the <paramref name="limit"/> is reached.</param>
            <param name="cdnEnabled">If set to <see langword="true"/>, the result is filtered to only include CDN-enabled containers.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.ContainerCDN"/> objects describing the CDN properties of the specified containers.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/GET_listCDNcontainers_v1__account__CDN_Account_Operations-d1e2397.html">List CDN-Enabled Containers (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.EnableCDNOnContainer(System.String,System.Int64,System.String,ConoHaNet.Objects.CloudIdentity)">
             <overloads>
             <summary>
             When you CDN-enable a container, all the objects within it become available through the
             Content Delivery Network (CDN). Similarly, once a container is CDN-enabled, any objects
             added to it in the storage service become CDN-enabled.
             </summary>
             <remarks>
             <note type="note">
             This feature is a Rackspace-specific extension to the OpenStack Object Storage Service.
             </note>
             </remarks>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/PUT_enableDisableCDNcontainer_v1__account___container__CDN_Container_Services-d1e2632.html">CDN-Enable and CDN-Disable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
             </overloads>
            
             <summary>
             Enables CDN on the container using the specified TTL and without log retention.
             </summary>
             <remarks>
             If the specified container is already CDN-enabled, this method updates the TTL
             for the container based on the <paramref name="timeToLive"/> argument.
            
             <note type="note">
             This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
             </note>
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="timeToLive">The time (in seconds) to cache objects in the CDN. Each time the object is accessed after the TTL expires, the CDN re-fetches and caches the object for the TTL period.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of HTTP headers included in the response to the REST request.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is less than 0.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.TTLLengthException">If the provider does not support the specified <paramref name="timeToLive"/>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/PUT_enableDisableCDNcontainer_v1__account___container__CDN_Container_Services-d1e2632.html">CDN-Enable and CDN-Disable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.EnableCDNOnContainer(System.String,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Enables CDN on the container using the specified log retention and a provider-specific
            default TTL.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="logRetention"><see langword="true"/> to enable log retention on the container; otherwise, <see langword="false"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns>A collection of HTTP headers included in the response to the REST request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/PUT_enableDisableCDNcontainer_v1__account___container__CDN_Container_Services-d1e2632.html">CDN-Enable and CDN-Disable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.EnableCDNOnContainer(System.String,System.Int64,System.Boolean,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Enables CDN on the container using the specified TTL and log retention values.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container.</param>
            <param name="timeToLive">The time (in seconds) to cache objects in the CDN. Each time the object is accessed after the TTL expires, the CDN re-fetches and caches the object for the TTL period.</param>
            <param name="logRetention"><see langword="true"/> to enable log retention on the container; otherwise, <see langword="false"/>.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of HTTP headers included in the response to the REST request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="timeToLive"/> is less than 0.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.TTLLengthException">If the provider does not support the specified <paramref name="timeToLive"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/PUT_enableDisableCDNcontainer_v1__account___container__CDN_Container_Services-d1e2632.html">CDN-Enable and CDN-Disable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DisableCDNOnContainer(System.String,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Disables CDN on the container.
            </summary>
            <remarks>
            <note type="note">
            This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
            </note>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of HTTP headers included in the response to the REST request.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/PUT_enableDisableCDNcontainer_v1__account___container__CDN_Container_Services-d1e2632.html">CDN-Enable and CDN-Disable a Container (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateContainerMetadata(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the metadata associated with the container. This method is used to add, update, and
            remove metadata items associated with a storage container.
            </summary>
            <remarks>
            Each key/value pair in <paramref name="metadata"/> represents an updated metadata item.
            If the value is <see langword="null"/> or empty, then the metadata item represented by the key is
            removed if it exists. If a metadata item already exists for the key, its value is updated.
            Otherwise, a new metadata item is added for the key/value pair.
            </remarks>
            <param name="container">The container name.</param>
            <param name="metadata">The account metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with invalid characters.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key that is <see langword="null"/> or empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with characters that are not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateContainerMeta_v1__account___container__storage_container_services.html">Create, update, or delete container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DeleteContainerMetadata(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes multiple metadata items from the container.
            </summary>
            <param name="container">The container name.</param>
            <param name="keys">The metadata items to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="keys"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="keys"/> contains any <see langword="null"/> or empty values.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="keys"/> contains a key with characters that are not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateContainerMeta_v1__account___container__storage_container_services.html">Create, update, or delete container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DeleteContainerMetadata(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the container.
            </summary>
            <param name="container">The container name.</param>
            <param name="key">The metadata item to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="key"/> contains a character that is not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateContainerMeta_v1__account___container__storage_container_services.html">Create, update, or delete container metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateContainerCdnHeaders(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Sets the CDN headers for the specified container, replacing any existing headers.
             </summary>
             <remarks>
             <note type="warning">
             This method replaces <em>all</em> existing CDN headers for the container with the
             values found in <paramref name="headers"/>.
             </note>
            
             <note type="note">
             This method is a Rackspace-specific extension to the OpenStack Object Storage Service.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="headers">The complete set of CDN headers for the container.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ItemNotFoundException">If the specified container does not exist.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/POST_updateCDNcontainermeta_v1__account___container__CDN_Container_Services-d1e2632.html">Update CDN-Enabled Container Metadata (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="index">The index file to serve when users browse the container, such as <fictionalUri>index.html</fictionalUri>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebIndex"/> header.</param>
            <param name="error">The suffix for the file to serve when an error occurs. If the value is <fictionalUri>error.html</fictionalUri> and a 404 (not found) error occurs, the file <fictionalUri>400error.html</fictionalUri> will be served to the user. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebError"/> header.</param>
            <param name="css">The style sheet to use for file listings, such as <fictionalUri>lists.css</fictionalUri>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebListingsCSS"/> header.</param>
            <param name="listing"><see langword="true"/> to allow users to browse a list of files in the container when no index file is available; otherwise <see langword="false"/>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebListings"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="index"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="css"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="index"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="css"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="index"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="error"/> is not a valid object name.</para>
            <para>-or-</para>
            <para>If <paramref name="css"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="index">The index file to serve when users browse the container, such as <fictionalUri>index.html</fictionalUri>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebIndex"/> header.</param>
            <param name="error">The suffix for the file to serve when an error occurs. If the value is <fictionalUri>error.html</fictionalUri> and a 404 (not found) error occurs, the file <fictionalUri>400error.html</fictionalUri> will be served to the user. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebError"/> header.</param>
            <param name="listing"><see langword="true"/> to allow users to browse a list of files in the container when no index file is available; otherwise <see langword="false"/>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebListings"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="index"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="index"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="index"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="error"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="css">The style sheet to use for file listings, such as <fictionalUri>lists.css</fictionalUri>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebListingsCSS"/> header.</param>
            <param name="listing"><see langword="true"/> to allow users to browse a list of files in the container when no index file is available; otherwise <see langword="false"/>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebListings"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="css"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="css"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="css"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.EnableStaticWebOnContainer(System.String,System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Enables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="index">The index file to serve when users browse the container, such as <fictionalUri>index.html</fictionalUri>. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebIndex"/> header.</param>
            <param name="error">The suffix for the file to serve when an error occurs. If the value is <fictionalUri>error.html</fictionalUri> and a 404 (not found) error occurs, the file <fictionalUri>400error.html</fictionalUri> will be served to the user. This is the value for the <see cref="F:ConoHaNet.Providers.CloudFilesProvider.WebError"/> header.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="index"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="index"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="error"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="index"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="error"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DisableStaticWebOnContainer(System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Disables anonymous web access to the static content of the specified container.
            </summary>
            <param name="container">The container name.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the provider requires containers be CDN-enabled before they can be accessed from the web, and the <see cref="P:ConoHaNet.Objects.ContainerCDN.CDNEnabled"/> property is false.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/static-website.html">Create static website (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Gets the non-metadata headers for the specified object.
             </summary>
             <remarks>
             This call returns information for the first replicant of the object located in the distributed storage
             system. If changes were made to the specified object that are not yet fully replicated through the
             storage system, the results of this call may not match the most recent information uploaded to Object
             Storage.
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="objectName">The object name.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of non-metadata headers associated with the specified object.</returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="container"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="objectName"/> is empty.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.Newest"/>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showObjectMeta_v1__account___container___object__storage_object_services.html">Show object metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectMetaData(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Gets the object data.
             </summary>
             <remarks>
             The metadata associated with objects in the Object Storage Service are
             case-insensitive.
             <para>
             This call returns information for the first replicant of the object located in the distributed storage
             system. If changes were made to the specified object that are not yet fully replicated through the
             storage system, the results of this call may not match the most recent information uploaded to Object
             Storage.
             </para>
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="container">The container name.</param>
             <param name="objectName">The object name.</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of metadata associated with the object.</returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="container"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="container"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="objectName"/> is empty.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.Newest"/>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showObjectMeta_v1__account___container___object__storage_object_services.html">Show object metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the object metadata, replacing any existing metadata values.
            </summary>
            <remarks>
            <note type="warning">
            This method replaces all existing metadata for the object with the values
            found in <paramref name="metadata"/>. To add or change existing metadata values
            without affecting all metadata for the object, first call <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectMetaData(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>,
            modify the returned <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>,
            then call <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> with the modified metadata dictionary.
            </note>
            </remarks>
            <param name="container">The container name.</param>
            <param name="objectName">The object name.</param>
            <param name="metadata">The complete metadata to associate with the object.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateObjectMeta_v1__account___container___object__storage_object_services.html">Create or update object metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DeleteObjectMetadata(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes multiple metadata items from the object.
            </summary>
            <param name="container">The container name.</param>
            <param name="objectName">The object name.</param>
            <param name="keys">The metadata items to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="keys"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="keys"/> contains any <see langword="null"/> or empty values.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateObjectMeta_v1__account___container___object__storage_object_services.html">Create or update object metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DeleteObjectMetadata(System.String,System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes the specified metadata item from the object.
            </summary>
            <param name="container">The container name.</param>
            <param name="objectName">The object name.</param>
            <param name="key">The metadata item to delete.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="key"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="key"/> is empty.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateObjectMeta_v1__account___container___object__storage_object_services.html">Create or update object metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.ListObjects(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Lists the objects in a container.
            </summary>
            <param name="container">The container name.</param>
            <param name="limit">The maximum number of objects to return. If the value is <see langword="null"/>, a provider-specific default is used.</param>
            <param name="marker">When specified, only objects with names greater than <paramref name="marker"/> are returned. If the value is <see langword="null"/>, the list starts at the beginning.</param>
            <param name="markerEnd">When specified, only objects with names less than <paramref name="markerEnd"/> are returned. If the value is <see langword="null"/>, the list proceeds to the end, or until the <paramref name="limit"/> is reached.</param>
            <param name="prefix">Prefix of object names to include</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of <see cref="T:ConoHaNet.Objects.ContainerObject"/> objects containing the details of the specified objects.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="container"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="container"/> is empty.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="limit"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            <para>The following example demonstrates the use of this method to output the names of all objects in a container
            using <see cref="M:System.Console.WriteLine(System.String,System.Object[])"/>. In the example, the pagination details of this method are handled by the
            helper method <c>ListAllObjects</c>.</para>
            <code source="..\Samples\CSharpCodeSamples\ObjectStorageProviderExamples.cs" region="ListObjectsInContainer" language="cs"/>
            <code source="..\Samples\VBCodeSamples\ObjectStorageProviderExamples.vb" region="ListObjectsInContainer" language="vbnet"/>
            <code source="..\Samples\CPPCodeSamples\ObjectStorageProviderExamples.cpp" region="ListObjectsInContainer" language="cpp"/>
            <code source="..\Samples\FSharpCodeSamples\ObjectStorageProviderExamples.fs" region="ListObjectsInContainer" language="fs"/>
            </example>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_showContainerDetails_v1__account___container__storage_container_services.html">Show container details and list objects (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.CreateObjectFromFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates an object using data from a file. If the destination file already exists, the contents are overwritten.
            </summary>
            <remarks>
            <para>
            The content type for the object may be specified by providing the <paramref name="contentType"/> argument,
            or by setting <see cref="F:ConoHaNet.Providers.CloudFilesProvider.DetectContentType"/> to <c>True</c> in the
            <paramref name="headers"/> argument. If neither of these is used, the resulting content type of the object
            is unspecified.
            </para>
            <para>
            Object metadata can be set at the time the object is created by including the custom metadata items in the
            <paramref name="headers"/> argument. Note that unlike the <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> method, the
            keys of all custom metadata items included as headers must be prefixed with
            <see cref="F:ConoHaNet.Providers.CloudFilesProvider.ObjectMetaDataPrefix"/>.
            </para>
            </remarks>
            <param name="container">The container name.</param>
            <param name="filePath">The source file path. Example <localUri>c:\folder1\folder2\image_name.jpeg</localUri></param>
            <param name="objectName">The destination object name. If <see langword="null"/>, the filename portion of <paramref name="filePath"/> will be used.</param>
            <param name="contentType">The content type of the created object. If the value is <see langword="null"/> or empty, the content type of the created object is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="filePath"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="filePath"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.IO.FileNotFoundException">If the file <paramref name="filePath"/> could not be found.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            The following code shows two ways to create an object with custom metadata. The first uses the <paramref name="headers"/>
            argument to this method, and the second shows an alternative method of calling <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> after
            the object is created.
            <code source="..\Samples\CSharpCodeSamples\ObjectStorageProviderExamples.cs" region="CreateObjectFromFileWithMetadata" language="cs"/>
            </example>
            <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.DetectContentType"/>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/PUT_createOrReplaceObject_v1__account___container___object__storage_object_services.html">Create or replace object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.CreateObject(System.String,System.IO.Stream,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Creates an object using data from a <see cref="T:System.IO.Stream"/>. If the destination file already exists, the contents are overwritten.
            </summary>
            <remarks>
            <para>
            The content type for the object may be specified by providing the <paramref name="contentType"/> argument,
            or by setting <see cref="F:ConoHaNet.Providers.CloudFilesProvider.DetectContentType"/> to <c>True</c> in the
            <paramref name="headers"/> argument. If neither of these is used, the resulting content type of the object
            is unspecified.
            </para>
            <para>
            Object metadata can be set at the time the object is created by including the custom metadata items in the
            <paramref name="headers"/> argument. Note that unlike the <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> method, the
            keys of all custom metadata items included as headers must be prefixed with
            <see cref="F:ConoHaNet.Providers.CloudFilesProvider.ObjectMetaDataPrefix"/>.
            </para>
            </remarks>
            <param name="container">The container name.</param>
            <param name="stream">A <see cref="T:System.IO.Stream"/> providing the data for the file.</param>
            <param name="objectName">The destination object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="contentType">The content type of the created object. If the value is <see langword="null"/> or empty, the content type of the created object is unspecified.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="stream"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <example>
            The following code shows two ways to create an object with custom metadata. The first uses the <paramref name="headers"/>
            argument to this method, and the second shows an alternative method of calling <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateObjectMetadata(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> after
            the object is created.
            <code source="..\Samples\CSharpCodeSamples\ObjectStorageProviderExamples.cs" region="CreateObjectWithMetadata" language="cs"/>
            </example>
            <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.DetectContentType"/>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/PUT_createOrReplaceObject_v1__account___container___object__storage_object_services.html">Create or replace object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetObject(System.String,System.String,System.IO.Stream,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets an object, writing the data to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <remarks>
            This call returns information for the first replicant of the object located in the distributed storage
            system. If changes were made to the specified object that are not yet fully replicated through the
            storage system, the results of this call may not match the most recent information uploaded to Object
            Storage. To force the system to locate the most recent replica instead, set <see cref="F:ConoHaNet.Providers.CloudFilesProvider.Newest"/> to
            <c>"True"</c> in the <paramref name="headers"/> argument.
            </remarks>
            <param name="container">The container name.</param>
            <param name="objectName">The source object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="outputStream">The output stream.</param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="verifyEtag">If <see langword="true"/> and the object includes an ETag, the retrieved data will be verified before returning.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="outputStream"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para><paramref name="verifyEtag"/> is <see langword="true"/>, the object is a static or dynamic large object, and the provider implementation does not support verifying ETags for large objects.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:ConoHaNet.Objects.InvalidETagException">If <paramref name="verifyEtag"/> is <see langword="true"/>, the object includes an ETag header, and the downloaded data does not match the ETag header value.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.Newest"/>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_getObject_v1__account___container___object__storage_object_services.html">Get object content and metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectSaveToFile(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,System.Action{System.Int64},System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets an object, saving the data to the specified file.
            </summary>
            <remarks>
            This call returns information for the first replicant of the object located in the distributed storage
            system. If changes were made to the specified object that are not yet fully replicated through the
            storage system, the results of this call may not match the most recent information uploaded to Object
            Storage. To force the system to locate the most recent replica instead, set <see cref="F:ConoHaNet.Providers.CloudFilesProvider.Newest"/> to
            <c>"True"</c> in the <paramref name="headers"/> argument.
            </remarks>
            <param name="container">The container name.</param>
            <param name="saveDirectory">The destination directory name. Example <localUri>c:\user\</localUri></param>
            <param name="objectName">The source object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="fileName">The destination file name. Example <localUri>image_name1.jpeg</localUri></param>
            <param name="chunkSize">The buffer size to use for copying streaming data.</param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="verifyEtag">If <see langword="true"/> and the object includes an ETag, the retrieved data will be verified before returning.</param>
            <param name="progressUpdated">A callback for progress updates. If the value is <see langword="null"/>, no progress updates are reported.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="saveDirectory"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="saveDirectory"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="chunkSize"/> is less than 0.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">If the directory <paramref name="saveDirectory"/> could not be found.</exception>
            <exception cref="T:System.IO.IOException">If an error occurs while writing to the destination file.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para><paramref name="verifyEtag"/> is <see langword="true"/>, the object is a static or dynamic large object, and the provider implementation does not support verifying ETags for large objects.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:ConoHaNet.Objects.InvalidETagException">If <paramref name="verifyEtag"/> is <see langword="true"/>, the object includes an ETag header, and the downloaded data does not match the ETag header value.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso cref="F:ConoHaNet.Providers.CloudFilesProvider.Newest"/>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/GET_getObject_v1__account___container___object__storage_object_services.html">Get object content and metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.CopyObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Copies an object to a new location within the Object Storage provider.
            </summary>
            <param name="sourceContainer">The source container name.</param>
            <param name="sourceObjectName">The source object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="destinationContainer">The destination container name.</param>
            <param name="destinationObjectName">The destination object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="destinationContentType">The content type of the destination object. If the value is <see langword="null"/> or empty, the content type of the created object is unspecified.</param>
            <param name="headers">A collection of custom HTTP headers to associate with the created object (see <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="sourceContainer"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="sourceObjectName"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationContainer"/> is <see langword="null"/>.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationObjectName"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="sourceContainer"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="sourceObjectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationContainer"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="destinationObjectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">
            If <paramref name="sourceContainer"/> is not a valid container name.
            <para>-or-</para>
            <para>If <paramref name="destinationContainer"/> is not a valid container name.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
            If <paramref name="sourceObjectName"/> is not a valid object name.
            <para>-or-</para>
            <para>If <paramref name="destinationObjectName"/> is not a valid object name.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/COPY_copyObject_v1__account___container___object__storage_object_services.html">Copy object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.MoveObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Moves an object to a new location within the Object Storage provider.
             </summary>
             <remarks>
             The original object is removed only if the move is completed successfully.
            
             <note type="implement">
             If your specific provider does not provide a "Move Object" API function, this
             method may be implemented by performing a <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.CopyObject(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> operation,
             followed by a <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.DeleteObject(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/> operation if the copy completed
             successfully.
             </note>
             </remarks>
             <param name="sourceContainer">The source container name.</param>
             <param name="sourceObjectName">Name of the source object.<remarks>Example image_name.jpeg</remarks></param>
             <param name="destinationContainer">The destination container name.</param>
             <param name="destinationObjectName">Name of the destination object.<remarks>Example image_name.jpeg</remarks></param>
             <param name="destinationContentType">The content type of the destination object. If the value is <see langword="null"/> or empty, the content type of the created object is unspecified.</param>
             <param name="headers">A collection of custom HTTP headers to associate with the object (see <see cref="M:ConoHaNet.Providers.IObjectStorageProvider.GetObjectHeaders(System.String,System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)"/>).</param>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="sourceContainer"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="sourceObjectName"/> is <see langword="null"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationContainer"/> is <see langword="null"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationObjectName"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">
             If <paramref name="sourceContainer"/> is empty.
             <para>-or-</para>
             <para>If <paramref name="sourceObjectName"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationContainer"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="destinationObjectName"/> is empty.</para>
             <para>-or-</para>
             <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">
             If <paramref name="sourceContainer"/> is not a valid container name.
             <para>-or-</para>
             <para>If <paramref name="destinationContainer"/> is not a valid container name.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">
             If <paramref name="sourceObjectName"/> is not a valid object name.
             <para>-or-</para>
             <para>If <paramref name="destinationObjectName"/> is not a valid object name.</para>
             </exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/COPY_copyObject_v1__account___container___object__storage_object_services.html">Copy object (OpenStack Object Storage API v1 Reference)</seealso>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/DELETE_deleteObject_v1__account___container___object__storage_object_services.html">Delete object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.DeleteObject(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Deletes an object from a container.
            </summary>
            <remarks>
            To support large files, the object storage services allows for a single logical file
            to be split into multiple segments. The <paramref name="deleteSegments"/> parameter
            provides a way to delete a segmented file as though it were stored as a single object
            by deleting both the logical file's metadata and the individual segments. The
            <paramref name="deleteSegments"/> parameter is ignored if the specified object is not
            a segmented file.
            </remarks>
            <param name="container">The container name.</param>
            <param name="objectName">The object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="headers">A collection of custom HTTP headers to include with the request.</param>
            <param name="deleteSegments">Indicates whether the file's segments should be deleted if any exist.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="headers"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/manifest-objects.html">Manifest objects (OpenStack Object Storage API v1 Reference)</seealso>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/DELETE_deleteObject_v1__account___container___object__storage_object_services.html">Delete object (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.PurgeObjectFromCDN(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Purges an object from the CDN, sending an email notification to the specified addresses when the object has been purged.
            </summary>
            <param name="container">The container name.</param>
            <param name="objectName">The object name. Example <localUri>image_name.jpeg</localUri></param>
            <param name="emails">The email addresses to notify once the object has been purged. If this value is <see langword="null"/>, no email notifications are sent.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="container"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="container"/> is empty.
            <para>-or-</para>
            <para>If <paramref name="objectName"/> is empty.</para>
            <para>-or-</para>
            <para>If <paramref name="emails"/> contains a null or empty value.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.ContainerNameException">If <paramref name="container"/> is not a valid container name.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.ObjectNameException">If <paramref name="objectName"/> is not a valid object name.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.CDNNotEnabledException">If the specified <paramref name="container"/> is not CDN-enabled.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.rackspace.com/files/api/v1/cf-devguide/content/DELETE_deleteCDNobject_v1__account___object__CDN_Object_Services.html">Delete CDN-Enabled Object (Rackspace Cloud Files Developer Guide - API v1)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetAccountHeaders(System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the non-metadata headers associated with the specified account.
            </summary>
            <remarks>
            <note type="implement">
            The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
            should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
            lookups are not case sensitive.
            </note>
            </remarks>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <returns>A collection of non-metadata headers associated with the account.</returns>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            <para>-or-</para>
            <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showAccountMeta_v1__account__storage_account_services.html">Show account metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.GetAccountMetaData(System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
             <summary>
             Gets the account metadata.
             </summary>
             <remarks>
             The metadata associated with accounts in the Object Storage Service are
             case-insensitive.
            
             <note type="implement">
             The resulting <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary&lt;string, string&gt;</see>
             should use the <see cref="P:System.StringComparer.OrdinalIgnoreCase"/> equality comparer to ensure
             lookups are not case sensitive.
             </note>
             </remarks>
             <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
             <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <returns>A collection of metadata associated with the account.</returns>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             <para>-or-</para>
             <para><paramref name="useInternalUrl"/> is <see langword="true"/> and the provider does not support internal URLs.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             <para>-or-</para>
             <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
             <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/HEAD_showAccountMeta_v1__account__storage_account_services.html">Show account metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Updates the metadata associated with the account. This method is used to add, update, and
            remove metadata items associated with a storage account.
            </summary>
            <remarks>
            Each key/value pair in <paramref name="metadata"/> represents an updated metadata item.
            If the value is <see langword="null"/> or empty, then the metadata item represented by the key is
            removed if it exists. If a metadata item already exists for the key, its value is updated.
            Otherwise, a new metadata item is added for the key/value pair.
            </remarks>
            <param name="metadata">The account metadata to update.</param>
            <param name="region">The region in which to execute this action. If not specified, the user's default region will be used.</param>
            <param name="useInternalUrl"><see langword="true"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/>; otherwise <see langword="false"/> to use the endpoint's <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/>.</param>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="metadata"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="metadata"/> contains two equivalent keys when compared using <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with invalid characters.</para>
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key that is <see langword="null"/> or empty.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>If <paramref name="metadata"/> contains a key or value with characters that are not supported by the implementation.</para>
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            <para>-or-</para>
            <para>If <paramref name="region"/> is <see langword="null"/> and no default region is available for the provider.</para>
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
            <seealso href="http://docs.openstack.org/api/openstack-object-storage/1.0/content/POST_updateAccountMeta_v1__account__storage_account_services.html">Create, update, or delete account metadata (OpenStack Object Storage API v1 Reference)</seealso>
        </member>
        <member name="M:ConoHaNet.Providers.IObjectStorageProvider.UpdateAccountMetadata(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.Boolean,ConoHaNet.Objects.CloudIdentity)">
            <inheritdoc/>
        </member>
        <member name="T:ConoHaNet.Providers.ProviderBase`1">
            <summary>
            Adds common functionality for all ConoHa Providers.
            </summary>
            <typeparam name="TProvider">The service provider interface this object implements.</typeparam>
            <threadsafety static="true" instance="false"/>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1.TimeSpan20sec">
            <summary>
            20 seconds TimeSpan
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1.IdentityProvider">
            <summary>
            The <see cref="T:ConoHaNet.Providers.IIdentityProvider"/> to use for authenticating requests to this provider.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1.RestService">
            <summary>
            The REST service implementation to use for requests sent from this provider.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1.DefaultIdentity">
            <summary>
            The default identity to use when none is specified in the specific request.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1.ResponseCodeValidator">
            <summary>
            The validator to use for determining whether a particular HTTP status code represents
            a success or failure.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1.IsAdminMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1._connectionLimit">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Providers.ProviderBase`1.ConnectionLimit"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1._defaultRegion">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Providers.ProviderBase`1.DefaultRegion"/> property.
            </summary>
        </member>
        <member name="F:ConoHaNet.Providers.ProviderBase`1._backoffPolicy">
            <summary>
            This is the backing field for the <see cref="P:ConoHaNet.Providers.ProviderBase`1.BackoffPolicy"/> property.
            </summary>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.ProviderBase`1"/> class using
            the specified default identity, default region, identity provider, and REST service
            implementation, and the default HTTP response code validator.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:net.openstack.Providers.Rackspace.ExtendedJsonRestServices"/>.</param>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.#ctor(ConoHaNet.Objects.CloudIdentity,System.String,ConoHaNet.Providers.IIdentityProvider,JSIStudios.SimpleRESTServices.Client.IRestService,net.openstack.Core.Validators.IHttpResponseCodeValidator,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ConoHaNet.Providers.ProviderBase`1"/> class
            using the specified values.
            </summary>
            <param name="defaultIdentity">The default identity to use for calls that do not explicitly specify an identity. If this value is <see langword="null"/>, no default identity is available so all calls must specify an explicit identity.</param>
            <param name="defaultRegion">The default region to use for calls that do not explicitly specify a region. If this value is <see langword="null"/>, the default region for the user will be used; otherwise if the service uses region-specific endpoints all calls must specify an explicit region.</param>
            <param name="identityProvider">The identity provider to use for authenticating requests to this provider. If this value is <see langword="null"/>, a new instance of <see cref="T:ConoHaNet.Providers.CloudIdentityProvider"/> is created using <paramref name="defaultIdentity"/> as the default identity.</param>
            <param name="restService">The implementation of <see cref="T:JSIStudios.SimpleRESTServices.Client.IRestService"/> to use for executing REST requests. If this value is <see langword="null"/>, the provider will use a new instance of <see cref="T:net.openstack.Providers.Rackspace.ExtendedJsonRestServices"/>.</param>
            <param name="httpStatusCodeValidator">The HTTP status code validator to use. If this value is <see langword="null"/>, the provider will use <see cref="P:net.openstack.Providers.Rackspace.Validators.HttpResponseCodeValidator.Default"/>.</param>
            <param name="isAdminMode"></param>
        </member>
        <member name="E:ConoHaNet.Providers.ProviderBase`1.BeforeAsyncWebRequest">
            <summary>
            This event is fired immediately before sending an asynchronous web request.
            </summary>
            <preliminary/>
        </member>
        <member name="E:ConoHaNet.Providers.ProviderBase`1.AfterAsyncWebResponse">
            <summary>
            This event is fired when the result of an asynchronous web request is received.
            </summary>
            <preliminary/>
        </member>
        <member name="P:ConoHaNet.Providers.ProviderBase`1.ConnectionLimit">
            <summary>
            Gets or sets the maximum number of connections allowed on the <see cref="T:System.Net.ServicePoint"/>
            objects used for requests. If the value is <see langword="null"/>, the connection limit value for the
            <see cref="T:System.Net.ServicePoint"/> object is not altered.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="value"/> is less than or equal to 0.</exception>
        </member>
        <member name="P:ConoHaNet.Providers.ProviderBase`1.DefaultRegion">
            <summary>
            Gets the default region for this provider instance, if one was specified.
            </summary>
            <value>
            The default region to use for API calls where an explicit region is not specified in the call;
            or <see langword="null"/> to use the default region associated with the identity making the call.
            </value>
        </member>
        <member name="P:ConoHaNet.Providers.ProviderBase`1.BackoffPolicy">
            <summary>
            Gets or sets the back-off policy to use for polling operations.
            </summary>
            <remarks>
            If this value is set to <see langword="null"/>, the default back-off policy for the current
            provider will be used.
            </remarks>
            <preliminary/>
        </member>
        <member name="P:ConoHaNet.Providers.ProviderBase`1.DefaultBackoffPolicy">
            <summary>
            Gets the default back-off policy for the current provider.
            </summary>
            <remarks>
            The default implementation returns <see cref="P:net.openstack.Core.BackoffPolicy.Default"/>.
            Providers may override this property to change the default back-off policy.
            </remarks>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.ExecuteRESTRequest``1(ConoHaNet.Objects.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)">
             <summary>
             Execute a REST request with an <see cref="T:System.Object"/> body and strongly-typed result.
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Core.Validators.IHttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
            
             <para>This method uses <see cref="M:JSIStudios.SimpleRESTServices.Client.IRestService.Execute``1(System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings)"/> to handle the underlying REST request(s).</para>
             </remarks>
             <typeparam name="T">The type of the data returned in the REST response.</typeparam>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <see langword="null"/>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <see langword="null"/>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <see langword="null"/>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><see langword="true"/> if this request is retrying a previously failed operation; otherwise, <see langword="false"/>.</param>
             <param name="isTokenRequest"><see langword="true"/> if this is an authentication request; otherwise, <see langword="false"/>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="settings">
             The settings to use for the request. This parameter is optional. If the value
             is <see langword="null"/>, <see cref="M:ConoHaNet.Providers.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <returns>
             Returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response`1"/> object containing the HTTP status code,
             headers, body, and strongly-typed data from the REST response.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.ExecuteRESTRequest(ConoHaNet.Objects.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)">
             <summary>
             Execute a REST request with an <see cref="T:System.Object"/> body and basic result (text or no content).
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Core.Validators.IHttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
            
             <para>This method uses <see cref="M:JSIStudios.SimpleRESTServices.Client.IRestService.Execute(System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings)"/> to handle the underlying REST request(s).</para>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <see langword="null"/>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <see langword="null"/>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <see langword="null"/>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><see langword="true"/> if this request is retrying a previously failed operation; otherwise, <see langword="false"/>.</param>
             <param name="isTokenRequest"><see langword="true"/> if this is an authentication request; otherwise, <see langword="false"/>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="settings">
             The settings to use for the request. This parameter is optional. If the value
             is <see langword="null"/>, <see cref="M:ConoHaNet.Providers.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <returns>
             Returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object containing the HTTP status code,
             headers, and body from the REST response.
             </returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.ExecuteRESTRequest(ConoHaNet.Objects.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Func{System.Net.HttpWebResponse,System.Boolean,JSIStudios.SimpleRESTServices.Client.Response},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)">
             <summary>
             Execute a REST request with an <see cref="T:System.Object"/> body and user-defined callback function
             for constructing the resulting <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object.
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Core.Validators.IHttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
            
             <para>This method uses <see cref="M:JSIStudios.SimpleRESTServices.Client.IRestService.Execute(System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Func{System.Net.HttpWebResponse,System.Boolean,JSIStudios.SimpleRESTServices.Client.Response},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings)"/> to handle the underlying REST request(s).</para>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="buildResponseCallback">
             A user-specified function used to construct the resulting <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/>
             object from the <see cref="T:System.Net.HttpWebResponse"/> and a Boolean value specifying
             whether or not a <see cref="T:System.Net.WebException"/> was thrown during the request. If
             this value is <see langword="null"/>, this method is equivalent to calling
             <see cref="M:ConoHaNet.Providers.ProviderBase`1.ExecuteRESTRequest(ConoHaNet.Objects.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings)"/>.
             </param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <see langword="null"/>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <see langword="null"/>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <see langword="null"/>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><see langword="true"/> if this request is retrying a previously failed operation; otherwise, <see langword="false"/>.</param>
             <param name="isTokenRequest"><see langword="true"/> if this is an authentication request; otherwise, <see langword="false"/>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="settings">
             The settings to use for the request. This parameter is optional. If the value
             is <see langword="null"/>, <see cref="M:ConoHaNet.Providers.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <returns>A <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object containing the result of the REST call.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.ExecuteRESTRequest``1(ConoHaNet.Objects.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings,System.Func{System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},JSIStudios.SimpleRESTServices.Client.RequestSettings,``0})">
             <summary>
             Execute a REST request, using a callback method to deserialize the result into a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> or <see cref="T:JSIStudios.SimpleRESTServices.Client.Response`1"/> object.
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method calls <see cref="M:net.openstack.Core.Validators.IHttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
             </remarks>
             <typeparam name="T">The <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> type used for representing the response to the REST call.</typeparam>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="body">
             The body of the request. This parameter is optional. If the value is <see langword="null"/>,
             the request is sent without a body.
             </param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <see langword="null"/>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <see langword="null"/>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><see langword="true"/> if this request is retrying a previously failed operation; otherwise, <see langword="false"/>.</param>
             <param name="isTokenRequest"><see langword="true"/> if this is an authentication request; otherwise, <see langword="false"/>. Authentication requests do not perform separate authentication prior to the call.</param>
             <param name="requestSettings">
             The settings to use for the request. This parameter is optional. If the value
             is <see langword="null"/>, <see cref="M:ConoHaNet.Providers.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <param name="callback">A callback function that prepares and executes the HTTP request, and returns the deserialized result as an object of type <typeparamref name="T"/>.</param>
             <returns>A response object of type <typeparamref name="T"/> containing the result of the REST call.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="absoluteUri"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.StreamRESTRequest(ConoHaNet.Objects.CloudIdentity,System.Uri,JSIStudios.SimpleRESTServices.Client.HttpMethod,System.IO.Stream,System.Int32,System.Int64,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean,JSIStudios.SimpleRESTServices.Client.RequestSettings,System.Action{System.Int64})">
             <summary>
             Executes a streaming REST request with a <see cref="T:System.IO.Stream"/> and basic result (text or no content).
             </summary>
             <remarks>
             If the request fails due to an authorization failure, i.e. the <see cref="P:JSIStudios.SimpleRESTServices.Client.Response.StatusCode"/> is <see cref="F:System.Net.HttpStatusCode.Unauthorized"/>,
             the request is attempted a second time.
            
             <para>This method uses an HTTP request timeout of 4 hours.</para>
            
             <para>This method calls <see cref="M:net.openstack.Core.Validators.IHttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)"/>, which results in a <see cref="T:net.openstack.Core.Exceptions.Response.ResponseException"/> if the request fails.</para>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="absoluteUri">The absolute URI for the request.</param>
             <param name="method">The HTTP method to use for the request.</param>
             <param name="stream">A stream providing the body of the request.</param>
             <param name="chunkSize">The size of the buffer used for copying data from <paramref name="stream"/> to the HTTP request stream.</param>
             <param name="maxReadLength">The maximum number of bytes to send with the request. This parameter is optional. If the value is 0, the request will include all data from <paramref name="stream"/>.</param>
             <param name="queryStringParameter">
             A collection of parameters to add to the query string portion of the request
             URI. This parameter is optional. If the value is <see langword="null"/>, no parameters are
             added to the query string.
             </param>
             <param name="headers">
             A collection of custom HTTP headers to include with the request. This parameter
             is optional. If the value is <see langword="null"/>, no custom headers are added to the HTTP
             request.
             </param>
             <param name="isRetry"><see langword="true"/> if this request is retrying a previously failed operation; otherwise, <see langword="false"/>.</param>
             <param name="requestSettings">
             The settings to use for the request. This parameter is optional. If the value
             is <see langword="null"/>, <see cref="M:ConoHaNet.Providers.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})"/> will be called to
             provide the settings.
             </param>
             <param name="progressUpdated">A user-defined callback function for reporting progress of the send operation. This parameter is optional. If the value is <see langword="null"/>, the method does not report progress updates to the caller.</param>
             <returns>
             Returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Response"/> object containing the HTTP status code,
             headers, and body from the REST response.
             </returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="absoluteUri"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="stream"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentOutOfRangeException">
             If <paramref name="chunkSize"/> is less than or equal to 0.
             <para>-or-</para>
             <para>If <paramref name="maxReadLength"/> is less than 0.</para>
             </exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="method"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.BuildDefaultRequestSettings(System.Collections.Generic.IEnumerable{System.Net.HttpStatusCode})">
             <summary>
             Gets the default <see cref="T:JSIStudios.SimpleRESTServices.Client.RequestSettings"/> object to use for REST requests sent by this provider.
             </summary>
             <remarks>
             The base implementation returns a <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRequestSettings"/> object initialized with the following values.
            
             <list type="bullet">
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.RetryCount"/> is 0.</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.RetryDelay"/> is 200 milliseconds.</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.Non200SuccessCodes"/> contains <see cref="F:System.Net.HttpStatusCode.Unauthorized"/> and <see cref="F:System.Net.HttpStatusCode.Conflict"/>, along with the values in <paramref name="non200SuccessCodes"/> (if any).</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.UserAgent"/> is set to <see cref="P:ConoHaNet.Objects.UserAgentGenerator.UserAgent"/>.</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.AllowZeroContentLength"/> is set to <see langword="true"/>.</item>
             <item>The <see cref="P:JSIStudios.SimpleRESTServices.Client.RequestSettings.ConnectionLimit"/> is set to <see cref="P:ConoHaNet.Providers.ProviderBase`1.ConnectionLimit"/>.</item>
             <item>Other properties are set to the default values for <see cref="T:JSIStudios.SimpleRESTServices.Client.Json.JsonRequestSettings"/>.</item>
             </list>
            
             <note type="implement">The caller may directly modify the object returned by this call, so a new object should be returned each time this method is called.</note>
             </remarks>
             <param name="non200SuccessCodes">A collection of non-200 HTTP status codes to consider as "success" codes for the request. This value may be <see langword="null"/> or an empty collection to use the default value.</param>
             <returns>A <see cref="T:JSIStudios.SimpleRESTServices.Client.RequestSettings"/> object containing the default settings to use for a REST request sent by this provider.</returns>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String,System.String,System.String)">
             <summary>
             Gets the <see cref="T:ConoHaNet.Objects.Endpoint"/> associated with the specified service in the user's service catalog.
             </summary>
             <remarks>
             The endpoint returned by this method may not be an exact match for all arguments to this method.
             This method filters the service catalog in the following order to locate an acceptable endpoint.
             If more than one acceptable endpoint remains after all filters are applied, it is unspecified
             which one is returned by this method.
            
             <list type="number">
             <item>This method only considers services which match the specified <paramref name="serviceType"/>.</item>
             <item>This method attempts to filter the remaining items to those matching <paramref name="serviceName"/>. If <paramref name="serviceName"/> is <see langword="null"/>, or if no services match the specified name, <em>this argument is ignored</em>.</item>
             <item>This method attempts to filter the remaining items to those matching <paramref name="region"/>. If <paramref name="region"/> is <see langword="null"/>, the user's default region is used. If no services match the specified region, <em>this argument is ignored</em>.</item>
             <item>If the <paramref name="region"/> argument is ignored as a result of the previous rule, this method filters the remaining items to only include region-independent endpoints, i.e. endpoints where <see cref="P:ConoHaNet.Objects.Endpoint.Region"/> is <see langword="null"/> or empty.</item>
             </list>
             </remarks>
             <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
             <param name="serviceType">The service type (see <see cref="P:ConoHaNet.Objects.ServiceCatalog.Type"/>).</param>
             <param name="serviceName">The preferred name of the service (see <see cref="P:ConoHaNet.Objects.ServiceCatalog.Name"/>).</param>
             <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
             <returns>An <see cref="T:ConoHaNet.Objects.Endpoint"/> object containing the details of the requested service.</returns>
             <exception cref="T:System.ArgumentNullException">If <paramref name="serviceType"/> is <see langword="null"/>.</exception>
             <exception cref="T:System.ArgumentException">If <paramref name="serviceType"/> is empty.</exception>
             <exception cref="T:System.NotSupportedException">
             If the provider does not support the given <paramref name="identity"/> type.
             <para>-or-</para>
             <para>The specified <paramref name="region"/> is not supported.</para>
             </exception>
             <exception cref="T:System.InvalidOperationException">
             If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
             </exception>
             <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/>, the service does not provide a region-independent endpoint, and no default region is available for the identity or provider.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
             <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetPublicServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String,System.String,System.String)">
            <summary>
            Gets the <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/> for the <see cref="T:ConoHaNet.Objects.Endpoint"/> associated with the
            specified service in the user's service catalog.
            </summary>
            <remarks>
            For details on how endpoint resolution is performed, see <see cref="M:ConoHaNet.Providers.ProviderBase`1.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String,System.String,System.String)"/>.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="serviceType">The service type (see <see cref="P:ConoHaNet.Objects.ServiceCatalog.Type"/>).</param>
            <param name="serviceName">The preferred name of the service (see <see cref="P:ConoHaNet.Objects.ServiceCatalog.Name"/>).</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The <see cref="P:ConoHaNet.Objects.Endpoint.PublicURL"/> value for the <see cref="T:ConoHaNet.Objects.Endpoint"/> object containing the details of the requested service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serviceType"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serviceType"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetInternalServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String,System.String,System.String)">
            <summary>
            Gets the <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/> for the <see cref="T:ConoHaNet.Objects.Endpoint"/> associated with the
            specified service in the user's service catalog.
            </summary>
            <remarks>
            For details on how endpoint resolution is performed, see <see cref="M:ConoHaNet.Providers.ProviderBase`1.GetServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String,System.String,System.String)"/>.
            </remarks>
            <param name="identity">The cloud identity to use for this request. If not specified, the default identity for the current provider instance will be used.</param>
            <param name="serviceType">The service type (see <see cref="P:ConoHaNet.Objects.ServiceCatalog.Type"/>).</param>
            <param name="serviceName">The preferred name of the service (see <see cref="P:ConoHaNet.Objects.ServiceCatalog.Name"/>).</param>
            <param name="region">The preferred region for the service. If this value is <see langword="null"/>, the user's default region will be used.</param>
            <returns>The <see cref="P:ConoHaNet.Objects.Endpoint.InternalURL"/> value for the <see cref="T:ConoHaNet.Objects.Endpoint"/> object containing the details of the requested service.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="serviceType"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="serviceType"/> is empty.</exception>
            <exception cref="T:System.NotSupportedException">
            If the provider does not support the given <paramref name="identity"/> type.
            <para>-or-</para>
            <para>The specified <paramref name="region"/> is not supported.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the provider.
            </exception>
            <exception cref="T:net.openstack.Core.Exceptions.NoDefaultRegionSetException">If <paramref name="region"/> is <see langword="null"/> and no default region is available for the identity or provider.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthenticationException">If no service catalog is available for the user.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.UserAuthorizationException">If no endpoint is available for the requested service.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If the REST API request failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetAdminServiceEndpoint(ConoHaNet.Objects.CloudIdentity,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <param name="serviceType"></param>
            <param name="serviceName"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.CheckResponse(JSIStudios.SimpleRESTServices.Client.Response)">
            <summary>
            Validate the response to an HTTP request.
            </summary>
            <remarks>
            The validation is performed by calling <see cref="M:net.openstack.Core.Validators.IHttpResponseCodeValidator.Validate(JSIStudios.SimpleRESTServices.Client.Response)"/>.
            </remarks>
            <param name="response">The response to the HTTP request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="response"/> is <see langword="null"/>.</exception>
            <exception cref="T:net.openstack.Core.Exceptions.Response.ResponseException">If <paramref name="response"/> indicates the REST API call failed.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.BuildCloudServersProviderAwareObject``1(System.Collections.Generic.IEnumerable{``0},System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the <see cref="P:ConoHaNet.Objects.ProviderStateBase`1.Provider"/>, <see cref="P:ConoHaNet.Objects.ProviderStateBase`1.Region"/>,
            and <see cref="P:ConoHaNet.Objects.ProviderStateBase`1.Identity"/> properties of a collection of object to values
            matching the request parameters used when the objects were created.
            </summary>
            <typeparam name="T">The type of the provider-aware object to initialize.</typeparam>
            <param name="input">The collection of provider-aware objects.</param>
            <param name="region">The region used for the request that created this object.</param>
            <param name="identity">The identity used for the request that created this object.</param>
            <returns>This method returns an enumerable collection containing the objects in <paramref name="input"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">If the current provider object is not an instance of <typeparamref name="TProvider"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.BuildCloudServersProviderAwareObject``1(``0,System.String,ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Sets the <see cref="P:ConoHaNet.Objects.ProviderStateBase`1.Provider"/>, <see cref="P:ConoHaNet.Objects.ProviderStateBase`1.Region"/>,
            and <see cref="P:ConoHaNet.Objects.ProviderStateBase`1.Identity"/> properties of an object to values
            matching the request parameters used when the object was created.
            </summary>
            <typeparam name="T">The type of the provider-aware object to initialize.</typeparam>
            <param name="input">The provider-aware object.</param>
            <param name="region">The region used for the request that created this object.</param>
            <param name="identity">The identity used for the request that created this object.</param>
            <returns>This method returns the <paramref name="input"/> argument.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="input"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.InvalidOperationException">If the current provider object is not an instance of <typeparamref name="TProvider"/>.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetDefaultIdentity(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Gets the effective cloud identity to use for a request based on the <paramref name="identity"/>
            argument and the configured default identity.
            </summary>
            <param name="identity">The explicitly specified identity for the request, or <see langword="null"/> if no identity was specified for the request.</param>
            <returns>The effective identity to use for the request, or <see langword="null"/> if <paramref name="identity"/> is <see langword="null"/> and no default identity is available.</returns>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.BuildOptionalParameterList(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a new dictionary from <paramref name="optionalParameters"/> with all
            entries with null or empty values removed.
            </summary>
            <param name="optionalParameters">The dictionary of optional parameters.</param>
            <returns>
            Returns a new dictionary created from <paramref name="optionalParameters"/> with all
            entries with <see langword="null"/> or empty values removed. If <paramref name="optionalParameters"/>
            is <see langword="null"/>, or if the resulting dictionary is empty, this method returns <see langword="null"/>.
            </returns>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.CheckIdentity(ConoHaNet.Objects.CloudIdentity)">
            <summary>
            Ensures that an identity is available for a request.
            </summary>
            <param name="identity">The explicitly specified identity for the request, or <see langword="null"/> if the request should use the default identity for the provider.</param>
            <exception cref="T:System.InvalidOperationException">If <paramref name="identity"/> is <see langword="null"/> and no default identity is available for the request.</exception>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.PrepareRequestAsyncFunc(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.UriTemplate,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})">
            <summary>
            Creates a task continuation function responsible for creating an <see cref="T:System.Net.HttpWebRequest"/> for use
            in asynchronous REST API calls. The input to the continuation function is a completed task which
            computes an <see cref="T:ConoHaNet.Objects.IdentityToken"/> for an authenticated user and a base URI for use in binding
            the URI templates for REST API calls. The continuation function calls <see cref="M:ConoHaNet.Providers.ProviderBase`1.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,ConoHaNet.Objects.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})"/>
            to create and prepare the resulting <see cref="T:System.Net.HttpWebRequest"/>.
            </summary>
            <param name="method">The <see cref="T:JSIStudios.SimpleRESTServices.Client.HttpMethod"/> to use for the request.</param>
            <param name="template">The <see cref="T:System.UriTemplate"/> for the target URI.</param>
            <param name="parameters">A collection of parameters for binding the URI template in a call to <see cref="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})"/>.</param>
            <param name="uriTransform">An optional transformation to apply to the bound URI for the request. If this value is <see langword="null"/>, the result of binding the <paramref name="template"/> with <paramref name="parameters"/> will be used as the absolute request URI.</param>
            <returns>A task continuation delegate which can be used to create an <see cref="T:System.Net.HttpWebRequest"/> following the completion of a task that obtains an <see cref="T:ConoHaNet.Objects.IdentityToken"/> and the base URI for a service.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="template"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="parameters"/> is <see langword="null"/>.</para>
            </exception>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.PrepareRequestAsyncFunc``1(JSIStudios.SimpleRESTServices.Client.HttpMethod,System.UriTemplate,System.Collections.Generic.IDictionary{System.String,System.String},``0,System.Func{System.Uri,System.Uri})">
            <summary>
            Creates a task continuation function responsible for creating an <see cref="T:System.Net.HttpWebRequest"/> for use
            in asynchronous REST API calls. The input to the continuation function is a completed task which
            computes an <see cref="T:ConoHaNet.Objects.IdentityToken"/> for an authenticated user and a base URI for use in binding
            the URI templates for REST API calls. The continuation function calls <see cref="M:ConoHaNet.Providers.ProviderBase`1.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,ConoHaNet.Objects.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})"/>
            to create and prepare the resulting <see cref="T:System.Net.HttpWebRequest"/>, and then asynchronously obtains
            the request stream for the request and writes the specified <paramref name="body"/> in JSON notation.
            </summary>
            <typeparam name="TBody">The type modeling the body of the request.</typeparam>
            <param name="method">The <see cref="T:JSIStudios.SimpleRESTServices.Client.HttpMethod"/> to use for the request.</param>
            <param name="template">The <see cref="T:System.UriTemplate"/> for the target URI.</param>
            <param name="parameters">A collection of parameters for binding the URI template in a call to <see cref="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})"/>.</param>
            <param name="body">A object modeling the body of the web request. The object is serialized in JSON notation for inclusion in the request.</param>
            <param name="uriTransform">An optional transformation to apply to the bound URI for the request. If this value is <see langword="null"/>, the result of binding the <paramref name="template"/> with <paramref name="parameters"/> will be used as the absolute request URI.</param>
            <returns>A task continuation delegate which can be used to create an <see cref="T:System.Net.HttpWebRequest"/> following the completion of a task that obtains an <see cref="T:ConoHaNet.Objects.IdentityToken"/> and the base URI for a service.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="template"/> is <see langword="null"/>.
            <para>-or-</para>
            <para>If <paramref name="parameters"/> is <see langword="null"/>.</para>
            </exception>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.EncodeRequestBodyImpl``1(System.Net.HttpWebRequest,``0)">
            <summary>
            Encode the body of a request, and update the <see cref="T:System.Net.HttpWebRequest"/> properties
            as necessary to support the encoded body.
            </summary>
            <remarks>
            The default implementation uses <see cref="T:Newtonsoft.Json.JsonConvert"/> to convert <paramref name="body"/>
            to JSON notation, and then uses <see cref="P:System.Text.Encoding.UTF8"/> to encode the text. The
            <see cref="P:System.Net.HttpWebRequest.ContentType"/> and <see cref="P:System.Net.HttpWebRequest.ContentLength"/>
            properties are updated to reflect the JSON content.
            </remarks>
            <typeparam name="TBody">The type modeling the body of the request.</typeparam>
            <param name="request">The <see cref="T:System.Net.HttpWebRequest"/> object for the request.</param>
            <param name="body">The object modeling the body of the request.</param>
            <returns>The encoded content to send with the <see cref="T:System.Net.HttpWebRequest"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="request"/> is <see langword="null"/>.</exception>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.PrepareRequestImpl(JSIStudios.SimpleRESTServices.Client.HttpMethod,ConoHaNet.Objects.IdentityToken,System.UriTemplate,System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Uri,System.Uri})">
             <summary>
             Creates and prepares an <see cref="T:System.Net.HttpWebRequest"/> for an asynchronous REST API call.
             </summary>
             <remarks>
             The base implementation sets the following properties of the web request.
            
             <list type="table">
             <listheader>
             <term>Property</term>
             <term>Value</term>
             </listheader>
             <item>
             <description><see cref="P:System.Net.WebRequest.Method"/></description>
             <description><paramref name="method"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.HttpWebRequest.Accept"/></description>
             <description><see cref="F:JSIStudios.SimpleRESTServices.Client.Json.JsonRequestSettings.JsonContentType"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.WebRequest.Headers"/><literal>["X-Auth-Token"]</literal></description>
             <description><see name="IdentityToken.Id"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.HttpWebRequest.UserAgent"/></description>
             <description><see cref="P:ConoHaNet.Objects.UserAgentGenerator.UserAgent"/></description>
             </item>
             <item>
             <description><see cref="P:System.Net.WebRequest.Timeout"/></description>
             <description>14400 seconds (4 hours)</description>
             </item>
             <item>
             <description><see cref="P:System.Net.ServicePoint.ConnectionLimit"/></description>
             <description><see cref="P:ConoHaNet.Providers.ProviderBase`1.ConnectionLimit"/></description>
             </item>
             </list>
             </remarks>
             <param name="method">The <see cref="T:JSIStudios.SimpleRESTServices.Client.HttpMethod"/> to use for the request.</param>
             <param name="identityToken">The <see cref="T:ConoHaNet.Objects.IdentityToken"/> to use for making an authenticated REST API call.</param>
             <param name="template">The <see cref="T:System.UriTemplate"/> for the target URI.</param>
             <param name="baseUri">The base URI to use for binding the URI template.</param>
             <param name="parameters">A collection of parameters for binding the URI template in a call to <see cref="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})"/>.</param>
             <param name="uriTransform">An optional transformation to apply to the bound URI for the request. If this value is <see langword="null"/>, the result of binding the <paramref name="template"/> with <paramref name="parameters"/> will be used as the absolute request URI.</param>
             <returns>An <see cref="T:System.Net.HttpWebRequest"/> to use for making the asynchronous REST API call.</returns>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="identityToken"/> is <see langword="null"/>.
             <para>-or-</para>
             <para>If <paramref name="template"/> is <see langword="null"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="baseUri"/> is <see langword="null"/>.</para>
             <para>-or-</para>
             <para>If <paramref name="parameters"/> is <see langword="null"/>.</para>
             </exception>
             <exception cref="T:System.ArgumentException">If <paramref name="baseUri"/> is not an absolute URI.</exception>
             <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetBaseUriAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the base absolute URI to use for making asynchronous REST API calls to this service.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain
            a <see cref="T:System.Uri"/> representing the base absolute URI for the service.
            </returns>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.AuthenticateServiceAsync(System.Threading.CancellationToken)">
            <summary>
            Authenticate with the identity service prior to making an asynchronous REST API call.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the task
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain
            a tuple containing the authentication information. The first element of the tuple is
            an <see cref="T:ConoHaNet.Objects.IdentityToken"/> for the authenticated user, and the second element is
            a base absolute <see cref="T:System.Uri"/> the service should use for making authenticated
            asynchronous web requests.
            </returns>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.OnBeforeAsyncWebRequest(System.Net.HttpWebRequest)">
            <summary>
            Invokes the <see cref="E:ConoHaNet.Providers.ProviderBase`1.BeforeAsyncWebRequest"/> event for the specified <paramref name="request"/>.
            </summary>
            <param name="request">The web request.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="request"/> is <see langword="null"/>.</exception>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.OnAfterAsyncWebResponse(System.Net.HttpWebResponse)">
            <summary>
            Invokes the <see cref="E:ConoHaNet.Providers.ProviderBase`1.AfterAsyncWebResponse"/> event for the specified <paramref name="response"/>.
            </summary>
            <param name="response">The web response.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="response"/> is <see langword="null"/>.</exception>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetResponseAsyncFunc(System.Threading.CancellationToken)">
            <summary>
            Gets the response from an asynchronous web request, with the body of the response (if any) returned as a string.
            </summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A continuation function delegate which takes an asynchronously prepared <see cref="T:System.Net.HttpWebRequest"/>
            and returns the resulting body of the operation, if any, as a string.
            </returns>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.GetResponseAsyncFunc``1(System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.Tasks.Task{``0}})">
            <summary>
            Gets the response from an asynchronous web request, with the body of the response (if any) returned as an object of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type for the response object.</typeparam>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <param name="parseResult">
            A continuation function delegate which parses the body of the <see cref="T:System.Net.HttpWebResponse"/>
            and returns an object of type <typeparamref name="T"/>, as an asynchronous operation. If
            this value is <see langword="null"/>, the conversion will be performed by calling <see cref="M:ConoHaNet.Providers.ProviderBase`1.ParseJsonResultImplAsync``1(System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.CancellationToken)"/>.
            </param>
            <returns>
            A continuation function delegate which takes an asynchronously prepared <see cref="T:System.Net.HttpWebRequest"/>
            and returns the resulting body of the operation, if any, as an instance of type <typeparamref name="T"/>.
            </returns>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.RequestResourceImplAsync(System.Threading.Tasks.Task{System.Net.HttpWebRequest},System.Threading.CancellationToken)">
            <summary>
            This method calls <see cref="M:ConoHaNet.Providers.ProviderBase`1.OnBeforeAsyncWebRequest(System.Net.HttpWebRequest)"/> and then asynchronously gets the response
            to the web request.
            </summary>
            <remarks>
            This method is the first step of implementing <see cref="M:ConoHaNet.Providers.ProviderBase`1.GetResponseAsyncFunc(System.Threading.CancellationToken)"/> and <see cref="M:ConoHaNet.Providers.ProviderBase`1.GetResponseAsyncFunc``1(System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.Tasks.Task{``0}})"/>.
            </remarks>
            <param name="task">A task which created and prepared the <see cref="T:System.Net.HttpWebRequest"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="task"/> is <see langword="null"/>.</exception>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.ReadResultImpl(System.Threading.Tasks.Task{System.Net.WebResponse},System.Threading.CancellationToken)">
            <summary>
            This method reads the complete body of an asynchronous <see cref="T:System.Net.WebResponse"/> as a string.
            </summary>
            <param name="task">A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation to get the <see cref="T:System.Net.WebResponse"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>A <see cref="T:System.Tuple`2"/> object. The first element of the tuple contains the
            <see cref="T:System.Net.WebResponse"/> provided by <paramref name="task"/> as an <see cref="T:System.Net.HttpWebResponse"/>.
            The second element of the tuple contains the complete body of the response as a string.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="task"/> is <see langword="null"/>.</exception>
            <preliminary/>
        </member>
        <member name="M:ConoHaNet.Providers.ProviderBase`1.ParseJsonResultImplAsync``1(System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.CancellationToken)">
            <summary>
            Provides a default object parser for <see cref="M:ConoHaNet.Providers.ProviderBase`1.GetResponseAsyncFunc``1(System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Tuple{System.Net.HttpWebResponse,System.String}},System.Threading.Tasks.Task{``0}})"/> which converts the
            body of an <see cref="T:System.Net.HttpWebResponse"/> to an object of type <typeparamref name="T"/> by calling
            <see cref="M:Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String)"/>
            </summary>
            <typeparam name="T">The type for the response object.</typeparam>
            <param name="task">A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation to get the <see cref="T:System.Net.WebResponse"/>.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that the task will observe.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation. When the operation
            completes successfully, the <see cref="P:System.Threading.Tasks.Task`1.Result"/> property will contain an
            object of type <typeparamref name="T"/> representing the serialized body of the response.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="task"/> is <see langword="null"/>.</exception>
            <preliminary/>
        </member>
    </members>
</doc>
